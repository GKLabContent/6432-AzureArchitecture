<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Batch</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler">
            <summary>
            A <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> which you can use to specify under what conditions an operation to
            add multiple tasks to a job should retry, terminate or be considered successful.
            </summary>
            <remarks>You do not need to specify this behavior explicitly; if you do not, a default behavior
            is used.  This behavior uses the <see cref="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.DefaultAddTaskCollectionResultHandler(Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken)"/>
            criteria.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.ResultHandler">
            <summary>
            Gets or sets the function that defines whether a particular Add Task operation is considered
            successful or unsuccessful, and whether it may be retried.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.#ctor(System.Func{Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken,Microsoft.Azure.Batch.AddTaskResultStatus})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> class with the specified result handler function.
            </summary>
            <param name="resultHandler">A function that defines whether a particular Add Task operation is considered
            successful or unsuccessful, and whether it may be retried.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.DefaultAddTaskCollectionResultHandler(Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken)">
            <summary>
            The default result handler for the <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior. This handler
            treats success and 'TaskExists' errors as successful, retries server errors (HTTP 5xx), and throws
            <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException"/> on client error (HTTP 4xx).
            </summary>
            <param name="addTaskResult">The result of a single Add Task operation.</param>
            <param name="cancellationToken">The cancellation token associated with the AddTaskCollection operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.AddTaskResultStatus"/> which indicates whether the <paramref name="addTaskResult"/>
            is classified as a success or as requiring a retry.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskResult">
            <summary>
            Result for a single task added as part of a collection of tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Task">
            <summary>
            Gets details of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.RetryCount">
            <summary>
            Gets the number of times the Add Task operation was retried for this task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTaskResult.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Error">
            <summary>
            Gets the error caught while attempting to add the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.ETag">
            <summary>
            Gets an ETag associated with a successfully added task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.LastModified">
            <summary>
            Gets the last modified time associated with a successfully added task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Location">
            <summary>
            Gets the URL of a successfully added task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Status">
            <summary>
            Gets the status of the add task request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.TaskId">
            <summary>
            Gets the id of the task which this result applies to.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskResultStatus">
            <summary>
            Used by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> to classify an <see cref="T:Microsoft.Azure.Batch.AddTaskResult"/> as successful or
            requiring a retry.
            </summary>
            <remarks>AddTaskResultStatus is not used to report non-retryable failure; a result handler should throw
            <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException"/> for that.</remarks>
        </member>
        <member name="F:Microsoft.Azure.Batch.AddTaskResultStatus.Success">
            <summary>
            Classifies the result as a success.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.AddTaskResultStatus.Retry">
            <summary>
            Classifies the result as requiring a retry.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTasksWorkflowManager">
            <summary>
            Manages the AddTasks workflow, performs multiple CloudTaskAdd requests, and handles retries/exception handling.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.#ctor(Microsoft.Azure.Batch.JobOperations,System.String,Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},Microsoft.Azure.Batch.BehaviorManager)">
            <summary>
            Creates the AddTasks workflow manager with the specified arguments.
            </summary>
            <param name="jobOperations"></param>
            <param name="jobId"></param>
            <param name="parallelOptions">The parallel options associated with this operation.  If this is null, the default is used.</param>
            <param name="fileStagingArtifacts">File staging artifacts associated with this operation.  If the customer does not set this, it is unviewable by them.</param>
            <param name="bhMgr">The behavior manager.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.CheckForCancellationOrTimeoutAndThrow">
            <summary>
            Checks for operation cancelation or timeout, and throws the corresponding exception.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.IsWorkflowDone">
            <summary>
            Determines if the workflow has finished or not.
            </summary>
            <returns>True if the workflow has successfully completed, false if it has not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.StageFilesAndAddTasks(System.Collections.Generic.Dictionary{System.String,Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask},System.String)">
            <summary>
            Performs file staging and also issues the AddTaskCollection request for the set of tasks to add.
            </summary>
            <param name="tasksToAdd">The set of tasks to add.</param>
            <param name="namingFragment"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.ProcessProtocolAddTaskResults(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskAddResult},System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask})">
            <summary>
            Processes a set AddTaskResults from the protocol and groups them according to the results of the AddTaskResultHandler
            </summary>
            <param name="addTaskResults"></param>
            <param name="taskMap">Dictionary of task name to task object instance for the specific protocol response.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.ProcessPendingOperationResults">
            <summary>
            Waits for a pending operation to complete and throws if the operation failed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask">
            <summary>
            Internal task wrapper which tracks a tasks retry count and holds a reference to the protocol object and CloudTask.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask.GetProtocolTask">
            <summary>
            Gets the finalized version of this task.  Also internally updates this.Task to refer to a bound read-only copy of the original
            CloudTask.  Subsequent calls to this method will return a reference to the same object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ApplicationOperations">
            <summary>
            Performs application-related operations on an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationOperations.ParentBatchClient">
            <summary>
            allows child objects to access the protocol wrapper and secrets to make verb calls
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.ApplicationOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationOperations.ListApplicationSummaries(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.ApplicationSummary">applications</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ApplicationOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate applications asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the applications are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; applications are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationOperations.GetApplicationSummaryAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name="applicationId">The id of the application to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ApplicationOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.ApplicationSummary"/> containing information about the specified application.</returns>
            <remarks>The get application operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationOperations.GetApplicationSummary(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name="applicationId">The id of the application to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ApplicationOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.ApplicationSummary"/> containing information about the specified application.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.ApplicationOperations.GetApplicationSummaryAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListCertificatesEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListComputeNodesEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobPrepReleaseTaskStatusEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.#ctor(Microsoft.Azure.Batch.BatchClient,Microsoft.Azure.Batch.BehaviorManager,Microsoft.Azure.Batch.DetailLevel)">
            <summary>
            An iterator that lists-jobs (not by schedule)
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.#ctor(Microsoft.Azure.Batch.BatchClient,System.String,Microsoft.Azure.Batch.BehaviorManager,Microsoft.Azure.Batch.DetailLevel)">
            <summary>
            An iterator that calls list-jobs-by-schedule
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobSchedulesEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListNodeAgentSkusEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListNodeFilesByNodeEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListPoolsEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListPoolUsageMetricsEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListSubtasksEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListNodeFilesByTaskEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListTasksEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AuthorizationLevel">
            <summary>
            Authorization levels available for enforcement of restrictions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Auth.BatchCredentials">
            <summary>
            Base class for credentials used to authenticate access to an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Auth.BatchCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Auth.BatchCredentials"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchCredentials.BaseUrl">
            <summary>
            Gets the Batch service endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials">
            <summary>
            Shared key credentials for an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.AccountName">
            <summary>
            Gets the Batch account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.KeyValue">
            <summary>
            Gets the Base64 encoded account access key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials"/> class with the specified Batch service endpoint, account name, and access key.
            </summary>
            <param name="baseUrl">The Batch service endpoint.</param>
            <param name="accountName">The name of the Batch account.</param>
            <param name="keyValue">The Base64 encoded account access key.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Auth.BatchTokenCredentials">
            <summary>
            Azure Active Directory token credentials for an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider">
            <summary>
            Gets a function which returns an authentication token.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Auth.BatchTokenCredentials"/> class with the specified Batch service endpoint and authentication token.
            </summary>
            <param name="baseUrl">The Batch service endpoint.</param>
            <param name="token">An authentication token provided by Azure Active Directory.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor(System.String,System.Func{System.Threading.Tasks.Task{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Auth.BatchTokenCredentials" /> class with the specified Batch service endpoint and authentication token provider function.
            </summary>
            <param name="baseUrl">The Batch service endpoint.</param>
            <param name="tokenProvider">A function which returns an authentication token.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientDisposableStateBox">
            <summary>
            The dispose pattern sets all references to null.
            Put all references into this box.
            
            ONLY ACCESS VIA GetStateThrowIfNotOpen() method!
            
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClient">
            <summary>
            A client for an Azure Batch account, used to access the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.#ctor(Microsoft.Azure.Batch.IProtocolLayer)">
            <summary>
            Holds the protocol layer to be used for this client instance.
            This enables "mock"ing the protocol layer for testing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.ApplicationOperations">
            <summary>
            Gets an <see cref="P:Microsoft.Azure.Batch.BatchClient.ApplicationOperations"/> for performing application-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.CertificateOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.CertificateOperations"/> for performing certificate-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.JobOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.JobOperations"/> for performing job-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations"/> for performing job schedule-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.PoolOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.PoolOperations"/> for performing pool-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.Utilities">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.Utilities"/> object containing utility methods for orchestrating multiple Batch operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified credentials.
            </summary>
            <param name="credentials">The Batch account credentials.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient" />.
            </summary>
            <remarks>
            This is a blocking call. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)"/>
            </remarks>
            <param name="credentials">The Batch account credentials.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchTokenCredentials)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            </summary>
            <param name="credentials">The Azure Active Directory Batch account credentials.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Auth.BatchTokenCredentials)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient" />.
            </summary>
            <remarks>
            This is a blocking call. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchTokenCredentials)"/>
            </remarks>
            <param name="credentials">The Azure Active Directory Batch account credentials.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.
            </summary>
            <param name="restClient">The instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/> to use for all calls made to the Batch Service. It will not be disposed when BatchClient is disposed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Blocking call that creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.
            </summary>
            <param name="restClient">The instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/> to use for all calls made to the Batch Service. It will not be disposed when BatchClient is disposed.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.CloseAsync">
            <summary>
            Starts an asynchronous operation to close the current instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.  
            Closed instances of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> are unable to make calls to the Batch Service and the behavior and values of any other methods or properties are undefined. 
            These restrictions also apply immediately to any objects that can trace instantation back to this <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            This method is threadsafe and can be called any number of times.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Close">
            <summary>
            Closes the current instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.  
            Closed instances of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> are unable to make calls to the Batch Service and the behavior and values of any other methods or properties are undefined. 
            These restrictions also apply immediately to any objects that can trace instantation back to this <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            This method is threadsafe and can be called any number of times.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Dispose">
            <summary>
            Calls <see cref="M:Microsoft.Azure.Batch.BatchClient.Close"/> and releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources used by the <see cref="T:Microsoft.Azure.Batch.BatchClient"/>, and optionally disposes of managed resources.
            </summary>
            <param name="disposing">Indicates whether the object is being disposed or finalized.  If true, the object is
            being disposed and can dispose managed resource.  If false, the object is being finalized and should only
            release unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.GetStateThrowIfNotOpen">
            <summary>
            Enforces that current instance is not "close".
            All access to disposable state should go through this routine.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.ProtocolLayer">
            <summary>
            Holds the protocol layer to be used for this client instance.
            This enables "mock"ing the protocol layer for testing.
            
            Since 100% of all calls indirect through this property, it
            provides a single place to immediately stop all (new) call attempts
            when the underlying BatchClient is closed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientBehavior">
            <summary>
            Derived classes modify operational behaviors of a Azure Batch Service client.  Derived classes can be called out of order and simultaneously by several threads.  Implementations should be threadsafe.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientException">
            <summary>
            An exception thrown by the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException">
            <summary>
            The exception that is thrown when the AddTaskCollection operation is terminated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException.AddTaskResult">
            <summary>
            Gets the <see cref="P:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException.AddTaskResult"/> for the task which caused the exception.
            </summary>
            <remarks>
            More than one task may have failed. In order to see the full list, use an <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.ParallelOperationsException">
            <summary>
            An exception raised when one or more operations in a parallel set of operations fails.  
            The <see cref="P:System.AggregateException.InnerExceptions"/> collection contains the exceptions for each of the failed operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ParallelOperationsException.ToString">
            <summary>
            Creates and returns a string representation of the current <see cref="T:Microsoft.Azure.Batch.ParallelOperationsException"/>.
            </summary>
            <returns>A string representation of the current exception.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientParallelOptions">
            <summary>
            Stores options that configure the operation of methods on Batch client parallel operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism">
            <summary>
            Gets or sets the maximum number of concurrent tasks enabled by this <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> instance.
            The default value is 1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken">
            <summary>
            Gets or sets the <see cref="T:System.Threading.CancellationToken"/> associated with this <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> instance.
            The default is <see cref="P:System.Threading.CancellationToken.None"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchErrorMessages">
            <summary>
               A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.ResourceManager">
            <summary>
               Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.Culture">
            <summary>
               Overrides the current thread's CurrentUICulture property for all
               resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.AddTaskCollectionTerminated">
            <summary>
               Looks up a localized string similar to Addition of a task failed with unexpected status code. Details: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.AddTaskResultActionUnretryableFailure">
            <summary>
               Looks up a localized string similar to Task {0} reported AddTaskResultAction.UnretryableFailure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.BatchClientIsClosed">
            <summary>
               Looks up a localized string similar to An attempt was made to use an instance of BatchClient that is in the closed state.  No further calls to the Batch Service can be made with that instance.  This can happen if the instance was explicitly closed or if the BatchClient.Dispose() method was called..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.BatchRequestCannotBeModified">
            <summary>
               Looks up a localized string similar to This BatchRequest has started executing and can no longer be modified..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.CannotPatchNullValue">
            <summary>
               Looks up a localized string similar to A value of null cannot be specified when invoking the CommitChanges operation..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.CanOnlyBeRunOnceFailure">
            <summary>
               Looks up a localized string similar to {0} can only be run once..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.CollectionMustNotContainNull">
            <summary>
               Looks up a localized string similar to Items contained in collection must not be null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralBehaviorMissing">
            <summary>
               Looks up a localized string similar to Must have at least one behavior of type {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralObjectInInvalidState">
            <summary>
               Looks up a localized string similar to This object is in an invalid state.  Write access is not allowed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralSimultaneousCommitsForbidden">
            <summary>
               Looks up a localized string similar to Simultaneous Commit operators are forbidden..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.IncorrectTypeReturned">
            <summary>
               Looks up a localized string similar to Incorrect type returned..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.MonitorInstancesMustHaveSameServerSideParent">
            <summary>
               Looks up a localized string similar to Monitor requires all instances to have the same server-side parent..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.MultipleParallelRequestsHitUnexpectedErrors">
            <summary>
               Looks up a localized string similar to One or more requests to the Azure Batch service failed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.ODataMonitorTimedOut">
            <summary>
               Looks up a localized string similar to Timed out waiting for resources after {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.OperationForbiddenOnBoundObjects">
            <summary>
               Looks up a localized string similar to This operation is forbidden on bound objects..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.OperationForbiddenOnUnboundObjects">
            <summary>
               Looks up a localized string similar to This operation is forbidden on unbound objects..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesReadAccessViolation">
            <summary>
               Looks up a localized string similar to The property {0} cannot be read while the object is in the {1} state..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesWriteAccessViolation">
            <summary>
               Looks up a localized string similar to The property {0} cannot be modified while the object is in the {1} state..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TaskIdRangeCannotHaveEndLessThanStart">
            <summary>
               Looks up a localized string similar to End task id must be greater than or equal to the start task id..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TaskIdRangeCannotHaveNegativeEnd">
            <summary>
               Looks up a localized string similar to End task id must be greater or equal to 0..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TaskIdRangeCannotHaveNegativeStart">
            <summary>
               Looks up a localized string similar to First task id must be greater or equal to 0..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TypeDoesNotSupportExpandClause">
            <summary>
               Looks up a localized string similar to Type {0} does not support an expand clause..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TypeDoesNotSupportFilterClause">
            <summary>
               Looks up a localized string similar to Type {0} does not support a filter clause..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TypeDoesNotSupportSelectClause">
            <summary>
               Looks up a localized string similar to Type {0} does not support a select clause..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.UnknownAddTaskResultAction">
            <summary>
               Looks up a localized string similar to Unknown AddTaskResultAction value: {0}.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchRequestTimeout">
            <summary>
            Class which provides easy access to the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.Timeout"/> property and the <see cref="P:Microsoft.Azure.Batch.Protocol.Models.ITimeoutOptions.Timeout"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchRequestTimeout.ServerTimeout">
            <summary>
            Gets or sets the server timeout to be applied to each request issued to the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchRequestTimeout.ClientTimeout">
            <summary>
            Gets or sets the client timeout to be applied to each request issued to the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchRequestTimeout.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.BatchRequestTimeout"/> class.
            </summary>
            <param name="serverTimeout">The server timeout to be applied to each request.</param>
            <param name="clientTimeout">The client timeout to be applied to each request.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.BehaviorManager">
            <summary>
            Tools for managing multiple collections of behaviors.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BehaviorManager.MasterListOfBehaviors">
            <summary>
            Returns a new list of behaviors that is the concatination of the base + per-call.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BehaviorManager.GetBehaviors``1">
            <summary>
            Gets an ordered list of behaviors of the specific type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.BindingState">
            <summary>
            The possible realationships between a client-side object and a server-side object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.BindingState.Bound">
            <summary>
            There is a consistency model between the current object and a server-side object.
            The client-side object is said to be "bound" to the server-side object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.BindingState.Unbound">
            <summary>
            There is no server-side object.
            The client-side object is said to be "unbound".
            This is typically used to denote an object state used to "create" a server-side object
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Certificate">
            <summary>
            A certificate that can be installed on compute nodes and can be used to authenticate operations on a node.
            </summary>
            <summary>
            A certificate that can be installed on compute nodes and can be used to authenticate operations on a node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Adds the certificate to the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The commit operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds the certificate to the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of the certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>The cancel delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CancelDelete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Cancels a failed deletion of the certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.Certificate.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.Certificate.Thumbprint"/> or <see cref="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.Certificate.Thumbprint"/> or <see cref="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.CertificateFormat},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Certificate"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
            <param name='data'>The base64-encoded raw certificate data (contents of the .pfx or .cer file or data from which the <see cref="T:Microsoft.Azure.Batch.Certificate"/> 
            was created).</param>
            <param name='thumbprint'>The thumbprint of the certificate. This is a sequence of up to 40 hex digits.</param>
            <param name='thumbprintAlgorithm'>The algorithm used to derive the thumbprint.</param>
            <param name='certificateFormat'>The format of the certificate data.</param>
            <param name='password'>The password to access the certificate private key.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.CertificateFormat">
            <summary>
            Gets the format of the certificate data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Data">
            <summary>
            Gets the base64-encoded raw certificate data (contents of the .pfx or .cer file or data from which the <see cref="T:Microsoft.Azure.Batch.Certificate"/> 
            was created).
            </summary>
            <remarks>
            <para>This property is set when creating a new <see cref="T:Microsoft.Azure.Batch.Certificate"/>. It is not defined for certificates 
            retrieved from the Batch service.</para> <para>The maximum size is 10 KB.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.DeleteCertificateError">
            <summary>
            Gets the error that occurred on the last attempt to delete this certificate.
            </summary>
            <remarks>
            This property is null unless the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Password">
            <summary>
            Gets the password to access the certificate private key.
            </summary>
            <remarks>
            This property is set when creating a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .pfx format data (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[],System.String)"/> and <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String,System.String)"/>). It is not defined for 
            certificates retrieved from the Batch service.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PreviousState">
            <summary>
            Gets the previous state of the certificate.
            </summary>
            <remarks>
            If the certificate is in its initial <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state, the PreviousState property 
            is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the certificate entered its previous state.
            </summary>
            <remarks>
            If the certificate is in its initial <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state, the PreviousStateTransitionTime 
            property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PublicData">
            <summary>
            Gets the public part of the certificate as a string containing base-64 encoded .cer format data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.State">
            <summary>
            Gets the current state of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.StateTransitionTime">
            <summary>
            Gets the time at which the certificate entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Thumbprint">
            <summary>
            Gets the thumbprint of the certificate. This is a sequence of up to 40 hex digits.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm">
            <summary>
            Gets the algorithm used to derive the thumbprint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Url">
            <summary>
            Gets the URL of the certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#CertificateAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.CertificateOperations">
            <summary>
            Performs certificate-related operations on an Azure Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.CertificateOperations.KnownCertificateAlgorithm">
            <summary>
            The one and only thumbprint algorithm we support. Note that this is the thumbprint algorithm NOT the signature algorithm.
            X509Certificate2 also only supports sha1 based thumbprints.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CertificateOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificateAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> containing information about the specified certificate in the Azure Batch account.</returns>
            <remarks>The get certificate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificate(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> containing information about the specified certificate in the Azure Batch account.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificateAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from a .cer file.
            </summary>
            <param name="cerFileName">The path to the .cer file.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[])">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .cer format data in memory.
            </summary>
            <param name="cerRawData">The certificate data in .cer format.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from a .pfx file.
            </summary>
            <param name="pfxFileName">The path to the .pfx file.</param>
            <param name="password">The password to access the certificate private key.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[],System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .pfx format data in memory.
            </summary>
            <param name="pfxRawData">The certificate data in .pfx format.</param>
            <param name="password">The password to access the certificate private key.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.ListCertificates(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.Certificate">certificates</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate certificates asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the certificates are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; certificates are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificate(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of the specified certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate that failed to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>The cancel delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificate(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Cancels a failed deletion of the specified certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate that failed to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateOperations.ParentBatchClient">
            <summary>
            allows child objects to access the protocol wrapper and secrets to make verb calls
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CertificateReference">
            <summary>
            Represents a certificate object of the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.#ctor(Microsoft.Azure.Batch.Certificate)">
            <summary>
            Instantiates an instance of CertificateReference with default property values.  
            Values for the Thumbprint and ThumbprintAlgorithm properties are taken from the provided base certificate.
            </summary>
            <param name="baseCertificate">Provides initial values for the CertificateReference properties Thumbprint and ThumbprintAlgorithm.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CertificateReference"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.StoreLocation">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.Batch.Common.CertStoreLocation"/> for the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.StoreName">
            <summary>
            Gets or sets the name of the name of the certificate store. Besides <see cref="T:System.Security.Cryptography.X509Certificates.StoreName"/> 
            the value can have a custom store name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.Thumbprint">
            <summary>
            Gets or sets the certificate thumbprint property of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm">
            <summary>
            Gets or sets the certificate thumbprint algorithm. Currently sha1 is the only supported algorithm.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.Visibility">
            <summary>
            Gets or sets the set of users that can get to the private data of the installed certificate. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#CertificateReference}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.CertificateReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.CertificateReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.CertificateReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ClientRequestIdProvider">
            <summary>
            Interceptor which contains a function used to generate a client request id to set as <see cref="P:Microsoft.Azure.Batch.Protocol.Models.IOptions.ClientRequestId"/>.
            If there are multiple instances of this then the last set wins.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor(System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid})">
            <summary>
            Initializes a new <see cref="T:Microsoft.Azure.Batch.ClientRequestIdProvider"/> for use in setting the client request id of a request.
            </summary>
            <param name="generateClientRequestIdFunc">
            A function used to generate the client request id.  This function may be called more than once for any
            given operation due to retries.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudJob">
            <summary>
            An Azure Batch job.
            </summary>
            <summary>
            An Azure Batch job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits this <see cref="T:Microsoft.Azure.Batch.CloudJob" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> already exists on the Batch service, its properties are replaced by the properties of this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.</para>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits this <see cref="T:Microsoft.Azure.Batch.CloudJob" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>
            <para>If the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> already exists on the Batch service, its properties are replaced by the properties of this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJob" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            Updates an existing <see cref="T:Microsoft.Azure.Batch.CloudJob"/> on the Batch service by replacing its properties with the properties of this <see cref="T:Microsoft.Azure.Batch.CloudJob"/> which have been changed.
            Unchanged properties are ignored.
            All changes since the last time this entity was retrieved from the Batch service (either via <see cref="M:Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>, <see cref="M:Microsoft.Azure.Batch.JobOperations.GetJob(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>,
            or <see cref="M:Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>) are applied.
            Properties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.
            If you need to set a property to null, use <see cref="M:Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJob" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>
            <para>
            Updates an existing <see cref="T:Microsoft.Azure.Batch.CloudJob"/> on the Batch service by replacing its properties with the properties of this <see cref="T:Microsoft.Azure.Batch.CloudJob"/> which have been changed.
            Unchanged properties are ignored.
            All changes since the last time this entity was retrieved from the Batch service (either via <see cref="M:Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>, <see cref="M:Microsoft.Azure.Batch.JobOperations.GetJob(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>,
            or <see cref="M:Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>) are applied.
            Properties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.
            If you need to set a property to null, use <see cref="M:Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Adds a single task to this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts (a <see cref="T:System.Threading.Tasks.TaskCanceledException"/>), please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use 
            <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>The add task operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTask(Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds a single task to this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A collection of information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>
            <para>
            Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts (a <see cref="T:System.Threading.Tasks.TaskCanceledException"/>), please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use 
            <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The add task operation runs asynchronously.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts (a <see cref="T:System.Threading.Tasks.TaskCanceledException"/>), please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
            <exception cref="T:Microsoft.Azure.Batch.ParallelOperationsException">Thrown if one or more requests to the Batch service fail.</exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTask(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <remarks>
            <para>This is a blocking operation; for a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts (a <see cref="T:System.Threading.Tasks.TaskCanceledException"/>), please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
            <exception cref="T:Microsoft.Azure.Batch.ParallelOperationsException">Thrown if one or more requests to the Batch service fail.</exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.ListTasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudTask">tasks</see> of this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate tasks asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>The get task operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.GetTask(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, allowing new tasks to run.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The enable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, allowing new tasks to run.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The disable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Disable(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, marking it as completed.
            </summary>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Terminate(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, marking it as completed.
            </summary>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJob" />.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJob" />.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJob.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJob.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings">
            <summary>
            Gets or sets a list of common environment variable settings. These environment variables are set for all tasks 
            in this <see cref="T:Microsoft.Azure.Batch.CloudJob"/> (including the Job Manager, Job Preparation and Job Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CreationTime">
            <summary>
            Gets the creation time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.DisplayName">
            <summary>
            Gets or sets the display name of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.ETag">
            <summary>
            Gets the ETag for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.ExecutionInformation">
            <summary>
            Gets the execution information for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Id">
            <summary>
            Gets or sets the id of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobManagerTask">
            <summary>
            Gets or sets the Job Manager task. The Job Manager task is launched when the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> is started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task. The Batch service will run the Job Preparation task on a compute node 
            before starting any tasks of that job on that compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task. The Batch service runs the Job Release task when the job ends, on each compute 
            node where any task of the job has run.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.LastModified">
            <summary>
            Gets the last modified time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete">
            <summary>
            Gets or sets the action the Batch service should take when all tasks in the job are in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Completed"/> 
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.OnTaskFailure">
            <summary>
            Gets or sets the action the Batch service should take when any task in the job fails.
            </summary>
            <remarks>
            A task is considered to have failed if it completes with a non-zero exit code and has exhausted its retry count, 
            or if it had a scheduling error.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PoolInformation">
            <summary>
            Gets or sets the pool on which the Batch service runs the job's tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PreviousState">
            <summary>
            Gets the previous state of the job.
            </summary>
            <remarks>
            If the job is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobState.Active"/> state, the PreviousState property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the job entered its previous state.
            </summary>
            <remarks>
            If the job is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobState.Active"/> state, the PreviousStateTransitionTime property 
            is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Priority">
            <summary>
            Gets or sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest 
            priority and 1000 being the highest priority.
            </summary>
            <remarks>
            The default value is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.State">
            <summary>
            Gets the current state of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.StateTransitionTime">
            <summary>
            Gets the time at which the job entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Statistics">
            <summary>
            Gets resource usage statistics for the entire lifetime of the job.
            </summary>
            <remarks>
            This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> was retrieved with an <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> 
            including the 'stats' attribute; otherwise it is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Url">
            <summary>
            Gets the URL of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies">
            <summary>
            Gets or sets whether tasks in the job can define dependencies on each other.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudJobSchedule">
            <summary>
            A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
            </summary>
            <summary>
            A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each 
            job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            Updates an existing <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> on the Batch service by replacing its properties with the properties of this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> which have been changed.
            Unchanged properties are ignored.
            All changes since the last time this entity was retrieved from the Batch service (either via <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>, <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>,
            or <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>) are applied.
            Properties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.
            If you need to set a property to null, use <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <remarks>
            <para>
            Updates an existing <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> on the Batch service by replacing its properties with the properties of this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> which have been changed.
            Unchanged properties are ignored.
            All changes since the last time this entity was retrieved from the Batch service (either via <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>, <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>,
            or <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>) are applied.
            Properties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.
            If you need to set a property to null, use <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />, allowing jobs to be created according to the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The enable operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />, allowing jobs to be created according to the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.DisableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable operation runs asynchronously.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Disable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.DisableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.  Terminated schedules remain in the system but do not create new jobs.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>The terminate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Terminate(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.  Terminated schedules remain in the system but do not create new jobs.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.CreationTime">
            <summary>
            Gets the creation time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.DisplayName">
            <summary>
            Gets or sets the display name of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.ETag">
            <summary>
            Gets the ETag of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.ExecutionInformation">
            <summary>
            Gets the execution information for the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Id">
            <summary>
            Gets or sets the id of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification">
            <summary>
            Gets or sets a <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification" /> containing details of the jobs to be created according to the 
            <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.LastModified">
            <summary>
            Gets the last modified time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the schedule as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.PreviousState">
            <summary>
            Gets the previous state of the job schedule.
            </summary>
            <remarks>
            If the schedule is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active"/> state, the PreviousState property 
            is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the job schedule entered its previous state.
            </summary>
            <remarks>
            If the schedule is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active"/> state, the PreviousStateTransitionTime 
            property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule">
            <summary>
            Gets or sets the schedule that determines when jobs will be created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.State">
            <summary>
            Gets the current state of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.StateTransitionTime">
            <summary>
            Gets the time at which the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Statistics">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.JobScheduleStatistics" /> containing resource usage statistics for the entire lifetime of the 
            job schedule.
            </summary>
            <remarks>
            This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> was retrieved with an <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> 
            including the 'stats' attribute; otherwise it is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Url">
            <summary>
            Gets the URL of the job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobScheduleAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudPool">
            <summary>
            A pool in the Azure Batch service.
            </summary>
            <summary>
            A pool in the Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TargetDedicated">
            <summary>
            This property is an alias for <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetDedicatedComputeNodes"/> and is supported only for backward compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CurrentDedicated">
            <summary>
            This property is an alias for <see cref="P:Microsoft.Azure.Batch.CloudPool.CurrentDedicatedComputeNodes"/> and is supported only for backward compatibility.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes this pool.
            </summary>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this pool.
            </summary>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
            </remarks>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits this <see cref="T:Microsoft.Azure.Batch.CloudPool" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits this <see cref="T:Microsoft.Azure.Batch.CloudPool" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudPool" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            Updates an existing <see cref="T:Microsoft.Azure.Batch.CloudPool"/> on the Batch service by replacing its properties with the properties of this <see cref="T:Microsoft.Azure.Batch.CloudPool"/> which have been changed.
            Unchanged properties are ignored.
            All changes since the last time this entity was retrieved from the Batch service (either via <see cref="M:Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>, <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetPool(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>,
            or <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>) are applied.
            Properties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.
            If you need to set a property to null, use <see cref="M:Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudPool" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>
            Updates an existing <see cref="T:Microsoft.Azure.Batch.CloudPool"/> on the Batch service by replacing its properties with the properties of this <see cref="T:Microsoft.Azure.Batch.CloudPool"/> which have been changed.
            Unchanged properties are ignored.
            All changes since the last time this entity was retrieved from the Batch service (either via <see cref="M:Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>, <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetPool(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>,
            or <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>) are applied.
            Properties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.
            If you need to set a property to null, use the <see cref="M:Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> method.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Resizes this pool.
            </summary>
            <param name="targetDedicatedComputeNodes">
            The desired number of dedicated compute nodes in the pool.
            At least one of <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> is required.
            </param>
            <param name="targetLowPriorityComputeNodes">
            The desired number of low-priority compute nodes in the pool.
            At least one of <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> is required.
            </param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            </para>
            <para>The resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Resize(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Resizes this pool.
            </summary>
            <param name="targetDedicatedComputeNodes">
            The desired number of dedicated compute nodes in the pool.
            At least one of <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> is required.
            </param>
            <param name="targetLowPriorityComputeNodes">
            The desired number of low-priority compute nodes in the pool.
            At least one of <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> is required.
            </param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Stops a resize operation on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>The stop resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.StopResize(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Stops a resize operation on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ListComputeNodes(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> of this pool.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate compute nodes asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the nodes are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; nodes are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>The get node operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.GetComputeNode(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling on this pool.
            </summary>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="autoscaleEvaluationInterval">The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>The enable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables automatic scaling on this pool.
            </summary>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="autoscaleEvaluationInterval">The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScale(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables automatic scaling on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on this pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on this pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>The evaluate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the result of evaluating an automatic scaling formula on this pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on this pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Changes the operating system version of this pool.
            </summary>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>The change version operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersion(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Changes the operating system version of this pool.
            </summary>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudPool"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AllocationState">
            <summary>
            Gets an <see cref="T:Microsoft.Azure.Batch.Common.AllocationState"/> which indicates what node allocation activity is occurring on the 
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime">
            <summary>
            Gets the time at which the pool entered its current <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ApplicationLicenses">
            <summary>
            Gets or sets the list of application licenses the Batch service will make available on each compute node in the 
            pool.
            </summary>
            <remarks>
            The list of application licenses must be a subset of available Batch service application licenses.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled">
            <summary>
            Gets or sets whether the pool size should automatically adjust according to the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/>.
            </summary>
            <remarks>
            <para>If true, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> property is required, the pool automatically resizes according 
            to the formula, and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetDedicatedComputeNodes"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetLowPriorityComputeNodes"/> 
            must be null.</para> <para>If false, one of the <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetDedicatedComputeNodes"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetLowPriorityComputeNodes"/> 
            properties is required.</para><para>The default value is false.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets a time interval at which to automatically adjust the pool size according to the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/>.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum allowed value is 5 minutes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            <para>For how to write autoscale formulas, see https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/. 
            This property is required if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is set to true. It must be null if AutoScaleEnabled 
            is false.</para><para>The formula is checked for validity before the pool is created. If the formula is not valid, 
            an exception is thrown when you try to commit the <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleRun">
            <summary>
            Gets the results and errors from the last execution of the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration"/> for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CreationTime">
            <summary>
            Gets the creation time for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CurrentDedicatedComputeNodes">
            <summary>
            Gets the number of dedicated compute nodes currently in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CurrentLowPriorityComputeNodes">
            <summary>
            Gets the number of low-priority compute nodes currently in the pool.
            </summary>
            <remarks>
            Low-priority compute nodes which have been preempted are included in this count.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.DisplayName">
            <summary>
            Gets or sets the display name of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ETag">
            <summary>
            Gets the ETag for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Id">
            <summary>
            Gets or sets the id of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled">
            <summary>
            Gets or sets whether the pool permits direct communication between its compute nodes.
            </summary>
            <remarks>
            Enabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes 
            of the pool. This may result in the pool not reaching its desired size.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.LastModified">
            <summary>
            Gets the last modified time of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
            </summary>
            <remarks>
            The default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool 
            (the <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize"/> property).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.NetworkConfiguration">
            <summary>
            Gets or sets the network configuration of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ResizeErrors">
            <summary>
            Gets a list of errors encountered while performing the last resize on the <see cref="T:Microsoft.Azure.Batch.CloudPool"/>. Errors are 
            returned only when the Batch service encountered an error while resizing the pool, and when the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> 
            is <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState">Steady</see>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to 
            the pool or when the node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.State">
            <summary>
            Gets the current state of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.StateTransitionTime">
            <summary>
            Gets the time at which the pool entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Statistics">
            <summary>
            Gets the resource usage statistics for the pool.
            </summary>
            <remarks>
            This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudPool"/> was retrieved with an <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> 
            including the 'stats' attribute; otherwise it is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TargetDedicatedComputeNodes">
            <summary>
            Gets or sets the desired number of dedicated compute nodes in the pool.
            </summary>
            <remarks>
            This setting cannot be specified if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is set to true. At least one of this property 
            and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetLowPriorityComputeNodes"/> must be specified if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is false. 
            If not specified, the default is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TargetLowPriorityComputeNodes">
            <summary>
            Gets or sets the desired number of low-priority compute nodes in the pool.
            </summary>
            <remarks>
            This setting cannot be specified if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is set to true. At least one of <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetDedicatedComputeNodes"/> 
            and this property must be specified if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is false. If not specified, the default 
            is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed among compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Url">
            <summary>
            Gets the URL of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.UserAccounts">
            <summary>
            Gets or sets the list of user accounts to be created on each node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration"/> of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize">
            <summary>
            Gets or sets the size of the virtual machines in the pool.  All virtual machines in a pool are the same size.
            </summary>
            <remarks>
            <para>For information about available sizes of virtual machines for Cloud Services pools (pools created with 
            a <see cref="P:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration"/>), see https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/. 
            Batch supports all Cloud Services VM sizes except ExtraSmall.</para><para>For information about available VM 
            sizes for pools using images from the Virtual Machines Marketplace (pools created with a <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration"/>) 
            see https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/ or https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/. 
            Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (for example STANDARD_GS, 
            STANDARD_DS, and STANDARD_DSV2 series).</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#PoolAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudTask">
            <summary>
            An Azure Batch task.  A task is a piece of work that is associated with a job and runs on a compute node.
            </summary>
            <summary>
            An Azure Batch task. A task is a piece of work that is associated with a job and runs on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> class.
            </summary>
            <param name="id">The id of the task.</param>
            <param name="commandline">The command line of the task.</param>
            <remarks>The newly created CloudTask is initially not associated with any task in the Batch service.
            To associate it with a job and submit it to the Batch service, use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.StageFilesAsync(System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact})">
            <summary>
            Stages the files listed in the <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/> list.
            </summary>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process.
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The staging operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.StageFiles">
            <summary>
            Stages the files listed in the <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/> list.
            </summary>
            <returns>A collection of information about the file staging process.
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.StageFilesAsync(System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the files in the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="recursive">If true, performs a recursive list of all files of the task. If false, returns only the files in the root task directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.ListSubtasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the subtasks of the multi-instance <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudTask" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The commit operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudTask" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>, marking it as completed.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Terminate(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>, marking it as completed.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.ReactivateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Reactivates this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>, allowing it to run again even if its retry count has been exhausted.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            Reactivation makes a task eligible to be retried again up to its maximum retry count.
            </para> 
            <para>
            This operation will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0).
            Additionally, this will fail if the job is in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Completed"/> or <see cref="F:Microsoft.Azure.Batch.Common.JobState.Terminating"/> or <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            </para>
            <para>
            The reactivate operation runs asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Reactivate(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reactivates this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>, allowing it to run again even if its retry count has been exhausted.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <remarks>
            <para>
            Reactivation makes a task eligible to be retried again up to its maximum retry count.
            </para> 
            <para>
            This operation will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0).
            Additionally, this will fail if the job is in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Completed"/> or <see cref="F:Microsoft.Azure.Batch.Common.JobState.Terminating"/> or <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            </para>
            <para>
            This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.ReactivateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="filePath">The path of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="filePath">The path of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudTask.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudTask.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.AffinityInformation">
            <summary>
            Gets or sets a locality hint that can be used by the Batch service to select a node on which to start the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages that the Batch service will deploy to the compute node before running 
            the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.AuthenticationTokenSettings">
            <summary>
            Gets or sets the settings for an authentication token that the task can use to perform Batch service operations.
            </summary>
            <remarks>
            If this property is set, the Batch service provides the task with an authentication token which can be used to 
            authenticate Batch service operations without requiring an account access key. The token is provided via the 
            AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the task can carry out using the token 
            depend on the settings. For example, a task can request job permissions in order to add other tasks to the job, 
            or check the status of the job or of other tasks.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment 
            variable expansion. If you want to take advantage of such features, you should invoke the shell in the command 
            line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ComputeNodeInformation">
            <summary>
            Gets information about the compute node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Constraints">
            <summary>
            Gets or sets the execution constraints that apply to this task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CreationTime">
            <summary>
            Gets the creation time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.DependsOn">
            <summary>
            Gets or sets any other tasks that this <see cref="T:Microsoft.Azure.Batch.CloudTask"/> depends on. The task will not be scheduled until 
            all depended-on tasks have completed successfully.
            </summary>
            <remarks>
            The job must set <see cref="P:Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies"/> to true in order to use task dependencies. If UsesTaskDependencies 
            is false (the default), adding a task with dependencies will fail with an error.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.DisplayName">
            <summary>
            Gets or sets the display name of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ETag">
            <summary>
            Gets the ETag for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ExecutionInformation">
            <summary>
            Gets the execution information for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ExitConditions">
            <summary>
            Gets or sets how the Batch service should respond when the task completes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.FilesToStage">
            <summary>
            Gets or sets a list of files to be staged for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Id">
            <summary>
            Gets or sets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.LastModified">
            <summary>
            Gets the last modified time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.MultiInstanceSettings">
            <summary>
            Gets or sets information about how to run the multi-instance task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.OutputFiles">
            <summary>
            Gets or sets a list of files that the Batch service will upload from the compute node after running the command 
            line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.PreviousState">
            <summary>
            Gets the previous state of the task.
            </summary>
            <remarks>
            If the task is in its initial <see cref="F:Microsoft.Azure.Batch.Common.TaskState.Active"/> state, the PreviousState property is not 
            defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the task entered its previous state.
            </summary>
            <remarks>
            If the task is in its initial <see cref="F:Microsoft.Azure.Batch.Common.TaskState.Active"/> state, the PreviousStateTransitionTime property 
            is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download to the compute node before running the command 
            line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.State">
            <summary>
            Gets the current state of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.StateTransitionTime">
            <summary>
            Gets the time at which the task entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Statistics">
            <summary>
            Gets resource usage statistics for the task.
            </summary>
            <remarks>
            This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> was retrieved with an <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> 
            including the 'stats' attribute; otherwise it is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Url">
            <summary>
            Gets the URL of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to the task.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings">
            <summary>
            Error code strings from Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AccountIsDisabled">
            <summary>
            The specified account is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ActiveJobAndScheduleQuotaReached">
            <summary>
            The account has reached its quota of active jobs and job schedules.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ApplicationNotFound">
            <summary>
            The specified application does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AutoScalingFormulaSyntaxError">
            <summary>
            An automatic scaling formula has a syntax error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AutoScaleFormulaTooLong">
            <summary>
            An automatic scaling formula is too long. The maximum length is 8192 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AutoScaleTooManyRequestsToEnable">
            <summary>
            Enable AutoScale requests for the same pool must be separated by at least 30 seconds. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateBeingDeleted">
            <summary>
            A certificate operation was attempted which is not permitted when the certificate is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateExists">
            <summary>
            The certificate you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateNotFound">
            <summary>
            The certificate on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateStateActive">
            <summary>
            A certificate operation was attempted which is not permitted when the certificate is active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateStateDeleteFailed">
            <summary>
            A certificate could not be deleted because it is still in use.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.FileNotFound">
            <summary>
            A node file requested from a task or compute node was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidApplicationPackageReferences">
            <summary>
            One or more application package references could not be satisfied. This occurs if the application 
            id or version does not exist or is not active, or if the reference did not specify a version and 
            there is no default version configured.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidCertificateReferences">
            <summary>
            A pool specification specifies one or more invalid certificates (for example, certificates that are
            not present in the Batch account).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidConstraintValue">
            <summary>
            A value in a job or task constraint is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRestAPIForAccountSetting">
            <summary>
            There is a conflict between the REST API being used and the account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobBeingDeleted">
            <summary>
            A job operation was attempted which is not permitted when the job is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobBeingTerminated">
            <summary>
            A job operation was attempted which is not permitted when the job is in the process of being terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobCompleted">
            <summary>
            A job operation was attempted which is not permitted when the job has been completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobNotActive">
            <summary>
            A job operation was attempted which is not permitted when the job is not active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobExists">
            <summary>
            The specified job exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobPreparationTaskNotRunOnNode">
            <summary>
            A Job Preparation task was not run on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobPreparationTaskNotSpecified">
            <summary>
            The specified job does not have a Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobReleaseTaskNotRunOnNode">
            <summary>
            A Job Release task was not run on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobReleaseTaskNotSpecified">
            <summary>
            The specified job does not have a Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobNotFound">
            <summary>
            The job on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.IOError">
            <summary>
            An I/O error occurred while trying to access a resource within the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OperationInvalidForCurrentState">
            <summary>
            The specified operation is not valid for the current state of the resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionDisabled">
            <summary>
            The specified Azure Guest OS version is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionExpired">
            <summary>
            The specified Azure Guest OS version is expired.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionNotFound">
            <summary>
            The specified Azure Guest OS version was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangePriority">
            <summary>
            A job priority was specified which was outside the permitted range of -1000 to 1000.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PathNotFound">
            <summary>
            A file path was not found on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingDeleted">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingResized">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being resized.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingCreated">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being created.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolExists">
            <summary>
            The pool you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolNotEligibleForOSVersionUpgrade">
            <summary>
            The specified pool is not eligible for an operating system version upgrade.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolNotFound">
            <summary>
            The pool on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolQuotaReached">
            <summary>
            The account has reached its quota of pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolVersionEqualsUpgradeVersion">
            <summary>
            The pool is already on the operating system version to which it was asked to upgrade.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.StorageAccountNotFound">
            <summary>
            A requested storage account was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskCompleted">
            <summary>
            A task operation was attempted which is not permitted when the task has been completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskDependenciesNotSpecifiedOnJob">
            <summary>
            A task was specified as depending on other tasks, but the job did not specify that it would use task dependencies.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskDependencyListTooLong">
            <summary>
            A task was specified as depending on other tasks, but the list of dependencies was too long to be stored.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskDependencyRangesTooLong">
            <summary>
            A task was specified as depending on other tasks, but the list of task id ranges was too long to be stored.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskFilesUnavailable">
            <summary>
            The node files for a task are not available, for example because the retention period has expired.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskFilesCleanedup">
            <summary>
            The files of the specified task are cleaned up.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskExists">
            <summary>
            The task you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskIdSameAsJobPreparationTask">
            <summary>
            The task id is the same as that of the Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskIdSameAsJobReleaseTask">
            <summary>
            The task id is the same as that of the Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskNotFound">
            <summary>
            The task on which an operation was attempted is not present in the job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingCreated">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being created.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingStarted">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being started.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingRebooted">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being rebooted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingReimaged">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being reimaged.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeCountsMismatch">
            <summary>
            The node counts do not match.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeNotFound">
            <summary>
            The compute node on which an operation was attempted is not present in the given pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeStateUnusable">
            <summary>
            A compute node operation was attempted which is not permitted when the node is unusable.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeUserExists">
            <summary>
            The compute node user account you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeUserNotFound">
            <summary>
            The compute node user account on which an operation was attempted does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeAlreadyInTargetSchedulingState">
            <summary>
            The specified compute node is already in the target scheduling state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UpgradePoolVersionConflict">
            <summary>
            The pool is already upgrading to a different operating system version.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedConstraint">
            <summary>
            A requested job or task constraint is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedRequestVersion">
            <summary>
            The specified version of the Batch REST API is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleBeingDeleted">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleBeingTerminated">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is in the process of being terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleCompleted">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule has completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleDisabled">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleExists">
            <summary>
            The job schedule you are attempting to add already exists in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleNotFound">
            <summary>
            The job schedule on which an operation was attempted does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobDisabled">
            <summary>
            The specified job is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobWithSameIdExists">
            <summary>
            A job with the specified job schedule id exists. Job and job schedule cannot have the same id.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleWithSameIdExists">
            <summary>
            A job schedule with the specified job id exists. Job and job schedule cannot have the same id.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AuthenticationFailed">
            <summary>
            The Batch service failed to authenticate the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ConditionNotMet">
            <summary>
            A read operation included a HTTP conditional header, and the condition was not met.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.EmptyMetadataKey">
            <summary>
            An add or update request specified a metadata item whose key is an empty string.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.HostInformationNotPresent">
            <summary>
            The host information was missing from the HTTP request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InsufficientAccountPermissions">
            <summary>
            The account being accessed does not have sufficient permissions to execute this operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InternalError">
            <summary>
            An internal error occurred in the Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidAuthenticationInfo">
            <summary>
            The authentication credentials were not provided in the correct format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidAutoScalingSettings">
            <summary>
            The specified auto-scale settings are not valid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidHeaderValue">
            <summary>
            The value of one of the HTTP headers was in an incorrect format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidHttpVerb">
            <summary>
            The Batch service did not recognise the HTTP verb.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidInput">
            <summary>
            One of the request inputs is not valid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidMetadata">
            <summary>
            An add or update request specified a metadata item which contains characters that are not permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidPropertyValue">
            <summary>
            The value of a property in the HTTP request body is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRequestBody">
            <summary>
            The HTTP request body is not syntactically valid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidQueryParameterValue">
            <summary>
            The HTTP request URI contained invalid value for one of the query parameters.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRange">
            <summary>
            The specified byte range is invalid for the given resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidUri">
            <summary>
            The HTTP request URI was invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MetadataTooLarge">
            <summary>
            The size of the metadata exceeds the maximum permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingContentLengthHeader">
            <summary>
            The HTTP Content-Length header was not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredHeader">
            <summary>
            A required HTTP header was not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredProperty">
            <summary>
            A required property was not specified in the HTTP request body.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredQueryParameter">
            <summary>
            A required query parameter was not specified in the URL.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MultipleConditionHeadersNotSupported">
            <summary>
            Multiple condition headers are not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NotImplemented">
            <summary>
            The operation is not implemented.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangeInput">
            <summary>
            One of the request inputs is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangeQueryParameterValue">
            <summary>
            A query parameter in the request URL is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OperationTimedOut">
            <summary>
            The operation could not be completed within the permitted time.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.RequestBodyTooLarge">
            <summary>
            The size of the HTTP request body exceeds the maximum permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.RequestUrlFailedToParse">
            <summary>
            The Batch service could not parse the request URL.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceNotFound">
            <summary>
            The specified resource does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceAlreadyExists">
            <summary>
            The specified resource already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceTypeMismatch">
            <summary>
            The resource does not match the expected type.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ServerBusy">
            <summary>
            The Batch service is currently unable to receive requests.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHeader">
            <summary>
            One of the HTTP headers specified in the request is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHttpVerb">
            <summary>
            The resource does not support the specified HTTP verb.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHttpVersion">
            <summary>
            The Batch service does not support the specified version of the HTTP protocol.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedProperty">
            <summary>
            One of the properties specified in the HTTP request body is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedQueryParameter">
            <summary>
            One of the query parameters specified in the URL is not supported.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes">
            <summary>
            Contains error codes specific to pool resize errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AccountCoreQuotaReached">
            <summary>
            The account has reached its quota of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AllocationFailed">
            <summary>
            An error occurred while trying to allocate the desired number of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AllocationTimedOut">
            <summary>
            The Batch service was unable to allocate the desired number of compute nodes within the resize timeout.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.RemoveNodesFailed">
            <summary>
            An error occurred when removing compute nodes from the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.ResizeStopped">
            <summary>
            The user stopped the resize operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.Unknown">
            <summary>
            The reason for the failure is not known.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes">
            <summary>
            Contains error codes specific to job scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.AutoPoolCreationFailedWithQuotaReached">
            <summary>
            The Batch service could not create an auto pool to run the job on, because the account
            has reached its quota of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.InvalidApplicationPackageReferencesInAutoPool">
            <summary>
            The auto pool specification for the job has one or more application package references which could not be satisfied.  
            This occurs if the application id or version does not exist or is not active, or if the reference did not specify a
            version and there is no default version configured.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.InvalidAutoScaleFormulaInAutoPool">
            <summary>
            The auto pool specification for the job has an invalid automatic scaling formula.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.InvalidCertificatesInAutoPool">
            <summary>
            The auto pool specification for the job has an invalid certificate reference (for example, to a
            certificate that does not exist).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.Unknown">
            <summary>
            The reason for the scheduling error is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes">
            <summary>
            Contains error codes specific to task scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.ApplicationPackageError">
            <summary>
            An error occurred when trying to deploy a required application package.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.BlobAccessDenied">
            <summary>
            Access was denied when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.BlobDownloadMiscError">
            <summary>
            An error occurred when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.BlobDownloadTimedOut">
            <summary>
            A timeout occurred when downloading a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.BlobNotFound">
            <summary>
            A resource file required for the task does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.CommandLaunchFailed">
            <summary>
            An error occurred when launching the task's command line.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.CommandProgramNotFound">
            <summary>
            The program specified in the task's command line was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.DiskFull">
            <summary>
            The compute node disk ran out of space when downloading the resource files required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.ResourceDirectoryCreateFailed">
            <summary>
            The compute node could not create a directory for the task's resource files.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.ResourceFileCreateFailed">
            <summary>
            The compute node could not create a local file when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.ResourceFileWriteFailed">
            <summary>
            The compute node could not write to a local file when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.TaskEnded">
            <summary>
            The task ended.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes.Unknown">
            <summary>
            The reason for the scheduling error is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.BatchException">
            <summary>
            Represents an exception for the Windows Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.BatchException.RequestInformation">
            <summary>
            Gets information about the request which failed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.BatchException.#ctor(Microsoft.Azure.Batch.Common.RequestInformation,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.BatchException"/> class by using the specified parameters.
            </summary>
            <param name="requestInformation">A <see cref="P:Microsoft.Azure.Batch.Common.BatchException.RequestInformation"/> object containing details about the request.</param>
            <param name="message">The exception message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.BatchException.#ctor(Microsoft.Azure.Batch.Protocol.Models.BatchErrorException)">
            <summary>
            Constructs a <see cref="T:Microsoft.Azure.Batch.Common.BatchException"/> as a wrapper for a <see cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException"/>.
            </summary>
            <param name="batchErrorException">The exception to wrap.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.BatchException.ToString">
            <summary>
            Generates a string which describes the exception.
            </summary>
            <returns>A string that represents the exception.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.AccessScope">
            <summary>
            The Batch resources that can be accessed by a task using an authentication token provided via the <see cref="P:Microsoft.Azure.Batch.CloudTask.AuthenticationTokenSettings"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AccessScope.None">
            <summary>
            The authentication token does not grant access to any resources.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AccessScope.Job">
            <summary>
            The authentication token permits access to the job that contains the task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.AddTaskStatus">
            <summary>
            The status of an individual task in an add task collection operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AddTaskStatus.Success">
            <summary>
            The task addition was successful.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AddTaskStatus.ClientError">
            <summary>
            The task addition failed due to user error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AddTaskStatus.ServerError">
            <summary>
            The task addition failed due to an unforseen server error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.AllocationState">
            <summary>
            Indicates whether a pool is resizing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Steady">
            <summary>
            The pool is not resizing. There are no changes to the number of
            nodes in the pool in progress.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing">
            <summary>
            The pool is resizing; that is, compute nodes are being added to or
            removed from the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping">
            <summary>
            The pool was resizing, but the user has requested that the resize
            be stopped, but the stop request has not yet been completed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.AutoUserScope">
            <summary>
            The scope of the user account used by the Batch service to execute a task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AutoUserScope.Task">
            <summary>
            The task runs as a new user created specifically for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AutoUserScope.Pool">
            <summary>
            The task runs as the common auto user account which is created on every node in a pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CachingType">
            <summary>
            The caching type for an OS disk. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CachingType.None">
            <summary>
            No caching is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CachingType.ReadOnly">
            <summary>
            The caching mode for the disk is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CachingType.ReadWrite">
            <summary>
            The caching mode for the disk is read/write.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateFormat">
            <summary>
            Certificate format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateFormat.Pfx">
            <summary>
            Personal Information Exchange (PKCS #12) format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateFormat.Cer">
            <summary>
            X.509 certificate format.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateState">
            <summary>
            The state of a certificate
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.Active">
            <summary>
            The certificate is available for use in pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting">
            <summary>
            The user has requested that the certificate be deleted, but the
            delete operation has not yet completed. You may not reference the
            certificate when creating or updating pools .
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed">
            <summary>
            The user requested that the certificate be deleted, but there are
            pools that still have references to the certificate, or it is
            still installed on one or more compute nodes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateVisibility">
            <summary>
            Specifies which user accounts on a compute node should have access to
            the private data of a certificate.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.None">
            <summary>
            The certificate has no visibility.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.StartTask">
            <summary>
            The user account under which the start task is run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.Task">
            <summary>
            The accounts under which job tasks are run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.RemoteUser">
            <summary>
            The accounts under which users remotely access the node (using
            Remote Desktop).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertStoreLocation">
            <summary>
            The location of a certificate store on a pool's compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.CurrentUser">
            <summary>
            The X.509 certificate store used by the current user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.LocalMachine">
            <summary>
            The X.509 certificate store assigned to the local machine.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption">
            <summary>
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool, if the pool size is decreasing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Remove nodes as soon as tasks have been
            terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Remove nodes
            as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Remove nodes when all tasks have completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Remove nodes when all task retention periods have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeFillType">
            <summary>
            Specifies how tasks should be distributed across compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Spread">
            <summary>
            Tasks should be assigned evenly across all nodes in the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Pack">
            <summary>
            As many tasks as possible (maxTasksPerNode) should be assigned to
            each node in the pool before any tasks are assigned to the next
            node in the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption">
            <summary>
            Specifies when to reboot a compute node and what to do with currently
            running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Restart the compute node as soon as tasks
            have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Restart the
            compute node as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Restart the compute node when all tasks have
            completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Restart the compute node when all task retention periods
            have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption">
            <summary>
            Specifies when to reimage the compute node and what to do with
            currently running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Reimage the compute node as soon as tasks
            have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Reimage the
            compute node as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Reimage the compute node when all tasks have
            completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Reimage the compute node when all task retention periods
            have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeState">
            <summary>
            The state of a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle">
            <summary>
            The compute node is not currently running a task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Rebooting">
            <summary>
            The compute node is rebooting.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Reimaging">
            <summary>
            The compute node is being reimaged.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running">
            <summary>
            The compute node is running one or more tasks (other than the start
            task).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Unusable">
            <summary>
            The compute node cannot be used for task execution due to errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Creating">
            <summary>
            The Batch service has obtained the underlying virtual machine from
            Azure Compute, but it has not yet started to join a pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Starting">
            <summary>
            The Batch service is starting on the underlying virtual machine.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.WaitingForStartTask">
            <summary>
            The start task has started running on the compute node, but
            waitForSuccess is set and the start task has not yet completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.StartTaskFailed">
            <summary>
            The start task has failed on the compute node (and exhausted all
            retries), and waitForSuccess is set.  The node is not usable for
            running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Unknown">
            <summary>
            The Batch service has lost contact with the compute node, and does
            not know its true state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.LeavingPool">
            <summary>
            The compute node is leaving the pool, either because the user
            explicitly removed it or because the pool is resizing or
            autoscaling down.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Offline">
            <summary>
            The Batch service will not schedule any new tasks on the compute
            node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Preempted">
            <summary>
            The compute node has been preempted.
            </summary>
            <remarks>
            <para>
            The Batch service will not
            schedule any new tasks on the compute node and any tasks which were running at the time of preemption were requeued.
            The Batch service will attempt to recover nodes which are in this state. After recovery, all data that was on the node
            at the time of the preemption is gone.
            </para>
            <para>
            You are not charged for compute nodes that have been preempted.
            </para>
            <para>
            This can only occurr on nodes where <see cref="P:Microsoft.Azure.Batch.ComputeNode.IsDedicated"/> is false.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.DependencyAction">
            <summary>
            An action that the Batch service should take on tasks that depend on the task specifying the action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DependencyAction.Satisfy">
            <summary>
            The dependency is satisfied. Once all of a dependent task's dependencies are satisfied, the dependent task is eligible to run. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DependencyAction.Block">
            <summary>
            The dependency is not satisfied. Dependent tasks will not become eligible to run. 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption">
            <summary>
            Specifies what to do with currently running tasks when disable task
            scheduling on the compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.DisableJobOption">
            <summary>
            Specifies what to do with active tasks during a disable job operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Wait">
            <summary>
            Allow currently running tasks to complete.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ElevationLevel">
            <summary>
            The elevation level of the user account used by the Batch service to execute a task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ElevationLevel.NonAdmin">
            <summary>
            The user has standard access permissions.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ElevationLevel.Admin">
            <summary>
            The user has elevated access and operates with full Administrator permissions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ErrorCategory">
            <summary>
            The category of a task scheduling error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ErrorCategory.UserError">
            <summary>
            The error was in the task specification provided by the user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ErrorCategory.ServerError">
            <summary>
            The error occurred in the Batch service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobAction">
            <summary>
            An action to take on the job containing a task, when that task completes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobAction.None">
            <summary>
            Take no action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobAction.Disable">
            <summary>
            Disable the job. 
            </summary>
            <remarks>This is equivalent to calling <see cref="M:Microsoft.Azure.Batch.JobOperations.DisableJob(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> with a disableTasks value of <see cref="F:Microsoft.Azure.Batch.Common.DisableJobOption.Requeue"/>.</remarks>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobAction.Terminate">
            <summary>
            Terminate the job.
            </summary>
            <remarks>The termination reason in <see cref="P:Microsoft.Azure.Batch.CloudJob.ExecutionInformation"/> is set to "TaskFailed".</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobPreparationTaskState">
            <summary>
            The state of a Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Running">
            <summary>
            The task is currently running (including retrying).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed">
            <summary>
            The task has exited with exit code 0, or the task has exhausted its
            retry limit, or the Batch service was unable to start the task due
            to scheduling errors.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobReleaseTaskState">
            <summary>
            The state of a Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Running">
            <summary>
            The task is currently running.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Completed">
            <summary>
            The task has exited, or the Batch service was unable to start the
            task due to scheduling errors.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobScheduleState">
            <summary>
            The state of a job schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active">
            <summary>
            The job schedule is active and will create jobs as per its schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Completed">
            <summary>
            The schedule has terminated, either by reaching its end time or by
            the user terminating it explicitly.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Disabled">
            <summary>
            The user has disabled the schedule. The scheduler will not initiate
            any new jobs will on this schedule, but any existing active job
            will continue to run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating">
            <summary>
            The schedule has no more work to do, or has been explicitly
            terminated by the user, but the termination operation is still in
            progress. The scheduler will not initiate any new jobs for this
            schedule, nor is any existing job active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting">
            <summary>
            The user has requested that the schedule be deleted, but the delete
            operation is still in progress. The scheduler will not initiate
            any new jobs for this schedule, but any existing active job will
            continue to run. The schedule will be deleted when the existing
            job completes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobState">
            <summary>
            The state of job
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Active">
            <summary>
            The job is available to have tasks scheduled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Disabling">
            <summary>
            A user has requested that the job be disabled, but the disable
            operation is still in progress (for example, waiting for tasks to
            terminate).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Disabled">
            <summary>
            A user has disabled the job. No tasks are running, and no new tasks
            will be scheduled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Enabling">
            <summary>
            A user has requested that the job be enabled, but the enable
            operation is still in progress.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Terminating">
            <summary>
            The job is about to complete, either because a Job Manager task has
            completed or because the user has terminated the job, but the
            terminate operation is still in progress (for example, because Job
            Release tasks are running).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Completed">
            <summary>
            All tasks have terminated, and the system will not accept any more
            tasks or any further changes to the job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Deleting">
            <summary>
            A user has requested that the job be deleted, but the delete
            operation is still in progress (for example, because the system is
            still terminating running tasks).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.OnAllTasksComplete">
            <summary>
            Specifies an action the Batch service should take when all tasks in the job are in the completed state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OnAllTasksComplete.NoAction">
            <summary>
            Do nothing. The job remains active unless terminated or disabled by some other means.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OnAllTasksComplete.TerminateJob">
            <summary>
            Terminate the job. The job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/> is set to "AllTasksComplete". 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.OnTaskFailure">
            <summary>
            Specifies an action the Batch service should take when any task in the job fails.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OnTaskFailure.NoAction">
            <summary>
            Do nothing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OnTaskFailure.PerformExitOptionsJobAction">
            <summary>
            Take the action associated with the task exit condition in the task's <see cref="P:Microsoft.Azure.Batch.CloudTask.ExitConditions"/> collection. (This may still result in no action being taken, if that is what the task specifies.)
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.OSType">
            <summary>
            Specifies the Operation System type.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OSType.Linux">
            <summary>
            Linux OS Family.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OSType.Windows">
            <summary>
            Windows OS Family.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.OutputFileUploadCondition">
            <summary>
            The conditions under which a task's output file(s) should be uploaded.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OutputFileUploadCondition.TaskSuccess">
            <summary>
            Upload the file(s) only after the task process exits with an exit code of 0.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OutputFileUploadCondition.TaskFailure">
            <summary>
            Upload the file(s) only after the task process exits with a nonzero exit code.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OutputFileUploadCondition.TaskCompletion">
            <summary>
            Upload the file(s) after the task process exits, no matter what the exit code was.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolLifetimeOption">
            <summary>
            Specifies the minimum lifetime of created auto pools, and how multiple
            jobs on a schedule are assigned to pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.JobSchedule">
            <summary>
            The pool exists for the lifetime of the job schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.Job">
            <summary>
            The pool exists for the lifetime of the job to which it is
            dedicated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolState">
            <summary>
            The state of a pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Active">
            <summary>
            The pool is available to run tasks subject to the availability of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Deleting">
            <summary>
            The user has requested that the pool be deleted, but the delete
            operation has not yet completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading">
            <summary>
            The user has requested that the operating system of the pool's
            nodes be upgraded, but the upgrade operation has not yet completed
            (that is, some nodes in the pool have not yet been upgraded).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.SchedulingState">
            <summary>
            Specifies whether the compute node should be available for task
            scheduling.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingState.Enabled">
            <summary>
            The compute node is available for task scheduling.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingState.Disabled">
            <summary>
            The compute node is not available for task scheduling.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.StartTaskState">
            <summary>
            The state of a start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.StartTaskState.Running">
            <summary>
            The start task is currently running.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.StartTaskState.Completed">
            <summary>
            The start task has exited with exit code 0, or the start task has
            failed and the retry limit has reached, or the start task process
            did not run due to scheduling errors.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.SubtaskState">
            <summary>
            The state of a subtask.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SubtaskState.Preparing">
            <summary>
            The subtask has been assigned to a compute node, but is waiting for a
            required Job Preparation task to complete on the node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SubtaskState.Running">
            <summary>
            The subtask is running on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SubtaskState.Completed">
            <summary>
            The subtask is no longer eligible to run, usually because the it has
            finished successfully, or the subtask has finished unsuccessfully and
            has exhausted its retry limit.  A subtask is also marked as completed
            if an error occurred launching the subtask, or when the subtask has been
            terminated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.TaskExecutionResult">
            <summary>
            The result of task execution.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskExecutionResult.Success">
            <summary>
            The task ran successfully.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskExecutionResult.Failure">
            <summary>
            There was an error during processing of the task. The failure may have occurred before the task process was launched, while the task process was executing, or after the task process exited.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.TaskState">
            <summary>
            The state of a task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Active">
            <summary>
            The task is queued and able to run, but is not currently assigned
            to a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Preparing">
            <summary>
            The task has been assigned to a compute node, but is waiting for a
            required Job Preparation task to complete on the node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Running">
            <summary>
            The task is running on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Completed">
            <summary>
            The task is no longer eligible to run, usually because the task has
            finished successfully, or the task has finished unsuccessfully and
            has exhausted its retry limit.  A task is also marked as completed
            if an error occurred launching the task, or when the task has been
            terminated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ExponentialRetry">
            <summary>
            Represents a retry policy that performs a specified number of retries, using an exponential backoff scheme to determine the interval between retries. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.ExponentialRetry.DeltaBackoff">
            <summary>
            Gets the backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.ExponentialRetry.MaximumRetries">
            <summary>
            Gets the maximum number of retry attempts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.ExponentialRetry.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.ExponentialRetry"/> class using the specified delta and maximum number of retries.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries)</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.ExponentialRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.IRetryPolicy">
            <summary>
            Represents a retry policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.LinearRetry">
            <summary>
            Represents a retry policy that performs a specified number of retries, using a specified fixed time interval between retries.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.LinearRetry.DeltaBackoff">
            <summary>
            Gets the backoff interval between retries.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.LinearRetry.MaximumRetries">
            <summary>
            Gets the maximum number of retry attempts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.LinearRetry.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.LinearRetry"/> class using the specified delta and maximum number of retries.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries.</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.LinearRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.NoRetry">
            <summary>
            Represents a retry policy that performs no retries.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. This
            implementation always returns <see cref="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry"/>.
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.This
            implementation always returns <see cref="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.OperationContext">
            <summary>
            Represents the context for a request to the Batch service and provides additional information about its execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.OperationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.OperationContext.RequestResults">
            <summary>
            Gets or sets the list of request results for the current operation.  Each <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/> corresponds to one
            request sent to the server.  There may be more than one item in this list in the case of retries.
            </summary>
            <value>An <see cref="T:System.Collections.IList"/> object that contains <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/> objects that represent the request results created by the current operation.</value>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RequestInformation">
            <summary>
            A set of common information associated with a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.BatchError">
            <summary>
            Gets or sets the Batch Error information which contains detailed metadata around 
            the specific error encountered.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.HttpStatusMessage">
            <summary>
            Gets or sets the HTTP status message for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.HttpStatusCode">
            <summary>
            Gets or sets the HTTP status code for the request.
            In cases where an HTTP response was never recieved (for example on client side timeout) this property is null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.ClientRequestId">
            <summary>
            Gets or sets the client-request-id set by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.ServiceRequestId">
            <summary>
            Gets or sets the service request ID for this request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RequestResult">
            <summary>
            Represents the result of a physical request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.RequestInformation">
            <summary>
            Gets information about the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.Exception">
            <summary>
            Gets the exception hit during execution of the request, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.Task">
            <summary>
            Gets the <see cref="T:System.Threading.Tasks.Task"/> object associated with the request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.RequestResult.#ctor(Microsoft.Azure.Batch.Common.RequestInformation,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/>.
            </summary>
            <param name="requestInformation">The information associated with the individual request.</param>
            <param name="exception">The exception hit during the execution of the request (or null if there was no exception).</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RetryDecision">
            <summary>
            Represents a decision made by an <see cref="T:Microsoft.Azure.Batch.Common.IRetryPolicy"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry">
            <summary>
            A retry decision with <see cref="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry"/> set to false
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.RetryDecision.RetryWithDelay(System.TimeSpan)">
            <summary>
            Create a new <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> with the specified delay before the next retry.
            </summary>
            <param name="retryDelay">The duration to wait before performing the retry.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object with the specified retry delay and <see cref="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry"/> set to true.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RetryDecision.RetryDelay">
            <summary>
            Gets the delay before the next retry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry">
            <summary>
            Gets whether a retry should be performed or not.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNode">
            <summary>
            Summarizes the state of a compute node.
            </summary>
            <summary>
            Summarizes the state of a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser">
            <summary>
            Instantiates an unbound ComputeNodeUser object to be populated by the caller and used to create a user account on the compute node in the Azure Batch service.
            </summary>
            <returns>An <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to delete the specified ComputeNodeUser.
            </summary>
            <param name="userName">The name of the ComputeNodeUser to be deleted.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to delete the specified ComputeNodeUser.
            </summary>
            <param name="userName">The name of the ComputeNodeUser to be deleted.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to get RDP file data targeting the compute node of the current instance and write them to a specified Stream.
            </summary>
            <param name="rdpStream">The Stream into which the RDP file data will be written.  This stream will not be closed or rewound by this call.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get RDP file data targeting the compute node of the current instance and write them to a specified Stream.
            </summary>
            <param name="rdpStream">The Stream into which the RDP file data will be written.  This stream will not be closed or rewound by this call.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to get RDP file data targeting the compute node of the current instance and write them to a file with the specified name.
            </summary>
            <param name="rdpFileNameToCreate">The name of the RDP file to be created.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get RDP file data targeting the compute node of the current instance and write them to a file with the specified name.
            </summary>
            <param name="rdpFileNameToCreate">The name of the RDP file to be created.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The get remote login settings operation runs asynchronously.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" />, then Batch service returns 409 (Conflict). 
            For pools with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" />, then Batch service returns 409 (Conflict). 
            For pools with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to remove the compute node from the pool.
            </summary>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">The maximum amount of time which the RemoveFromPool operation can take before being terminated by the Azure Batch system.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RemoveFromPool(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to remove the compute node from the pool.
            </summary>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">The maximum amount of time which the RemoveFromPool operation can take before being terminated by the Azure Batch system.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RebootAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to reboot the compute node.
            </summary>
            <param name="rebootOption">The reboot option associated with the reboot.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Reboot(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to reboot the compute node.
            </summary>
            <param name="rebootOption">The reboot option associated with the reboot.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.ReimageAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to reimage the compute node.
            </summary>
            <param name="reimageOption">The reimage option associated with the reimage.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Reimage(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to reimage the compute node.
            </summary>
            <param name="reimageOption">The reimage option associated with the reimage.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous request to get the specified NodeFile.
            </summary>
            <param name="filePath">The path of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get the specified NodeFile.
            </summary>
            <param name="filePath">The path of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A bound <see cref="T:Microsoft.Azure.Batch.NodeFile"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Exposes synchronous and asynchronous enumeration of the files for the node.
            </summary>
            <param name="recursive">If true, performs a recursive list of all files of the node. If false, returns only the files at the node directory root.</param>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object and after the behavior implementing the DetailLevel.</param>
            <returns>An instance of IPagedEnumerable that can be used to enumerate objects using either synchronous or asynchronous patterns.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables task scheduling on the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables task scheduling on the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables task scheduling on the compute node.
            </summary>
            <param name="disableComputeNodeSchedulingOption">Specifies what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DisableScheduling(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables task scheduling on the compute node.
            </summary>
            <param name="disableComputeNodeSchedulingOption">Specifies what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh. If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.ComputeNode.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh. If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.ComputeNode.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.AffinityId">
            <summary>
            Gets an opaque string that contains information about the location of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.AllocationTime">
            <summary>
            Gets the time at which this compute node was allocated to the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.CertificateReferences">
            <summary>
            Gets the list of certificates installed on this compute node. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Errors">
            <summary>
            Gets the list of errors that are currently being encountered by the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Id">
            <summary>
            Gets the id of compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.IPAddress">
            <summary>
            Gets the IP address associated with the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.IsDedicated">
            <summary>
            Gets whether this compute node is a dedicated node. If false, the node is a low-priority node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.LastBootTime">
            <summary>
            Gets the time at which the compute node was started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.RecentTasks">
            <summary>
            Gets the execution information for the most recent tasks that ran on this compute node. Note that this element 
            is only returned if at least one task was run on this compute node since the time it was assigned to its current 
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.RunningTasksCount">
            <summary>
            Gets the total number of currently running tasks on the compute node. This includes Job Preparation, Job Release, 
            and Job Manager tasks, but not the pool start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.SchedulingState">
            <summary>
            Gets whether the node is available for task scheduling.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StartTask">
            <summary>
            Gets the start task associated with all compute nodes in this pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StartTaskInformation">
            <summary>
            Gets the detailed runtime information of the start task, including current state, error details, exit code, start 
            time, end time, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.State">
            <summary>
            Gets the current state of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StateTransitionTime">
            <summary>
            Gets the time at which the compute node entered the current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.TotalTasksRun">
            <summary>
            Gets the number of tasks that have been run on this compute node from the time it was allocated to this pool. 
            This includes Job Preparation, Job Release, and Job Manager tasks, but not the pool start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded">
            <summary>
            Gets the total number of tasks which completed successfully (with exitCode 0) on the compute node. This includes 
            Job Preparation, Job Release, and Job Manager tasks, but not the pool start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Url">
            <summary>
            Gets the URL of compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize">
            <summary>
            Gets the size of the virtual machine hosting the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics">
            <summary>
            Informs the Commit() call that the state transfer between the client and server is 
            either a create-user or update-user operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics.AddUser">
            <summary>
            The Commit operation is adding a new user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics.UpdateUser">
            <summary>
            The Commit operation is updating an existing user.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeUser">
            <summary>
            A user for a specific Azure Batch compute node.
            </summary>
            <summary>
            A user account for remote access to a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to create or update a user account on the compute node.
            </summary>
            <param name="addOrUpdate">Selects the type of commit operation to perform.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to create or update a user account on the compute node.
            </summary>
            <param name="addOrUpdate">Selects the type of commit operation to perform.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asyncrhonous call to delete the current user from the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            call to delete the current user from the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
            <param name='parentPoolId'>The parentPoolId.</param>
            <param name='parentNodeId'>The parentNodeId.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime">
            <summary>
            Gets or sets the expiry time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin">
            <summary>
            Gets or sets the administrative privilege level of the user account. The value of this property is ignored when 
            UpdateUser is specified for the commit operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.Name">
            <summary>
            Gets or sets the name. If AddUser is specified for the commit operation, the value of this property is the name 
            of the local Windows account created. If UpdateUser is specified for the commit operation, the value of this 
            property selects the local Windows account to modify. Changing this property does not rename the local Windows 
            account on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey">
            <summary>
            Gets or sets the SSH public key that can be used for remote login to the compute node.
            </summary>
            <remarks>
            <para>The public key should be compatible with Open SSH encoding and should be base 64 encoded. This property 
            can be specified only for Linux nodes. The Batch service will return an error if this property is set for pools 
            created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration"/> or <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> 
            with Windows compute nodes.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ComputeNodeUser}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Constants">
            <summary>
            Contains constants for interacting with the Azure Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.DefaultConveniencePrefix">
            <summary>
            The prefix used when creating automatically named containers or blobs as part of file staging.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.StandardOutFileName">
            <summary>
            The name of the standard output file generated by a task or start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.StandardErrorFileName">
            <summary>
            The name of the standard error file generated by a task or start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest">
            <summary>
            The maximum number of tasks that the client will include in a single AddTaskCollection request,
            when adding multiple tasks to a job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.DefaultSingleRestRequestClientTimeout">
            <summary>
            The default amount of time to wait for a response from the Batch service before automatically cancelling the 
            request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.InternalConstants.UserAgentProductName">
            <summary>
            The value to use for UserAgent header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.DetailLevel">
            <summary>
            Controls the amount of detail requested from the Azure Batch service when listing or
            retrieving resources.
            </summary>
            <remarks>The only supported implementation of DetailLevel is <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/>.
            Other implementations are ignored.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.Constants">
            <summary>
            Set of useful constants for interacting with file staging.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.FileStaging.Constants.DefaultContainerPolicyFragment">
            <summary>
            The default container policy fragment.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileStagingUtils.BucketizeFileStagingProviders(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider})">
            <summary>
            Creates buckets for the FileStagingProviders.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider">
            <summary>
            Provides basic file staging features.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)">
            <summary>
            Begins an asynchronous operation to stage all of the files in the given collection.
            When file staging begins, all instances of IFileStagingProvider are bucketized by their implementation type.
            This produces one collection of instances per implementation.
            Each implmentation of IFileStagingProvider has a StageFilesAsync() method.  That method is called once with the 
            collection produced by the bucketization step oulined above.
            </summary>
            <param name="filesToStage">Collection of all file staging objects to be staged.  All instances must have the same implementation type.</param>
            <param name="fileStagingArtifact">IFileStagingProvider specific staging artifacts including error/progress.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact">
            <summary>
            Returns an instance of IFileStagingArtifact with whatever values the implementation requires.
            This will be called during file staging whenever a staging artifact has not been otherwise provided.
            </summary>
            <returns>An instance of IFileStagingArtifact with whatever values the implementation requires.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate">
            <summary>
            Performs client-side validation on the current object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles">
            <summary>
            The collection of ResourceFile objects that are the result of file staging.   
            Must be set by the IFileStagingProvider.StageFilesAsync() method.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.AccountOperations">
            <summary>
            AccountOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the AccountOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.AccountOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.ListNodeAgentSkusWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
            <param name='accountListNodeAgentSkusOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.ListNodeAgentSkusNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='accountListNodeAgentSkusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions">
            <summary>
            Extension methods for AccountOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkus(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions)">
            <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountListNodeAgentSkusOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountListNodeAgentSkusOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNext(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions)">
            <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='accountListNodeAgentSkusNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNextAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='accountListNodeAgentSkusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ApplicationOperations">
            <summary>
            ApplicationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the ApplicationOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.ApplicationOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <remarks>
            This operation returns only applications and versions that are available
            for use on compute nodes; that is, that can be used in an application
            package reference. For administrator information about applications and
            versions that are not yet available to compute nodes, use the Azure portal
            or the Azure Resource Manager API.
            </remarks>
            <param name='applicationListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='applicationGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <remarks>
            This operation returns only applications and versions that are available
            for use on compute nodes; that is, that can be used in an application
            package reference. For administrator information about applications and
            versions that are not yet available to compute nodes, use the Azure portal
            or the Azure Resource Manager API.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='applicationListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions">
            <summary>
            Extension methods for ApplicationOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IApplicationOperations,Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <remarks>
            This operation returns only applications and versions that are available
            for use on compute nodes; that is, that can be used in an application
            package reference. For administrator information about applications and
            versions that are not yet available to compute nodes, use the Azure portal
            or the Azure Resource Manager API.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='applicationListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <remarks>
            This operation returns only applications and versions that are available
            for use on compute nodes; that is, that can be used in an application
            package reference. For administrator information about applications and
            versions that are not yet available to compute nodes, use the Azure portal
            or the Azure Resource Manager API.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='applicationListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='applicationGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='applicationGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <remarks>
            This operation returns only applications and versions that are available
            for use on compute nodes; that is, that can be used in an application
            package reference. For administrator information about applications and
            versions that are not yet available to compute nodes, use the Azure portal
            or the Azure Resource Manager API.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='applicationListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <remarks>
            This operation returns only applications and versions that are available
            for use on compute nodes; that is, that can be used in an application
            package reference. For administrator information about applications and
            versions that are not yet available to compute nodes, use the Azure portal
            or the Azure Resource Manager API.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='applicationListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient">
            <summary>
            A client for issuing REST requests to the Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.ApiVersion">
            <summary>
            Client API Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Application">
            <summary>
            Gets the IApplicationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Pool">
            <summary>
            Gets the IPoolOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Account">
            <summary>
            Gets the IAccountOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Job">
            <summary>
            Gets the IJobOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Certificate">
            <summary>
            Gets the ICertificateOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.File">
            <summary>
            Gets the IFileOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.JobSchedule">
            <summary>
            Gets the IJobScheduleOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Task">
            <summary>
            Gets the ITaskOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.ComputeNode">
            <summary>
            Gets the IComputeNodeOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CertificateOperations">
            <summary>
            CertificateOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the CertificateOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.CertificateOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='certificate'>
            The certificate to be added.
            </param>
            <param name='certificateAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='certificateListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.CancelDeletionWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
            <remarks>
            If you try to delete a certificate that is being used by a pool or compute
            node, the status of the certificate changes to deleteFailed. If you decide
            that you want to continue using the certificate, you can use this operation
            to set the status of the certificate back to active. If you intend to
            delete the certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the certificate is not being used
            by any resources, and then you can try again to delete the certificate.
            </remarks>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='certificateCancelDeletionOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.DeleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <remarks>
            You cannot delete a certificate if a resource (pool or compute node) is
            using it. Before you can delete a certificate, you must therefore make sure
            that the certificate is not associated with any existing pools, the
            certificate is not installed on any compute nodes (even if you remove a
            certificate from a pool, it is not removed from existing compute nodes in
            that pool until they restart), and no running tasks depend on the
            certificate. If you try to delete a certificate that is in use, the
            deletion fails. The certificate status changes to deleteFailed. You can use
            Cancel Delete Certificate to set the status back to active if you decide
            that you want to continue using the certificate.
            </remarks>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='certificateDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='certificateGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='certificateListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions">
            <summary>
            Extension methods for CertificateOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='certificate'>
            The certificate to be added.
            </param>
            <param name='certificateAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='certificate'>
            The certificate to be added.
            </param>
            <param name='certificateAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='certificateListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='certificateListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)">
            <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
            <remarks>
            If you try to delete a certificate that is being used by a pool or compute
            node, the status of the certificate changes to deleteFailed. If you decide
            that you want to continue using the certificate, you can use this operation
            to set the status of the certificate back to active. If you intend to
            delete the certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the certificate is not being used
            by any resources, and then you can try again to delete the certificate.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='certificateCancelDeletionOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
            <remarks>
            If you try to delete a certificate that is being used by a pool or compute
            node, the status of the certificate changes to deleteFailed. If you decide
            that you want to continue using the certificate, you can use this operation
            to set the status of the certificate back to active. If you intend to
            delete the certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the certificate is not being used
            by any resources, and then you can try again to delete the certificate.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='certificateCancelDeletionOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <remarks>
            You cannot delete a certificate if a resource (pool or compute node) is
            using it. Before you can delete a certificate, you must therefore make sure
            that the certificate is not associated with any existing pools, the
            certificate is not installed on any compute nodes (even if you remove a
            certificate from a pool, it is not removed from existing compute nodes in
            that pool until they restart), and no running tasks depend on the
            certificate. If you try to delete a certificate that is in use, the
            deletion fails. The certificate status changes to deleteFailed. You can use
            Cancel Delete Certificate to set the status back to active if you decide
            that you want to continue using the certificate.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='certificateDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <remarks>
            You cannot delete a certificate if a resource (pool or compute node) is
            using it. Before you can delete a certificate, you must therefore make sure
            that the certificate is not associated with any existing pools, the
            certificate is not installed on any compute nodes (even if you remove a
            certificate from a pool, it is not removed from existing compute nodes in
            that pool until they restart), and no running tasks depend on the
            certificate. If you try to delete a certificate that is in use, the
            deletion fails. The certificate status changes to deleteFailed. You can use
            Cancel Delete Certificate to set the status back to active if you decide
            that you want to continue using the certificate.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='certificateDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='certificateGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='certificateGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='certificateListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='certificateListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations">
            <summary>
            ComputeNodeOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the ComputeNodeOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.AddUserWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <remarks>
            You can add a user account to a node only when it is in the idle or running
            state.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to create a user account.
            </param>
            <param name='user'>
            The user account to be created.
            </param>
            <param name='computeNodeAddUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.DeleteUserWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <remarks>
            You can delete a user account to a node only when it is in the idle or
            running state.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='computeNodeDeleteUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.UpdateUserWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the password or expiration time of a user account on the specified
            compute node.
            </summary>
            <remarks>
            This operation replaces of all the updateable properties of the account.
            For example, if the expiryTime element is not specified, the current value
            is replaced with the default value, not left unmodified. You can update a
            user account on a node only when it is in the idle or running state.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='nodeUpdateUserParameter'>
            The parameters for the request.
            </param>
            <param name='computeNodeUpdateUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to get information about.
            </param>
            <param name='computeNodeGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.RebootWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <remarks>
            You can restart a node only if it is in an idle or running state.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to restart.
            </param>
            <param name='nodeRebootOption'>
            When to reboot the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
            <param name='computeNodeRebootOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ReimageWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <remarks>
            You can reinstall the operating system on a node only if it is in an idle
            or running state. This API can be invoked only on pools created with the
            cloud service configuration property.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to restart.
            </param>
            <param name='nodeReimageOption'>
            When to reimage the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
            <param name='computeNodeReimageOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.DisableSchedulingWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables task scheduling on the specified compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node on which you want to disable task scheduling.
            </param>
            <param name='nodeDisableSchedulingOption'>
            What to do with currently running tasks when disabling task scheduling on
            the compute node. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskCompletion'
            </param>
            <param name='computeNodeDisableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.EnableSchedulingWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables task scheduling on the specified compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node on which you want to enable task scheduling.
            </param>
            <param name='computeNodeEnableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.GetRemoteLoginSettingsWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <remarks>
            Before you can remotely login to a node using the remote login settings,
            you must create a user account on the node. This API can be invoked only on
            pools created with the virtual machine configuration property.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node for which to obtain the remote login settings.
            </param>
            <param name='computeNodeGetRemoteLoginSettingsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.GetRemoteDesktopWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute node.
            </summary>
            <remarks>
            Before you can access a node by using the RDP file, you must create a user
            account on the node. This API can only be invoked on pools created with the
            cloud service configuration property.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node for which you want to get the Remote Desktop
            Protocol file.
            </param>
            <param name='computeNodeGetRemoteDesktopOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ListWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='poolId'>
            The ID of the pool from which you want to list nodes.
            </param>
            <param name='computeNodeListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='computeNodeListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions">
            <summary>
            Extension methods for ComputeNodeOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <remarks>
            You can add a user account to a node only when it is in the idle or running
            state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to create a user account.
            </param>
            <param name='user'>
            The user account to be created.
            </param>
            <param name='computeNodeAddUserOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <remarks>
            You can add a user account to a node only when it is in the idle or running
            state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to create a user account.
            </param>
            <param name='user'>
            The user account to be created.
            </param>
            <param name='computeNodeAddUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <remarks>
            You can delete a user account to a node only when it is in the idle or
            running state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='computeNodeDeleteUserOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <remarks>
            You can delete a user account to a node only when it is in the idle or
            running state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='computeNodeDeleteUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions)">
            <summary>
            Updates the password or expiration time of a user account on the specified
            compute node.
            </summary>
            <remarks>
            This operation replaces of all the updateable properties of the account.
            For example, if the expiryTime element is not specified, the current value
            is replaced with the default value, not left unmodified. You can update a
            user account on a node only when it is in the idle or running state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='nodeUpdateUserParameter'>
            The parameters for the request.
            </param>
            <param name='computeNodeUpdateUserOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the password or expiration time of a user account on the specified
            compute node.
            </summary>
            <remarks>
            This operation replaces of all the updateable properties of the account.
            For example, if the expiryTime element is not specified, the current value
            is replaced with the default value, not left unmodified. You can update a
            user account on a node only when it is in the idle or running state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='nodeUpdateUserParameter'>
            The parameters for the request.
            </param>
            <param name='computeNodeUpdateUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to get information about.
            </param>
            <param name='computeNodeGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to get information about.
            </param>
            <param name='computeNodeGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reboot(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <remarks>
            You can restart a node only if it is in an idle or running state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to restart.
            </param>
            <param name='nodeRebootOption'>
            When to reboot the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
            <param name='computeNodeRebootOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RebootAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Threading.CancellationToken)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <remarks>
            You can restart a node only if it is in an idle or running state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to restart.
            </param>
            <param name='nodeRebootOption'>
            When to reboot the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
            <param name='computeNodeRebootOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reimage(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <remarks>
            You can reinstall the operating system on a node only if it is in an idle
            or running state. This API can be invoked only on pools created with the
            cloud service configuration property.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to restart.
            </param>
            <param name='nodeReimageOption'>
            When to reimage the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
            <param name='computeNodeReimageOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ReimageAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <remarks>
            You can reinstall the operating system on a node only if it is in an idle
            or running state. This API can be invoked only on pools created with the
            cloud service configuration property.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to restart.
            </param>
            <param name='nodeReimageOption'>
            When to reimage the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
            <param name='computeNodeReimageOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions)">
            <summary>
            Disables task scheduling on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node on which you want to disable task scheduling.
            </param>
            <param name='nodeDisableSchedulingOption'>
            What to do with currently running tasks when disabling task scheduling on
            the compute node. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskCompletion'
            </param>
            <param name='computeNodeDisableSchedulingOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Threading.CancellationToken)">
            <summary>
            Disables task scheduling on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node on which you want to disable task scheduling.
            </param>
            <param name='nodeDisableSchedulingOption'>
            What to do with currently running tasks when disabling task scheduling on
            the compute node. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskCompletion'
            </param>
            <param name='computeNodeDisableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions)">
            <summary>
            Enables task scheduling on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node on which you want to enable task scheduling.
            </param>
            <param name='computeNodeEnableSchedulingOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Threading.CancellationToken)">
            <summary>
            Enables task scheduling on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node on which you want to enable task scheduling.
            </param>
            <param name='computeNodeEnableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettings(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <remarks>
            Before you can remotely login to a node using the remote login settings,
            you must create a user account on the node. This API can be invoked only on
            pools created with the virtual machine configuration property.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node for which to obtain the remote login settings.
            </param>
            <param name='computeNodeGetRemoteLoginSettingsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettingsAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <remarks>
            Before you can remotely login to a node using the remote login settings,
            you must create a user account on the node. This API can be invoked only on
            pools created with the virtual machine configuration property.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node for which to obtain the remote login settings.
            </param>
            <param name='computeNodeGetRemoteLoginSettingsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktop(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute node.
            </summary>
            <remarks>
            Before you can access a node by using the RDP file, you must create a user
            account on the node. This API can only be invoked on pools created with the
            cloud service configuration property.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node for which you want to get the Remote Desktop
            Protocol file.
            </param>
            <param name='computeNodeGetRemoteDesktopOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktopAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute node.
            </summary>
            <remarks>
            Before you can access a node by using the RDP file, you must create a user
            account on the node. This API can only be invoked on pools created with the
            cloud service configuration property.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node for which you want to get the Remote Desktop
            Protocol file.
            </param>
            <param name='computeNodeGetRemoteDesktopOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool from which you want to list nodes.
            </param>
            <param name='computeNodeListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool from which you want to list nodes.
            </param>
            <param name='computeNodeListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='computeNodeListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='computeNodeListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.FileOperations">
            <summary>
            FileOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the FileOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.FileOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.DeleteFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node where the task ran.
            </summary>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to delete.
            </param>
            <param name='filePath'>
            The path to the task file that you want to delete.
            </param>
            <param name='recursive'>
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.GetFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to retrieve.
            </param>
            <param name='filePath'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.GetPropertiesFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to get the properties of.
            </param>
            <param name='filePath'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='fileGetPropertiesFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.DeleteFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified file from the compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node from which you want to delete the file.
            </param>
            <param name='filePath'>
            The path to the file that you want to delete.
            </param>
            <param name='recursive'>
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.GetFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified compute node file.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that contains the file.
            </param>
            <param name='filePath'>
            The path to the compute node file that you want to get the content of.
            </param>
            <param name='fileGetFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.GetPropertiesFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that contains the file.
            </param>
            <param name='filePath'>
            The path to the compute node file that you want to get the properties of.
            </param>
            <param name='fileGetPropertiesFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.ListFromTaskWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose files you want to list.
            </param>
            <param name='recursive'>
            Whether to list children of a directory. This parameter can be used in
            combination with the filter parameter to list specific type of files.
            </param>
            <param name='fileListFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.ListFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node whose files you want to list.
            </param>
            <param name='recursive'>
            Whether to list children of a directory.
            </param>
            <param name='fileListFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.ListFromTaskNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromTaskNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.ListFromComputeNodeNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromComputeNodeNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions">
            <summary>
            Extension methods for FileOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)">
            <summary>
            Deletes the specified task file from the compute node where the task ran.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to delete.
            </param>
            <param name='filePath'>
            The path to the task file that you want to delete.
            </param>
            <param name='recursive'>
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromTaskOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node where the task ran.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to delete.
            </param>
            <param name='filePath'>
            The path to the task file that you want to delete.
            </param>
            <param name='recursive'>
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to retrieve.
            </param>
            <param name='filePath'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromTaskOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to retrieve.
            </param>
            <param name='filePath'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to get the properties of.
            </param>
            <param name='filePath'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='fileGetPropertiesFromTaskOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to get the properties of.
            </param>
            <param name='filePath'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='fileGetPropertiesFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)">
            <summary>
            Deletes the specified file from the compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node from which you want to delete the file.
            </param>
            <param name='filePath'>
            The path to the file that you want to delete.
            </param>
            <param name='recursive'>
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified file from the compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node from which you want to delete the file.
            </param>
            <param name='filePath'>
            The path to the file that you want to delete.
            </param>
            <param name='recursive'>
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)">
            <summary>
            Returns the content of the specified compute node file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that contains the file.
            </param>
            <param name='filePath'>
            The path to the compute node file that you want to get the content of.
            </param>
            <param name='fileGetFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified compute node file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that contains the file.
            </param>
            <param name='filePath'>
            The path to the compute node file that you want to get the content of.
            </param>
            <param name='fileGetFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that contains the file.
            </param>
            <param name='filePath'>
            The path to the compute node file that you want to get the properties of.
            </param>
            <param name='fileGetPropertiesFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that contains the file.
            </param>
            <param name='filePath'>
            The path to the compute node file that you want to get the properties of.
            </param>
            <param name='fileGetPropertiesFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose files you want to list.
            </param>
            <param name='recursive'>
            Whether to list children of a directory. This parameter can be used in
            combination with the filter parameter to list specific type of files.
            </param>
            <param name='fileListFromTaskOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose files you want to list.
            </param>
            <param name='recursive'>
            Whether to list children of a directory. This parameter can be used in
            combination with the filter parameter to list specific type of files.
            </param>
            <param name='fileListFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node whose files you want to list.
            </param>
            <param name='recursive'>
            Whether to list children of a directory.
            </param>
            <param name='fileListFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node whose files you want to list.
            </param>
            <param name='recursive'>
            Whether to list children of a directory.
            </param>
            <param name='fileListFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromTaskNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromTaskNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromComputeNodeNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromComputeNodeNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IAccountOperations">
            <summary>
            AccountOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IAccountOperations.ListNodeAgentSkusWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
            <param name='accountListNodeAgentSkusOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IAccountOperations.ListNodeAgentSkusNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='accountListNodeAgentSkusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IApplicationOperations">
            <summary>
            ApplicationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IApplicationOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <remarks>
            This operation returns only applications and versions that are
            available for use on compute nodes; that is, that can be used in an
            application package reference. For administrator information about
            applications and versions that are not yet available to compute
            nodes, use the Azure portal or the Azure Resource Manager API.
            </remarks>
            <param name='applicationListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IApplicationOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='applicationGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IApplicationOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <remarks>
            This operation returns only applications and versions that are
            available for use on compute nodes; that is, that can be used in an
            application package reference. For administrator information about
            applications and versions that are not yet available to compute
            nodes, use the Azure portal or the Azure Resource Manager API.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='applicationListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IBatchServiceClient">
            <summary>
            A client for issuing REST requests to the Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion">
            <summary>
            Client API Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application">
            <summary>
            Gets the IApplicationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool">
            <summary>
            Gets the IPoolOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account">
            <summary>
            Gets the IAccountOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job">
            <summary>
            Gets the IJobOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate">
            <summary>
            Gets the ICertificateOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File">
            <summary>
            Gets the IFileOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule">
            <summary>
            Gets the IJobScheduleOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task">
            <summary>
            Gets the ITaskOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode">
            <summary>
            Gets the IComputeNodeOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations">
            <summary>
            CertificateOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='certificate'>
            The certificate to be added.
            </param>
            <param name='certificateAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='certificateListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.CancelDeletionWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified
            account.
            </summary>
            <remarks>
            If you try to delete a certificate that is being used by a pool or
            compute node, the status of the certificate changes to
            deleteFailed. If you decide that you want to continue using the
            certificate, you can use this operation to set the status of the
            certificate back to active. If you intend to delete the
            certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the certificate is not
            being used by any resources, and then you can try again to delete
            the certificate.
            </remarks>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='certificateCancelDeletionOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.DeleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <remarks>
            You cannot delete a certificate if a resource (pool or compute
            node) is using it. Before you can delete a certificate, you must
            therefore make sure that the certificate is not associated with any
            existing pools, the certificate is not installed on any compute
            nodes (even if you remove a certificate from a pool, it is not
            removed from existing compute nodes in that pool until they
            restart), and no running tasks depend on the certificate. If you
            try to delete a certificate that is in use, the deletion fails. The
            certificate status changes to deleteFailed. You can use Cancel
            Delete Certificate to set the status back to active if you decide
            that you want to continue using the certificate.
            </remarks>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='certificateDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='certificateGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='certificateListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations">
            <summary>
            ComputeNodeOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.AddUserWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <remarks>
            You can add a user account to a node only when it is in the idle or
            running state.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to create a user account.
            </param>
            <param name='user'>
            The user account to be created.
            </param>
            <param name='computeNodeAddUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.DeleteUserWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <remarks>
            You can delete a user account to a node only when it is in the idle
            or running state.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='computeNodeDeleteUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.UpdateUserWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the password or expiration time of a user account on the
            specified compute node.
            </summary>
            <remarks>
            This operation replaces of all the updateable properties of the
            account. For example, if the expiryTime element is not specified,
            the current value is replaced with the default value, not left
            unmodified. You can update a user account on a node only when it is
            in the idle or running state.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='nodeUpdateUserParameter'>
            The parameters for the request.
            </param>
            <param name='computeNodeUpdateUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to get information about.
            </param>
            <param name='computeNodeGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.RebootWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <remarks>
            You can restart a node only if it is in an idle or running state.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to restart.
            </param>
            <param name='nodeRebootOption'>
            When to reboot the compute node and what to do with currently
            running tasks. The default value is requeue. Possible values
            include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'
            </param>
            <param name='computeNodeRebootOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ReimageWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <remarks>
            You can reinstall the operating system on a node only if it is in
            an idle or running state. This API can be invoked only on pools
            created with the cloud service configuration property.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that you want to restart.
            </param>
            <param name='nodeReimageOption'>
            When to reimage the compute node and what to do with currently
            running tasks. The default value is requeue. Possible values
            include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'
            </param>
            <param name='computeNodeReimageOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.DisableSchedulingWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables task scheduling on the specified compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node on which you want to disable task
            scheduling.
            </param>
            <param name='nodeDisableSchedulingOption'>
            What to do with currently running tasks when disabling task
            scheduling on the compute node. The default value is requeue.
            Possible values include: 'requeue', 'terminate', 'taskCompletion'
            </param>
            <param name='computeNodeDisableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.EnableSchedulingWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables task scheduling on the specified compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node on which you want to enable task
            scheduling.
            </param>
            <param name='computeNodeEnableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.GetRemoteLoginSettingsWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <remarks>
            Before you can remotely login to a node using the remote login
            settings, you must create a user account on the node. This API can
            be invoked only on pools created with the virtual machine
            configuration property.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node for which to obtain the remote login
            settings.
            </param>
            <param name='computeNodeGetRemoteLoginSettingsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.GetRemoteDesktopWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute
            node.
            </summary>
            <remarks>
            Before you can access a node by using the RDP file, you must create
            a user account on the node. This API can only be invoked on pools
            created with the cloud service configuration property.
            </remarks>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node for which you want to get the Remote
            Desktop Protocol file.
            </param>
            <param name='computeNodeGetRemoteDesktopOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ListWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='poolId'>
            The ID of the pool from which you want to list nodes.
            </param>
            <param name='computeNodeListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='computeNodeListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IFileOperations">
            <summary>
            FileOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.DeleteFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node where the
            task ran.
            </summary>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to delete.
            </param>
            <param name='filePath'>
            The path to the task file that you want to delete.
            </param>
            <param name='recursive'>
            Whether to delete children of a directory. If the filePath
            parameter represents a directory instead of a file, you can set
            recursive to true to delete the directory and all of the files and
            subdirectories in it. If recursive is false then the directory must
            be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.GetFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to retrieve.
            </param>
            <param name='filePath'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.GetPropertiesFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose file you want to get the properties of.
            </param>
            <param name='filePath'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='fileGetPropertiesFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.DeleteFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified file from the compute node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node from which you want to delete the file.
            </param>
            <param name='filePath'>
            The path to the file that you want to delete.
            </param>
            <param name='recursive'>
            Whether to delete children of a directory. If the filePath
            parameter represents a directory instead of a file, you can set
            recursive to true to delete the directory and all of the files and
            subdirectories in it. If recursive is false then the directory must
            be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.GetFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified compute node file.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that contains the file.
            </param>
            <param name='filePath'>
            The path to the compute node file that you want to get the content
            of.
            </param>
            <param name='fileGetFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.GetPropertiesFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node that contains the file.
            </param>
            <param name='filePath'>
            The path to the compute node file that you want to get the
            properties of.
            </param>
            <param name='fileGetPropertiesFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.ListFromTaskWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task whose files you want to list.
            </param>
            <param name='recursive'>
            Whether to list children of a directory. This parameter can be used
            in combination with the filter parameter to list specific type of
            files.
            </param>
            <param name='fileListFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.ListFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute
            node.
            </summary>
            <param name='poolId'>
            The ID of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The ID of the compute node whose files you want to list.
            </param>
            <param name='recursive'>
            Whether to list children of a directory.
            </param>
            <param name='fileListFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.ListFromTaskNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromTaskNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.ListFromComputeNodeNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute
            node.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromComputeNodeNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IJobOperations">
            <summary>
            JobOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.GetAllLifetimeStatisticsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the
            specified account.
            </summary>
            <remarks>
            Statistics are aggregated across all jobs that have ever existed in
            the account, from account creation to the last update time of the
            statistics.
            </remarks>
            <param name='jobGetAllLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a job.
            </summary>
            <remarks>
            Deleting a job also deletes all tasks that are part of that job,
            and all job statistics. This also overrides the retention period
            for task data; that is, if the job contains tasks which are still
            retained on compute nodes, the Batch services deletes those tasks'
            working directories and all their contents.
            </remarks>
            <param name='jobId'>
            The ID of the job to delete.
            </param>
            <param name='jobDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='jobGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job.
            </summary>
            <remarks>
            This replaces only the job properties specified in the request. For
            example, if the job has constraints, and a request does not specify
            the constraints element, then the job keeps the existing
            constraints.
            </remarks>
            <param name='jobId'>
            The ID of the job whose properties you want to update.
            </param>
            <param name='jobPatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the job. For
            example, if the job has constraints associated with it and if
            constraints is not specified with this request, then the Batch
            service will remove the existing constraints.
            </remarks>
            <param name='jobId'>
            The ID of the job whose properties you want to update.
            </param>
            <param name='jobUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.DisableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <remarks>
            The Batch Service immediately moves the job to the disabling state.
            Batch then uses the disableTasks parameter to determine what to do
            with the currently running tasks of the job. The job remains in the
            disabling state until the disable operation is completed and all
            tasks have been dealt with according to the disableTasks option;
            the job then moves to the disabled state. No new tasks are started
            under the job until it moves back to active state. If you try to
            disable a job that is in any state other than active, disabling, or
            disabled, the request fails with status code 409.
            </remarks>
            <param name='jobId'>
            The ID of the job to disable.
            </param>
            <param name='disableTasks'>
            What to do with active tasks associated with the job. requeue -
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. terminate - Terminate running tasks. The
            tasks will not run again. wait - Allow currently running tasks to
            complete. Possible values include: 'requeue', 'terminate', 'wait'
            </param>
            <param name='jobDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.EnableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <remarks>
            When you call this API, the Batch service sets a disabled job to
            the enabling state. After the this operation is completed, the job
            moves to the active state, and scheduling of new tasks under the
            job resumes. The Batch service does not allow a task to remain in
            the active state for more than 7 days. Therefore, if you enable a
            job containing active tasks which were added more than 7 days ago,
            those tasks will not run.
            </remarks>
            <param name='jobId'>
            The ID of the job to enable.
            </param>
            <param name='jobEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.TerminateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <remarks>
            When a Terminate Job request is received, the Batch service sets
            the job to the terminating state. The Batch service then terminates
            any active or running tasks associated with the job, and runs any
            required Job Release tasks. The job then moves into the completed
            state.
            </remarks>
            <param name='jobId'>
            The ID of the job to terminate.
            </param>
            <param name='terminateReason'>
            The text you want to appear as the job's TerminateReason. The
            default is 'UserTerminate'.
            </param>
            <param name='jobTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <remarks>
            The Batch service supports two ways to control the work done as
            part of a job. In the first approach, the user specifies a Job
            Manager task. The Batch service launches this task when it is ready
            to start the job. The Job Manager task controls all other tasks
            that run under this job, by using the Task APIs. In the second
            approach, the user directly controls the execution of tasks under
            an active job, by using the Task APIs. Also note: when naming jobs,
            avoid including sensitive information such as user names or secret
            project names. This information may appear in telemetry logs
            accessible to Microsoft Support engineers.
            </remarks>
            <param name='job'>
            The job to be added.
            </param>
            <param name='jobAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='jobListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListFromJobScheduleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule from which you want to get a list of
            jobs.
            </param>
            <param name='jobListFromJobScheduleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListPreparationAndReleaseTaskStatusWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <remarks>
            This API returns the Job Preparation and Job Release task status on
            all compute nodes that have run the Job Preparation or Job Release
            task. This includes nodes which have since been removed from the
            pool.
            </remarks>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListFromJobScheduleNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListFromJobScheduleNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListPreparationAndReleaseTaskStatusNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <remarks>
            This API returns the Job Preparation and Job Release task status on
            all compute nodes that have run the Job Preparation or Job Release
            task. This includes nodes which have since been removed from the
            pool.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations">
            <summary>
            JobScheduleOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.ExistsWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule which you want to check.
            </param>
            <param name='jobScheduleExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <remarks>
            When you delete a job schedule, this also deletes all jobs and
            tasks under that schedule. When tasks are deleted, all the files in
            their working directories on the compute nodes are also deleted
            (the retention period is ignored). The job schedule statistics are
            no longer accessible once the job schedule is deleted, though they
            are still counted towards account lifetime statistics.
            </remarks>
            <param name='jobScheduleId'>
            The ID of the job schedule to delete.
            </param>
            <param name='jobScheduleDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule to get.
            </param>
            <param name='jobScheduleGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <remarks>
            This replaces only the job schedule properties specified in the
            request. For example, if the schedule property is not specified
            with this request, then the Batch service will keep the existing
            schedule. Changes to a job schedule only impact jobs created by the
            schedule after the update has taken place; currently running jobs
            are unaffected.
            </remarks>
            <param name='jobScheduleId'>
            The ID of the job schedule to update.
            </param>
            <param name='jobSchedulePatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobSchedulePatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the job
            schedule. For example, if the schedule property is not specified
            with this request, then the Batch service will remove the existing
            schedule. Changes to a job schedule only impact jobs created by the
            schedule after the update has taken place; currently running jobs
            are unaffected.
            </remarks>
            <param name='jobScheduleId'>
            The ID of the job schedule to update.
            </param>
            <param name='jobScheduleUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobScheduleUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.DisableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables a job schedule.
            </summary>
            <remarks>
            No new jobs will be created until the job schedule is enabled
            again.
            </remarks>
            <param name='jobScheduleId'>
            The ID of the job schedule to disable.
            </param>
            <param name='jobScheduleDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.EnableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule to enable.
            </param>
            <param name='jobScheduleEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.TerminateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule to terminates.
            </param>
            <param name='jobScheduleTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='cloudJobSchedule'>
            The job schedule to be added.
            </param>
            <param name='jobScheduleAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='jobScheduleListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobScheduleListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IPoolOperations">
            <summary>
            PoolOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ListUsageMetricsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <remarks>
            If you do not specify a $filter clause including a poolId, the
            response includes all pools that existed in the account in the time
            range of the returned aggregation intervals.
            </remarks>
            <param name='poolListUsageMetricsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.GetAllLifetimeStatisticsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the
            specified account.
            </summary>
            <remarks>
            Statistics are aggregated across all pools that have ever existed
            in the account, from account creation to the last update time of
            the statistics.
            </remarks>
            <param name='poolGetAllLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <remarks>
            When naming pools, avoid including sensitive information such as
            user names or secret project names. This information may appear in
            telemetry logs accessible to Microsoft Support engineers.
            </remarks>
            <param name='pool'>
            The pool to be added.
            </param>
            <param name='poolAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='poolListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <remarks>
            When you request that a pool be deleted, the following actions
            occur: the pool state is set to deleting; any ongoing resize
            operation on the pool are stopped; the Batch service starts
            resizing the pool to zero nodes; any tasks running on existing
            nodes are terminated and requeued (as if a resize pool operation
            had been requested with the default requeue option); finally, the
            pool is removed from the system. Because running tasks are
            requeued, the user can rerun these tasks by updating their job to
            target a different pool. The tasks can then run on the new pool. If
            you want to override the requeue behavior, then you should call
            resize pool explicitly to shrink the pool to zero size before
            deleting the pool. If you call an Update, Patch or Delete API on a
            pool in the deleting state, it will fail with HTTP status code 409
            with error code PoolBeingDeleted.
            </remarks>
            <param name='poolId'>
            The ID of the pool to delete.
            </param>
            <param name='poolDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ExistsWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='poolId'>
            The ID of the pool to get.
            </param>
            <param name='poolExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='poolId'>
            The ID of the pool to get.
            </param>
            <param name='poolGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified pool.
            </summary>
            <remarks>
            This only replaces the pool properties specified in the request.
            For example, if the pool has a start task associated with it, and a
            request does not specify a start task element, then the pool keeps
            the existing start task.
            </remarks>
            <param name='poolId'>
            The ID of the pool to update.
            </param>
            <param name='poolPatchParameter'>
            The parameters for the request.
            </param>
            <param name='poolPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.DisableAutoScaleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            The ID of the pool on which to disable automatic scaling.
            </param>
            <param name='poolDisableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.EnableAutoScaleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <remarks>
            You cannot enable automatic scaling on a pool if a resize operation
            is in progress on the pool. If automatic scaling of the pool is
            currently disabled, you must specify a valid autoscale formula as
            part of the request. If automatic scaling of the pool is already
            enabled, you may specify a new autoscale formula and/or a new
            evaluation interval. You cannot call this API for the same pool
            more than once every 30 seconds.
            </remarks>
            <param name='poolId'>
            The ID of the pool on which to enable automatic scaling.
            </param>
            <param name='poolEnableAutoScaleParameter'>
            The parameters for the request.
            </param>
            <param name='poolEnableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.EvaluateAutoScaleWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the
            pool.
            </summary>
            <remarks>
            This API is primarily for validating an autoscale formula, as it
            simply returns the result without applying the formula to the pool.
            </remarks>
            <param name='poolId'>
            The ID of the pool on which to evaluate the automatic scaling
            formula.
            </param>
            <param name='autoScaleFormula'>
            The formula for the desired number of compute nodes in the pool.
            The formula is validated and its results calculated, but it is not
            applied to the pool. To apply the formula to the pool, 'Enable
            automatic scaling on a pool'. For more information about specifying
            this formula, see Automatically scale compute nodes in an Azure
            Batch pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
            </param>
            <param name='poolEvaluateAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ResizeWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <remarks>
            You can only resize a pool when its allocation state is steady. If
            the pool is already resizing, the request fails with status code
            409. When you resize a pool, the pool's allocation state changes
            from steady to resizing. You cannot resize pools which are
            configured for automatic scaling. If you try to do this, the Batch
            service returns an error 409. If you resize a pool downwards, the
            Batch service chooses which nodes to remove. To remove specific
            nodes, use the pool remove nodes API instead.
            </remarks>
            <param name='poolId'>
            The ID of the pool to resize.
            </param>
            <param name='poolResizeParameter'>
            The parameters for the request.
            </param>
            <param name='poolResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.StopResizeWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
            <remarks>
            This does not restore the pool to its previous state before the
            resize operation: it only stops any further changes being made, and
            the pool maintains its current state. A resize operation need not
            be an explicit resize pool request; this API can also be used to
            halt the initial sizing of the pool when it is created.
            </remarks>
            <param name='poolId'>
            The ID of the pool whose resizing you want to stop.
            </param>
            <param name='poolStopResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.UpdatePropertiesWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified pool.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the pool. For
            example, if the pool has a start task associated with it and if
            start task is not specified with this request, then the Batch
            service will remove the existing start task.
            </remarks>
            <param name='poolId'>
            The ID of the pool to update.
            </param>
            <param name='poolUpdatePropertiesParameter'>
            The parameters for the request.
            </param>
            <param name='poolUpdatePropertiesOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.UpgradeOSWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <remarks>
            During an upgrade, the Batch service upgrades each compute node in
            the pool. When a compute node is chosen for upgrade, any tasks
            running on that node are removed from the node and returned to the
            queue to be rerun later (or on a different compute node). The node
            will be unavailable until the upgrade is complete. This operation
            results in temporarily reduced pool capacity as nodes are taken out
            of service to be upgraded. Although the Batch service tries to
            avoid upgrading all compute nodes at the same time, it does not
            guarantee to do this (particularly on small pools); therefore, the
            pool may be temporarily unavailable to run tasks. When this
            operation runs, the pool state changes to upgrading. When all
            compute nodes have finished upgrading, the pool state returns to
            active.
            </remarks>
            <param name='poolId'>
            The ID of the pool to upgrade.
            </param>
            <param name='targetOSVersion'>
            The Azure Guest OS version to be installed on the virtual machines
            in the pool.
            </param>
            <param name='poolUpgradeOSOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.RemoveNodesWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <remarks>
            This operation can only run when the allocation state of the pool
            is steady. When this operation runs, the allocation state changes
            from steady to resizing.
            </remarks>
            <param name='poolId'>
            The ID of the pool from which you want to remove nodes.
            </param>
            <param name='nodeRemoveParameter'>
            The parameters for the request.
            </param>
            <param name='poolRemoveNodesOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ListUsageMetricsNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <remarks>
            If you do not specify a $filter clause including a poolId, the
            response includes all pools that existed in the account in the time
            range of the returned aggregation intervals.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListUsageMetricsNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ITaskOperations">
            <summary>
            TaskOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.AddWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='jobId'>
            The ID of the job to which the task is to be added.
            </param>
            <param name='task'>
            The task to be added.
            </param>
            <param name='taskAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.ListWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId,
            executionInfo and nodeInfo refer to the primary task. Use the list
            subtasks API to retrieve information about subtasks.
            </remarks>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='taskListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.AddCollectionWithHttpMessagesAsync(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <remarks>
            Note that each task must have a unique ID. The Batch service may
            not return the results for each task in the same order the tasks
            were submitted in this request. If the server times out or the
            connection is closed during the request, the request may have been
            partially or fully processed, or not at all. In such cases, the
            user should re-issue the request. Note that it is up to the user to
            correctly handle failures when re-issuing a request. For example,
            you should use the same task ids during a retry so that if the
            prior operation succeeded, the retry will not create extra tasks
            unexpectedly.
            </remarks>
            <param name='jobId'>
            The ID of the job to which the task collection is to be added.
            </param>
            <param name='value'>
            The collection of tasks to add.
            </param>
            <param name='taskAddCollectionOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.DeleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <remarks>
            When a task is deleted, all of the files in its directory on the
            compute node where it ran are also deleted (regardless of the
            retention time). For multi-instance tasks, the delete task
            operation applies synchronously to the primary task; subtasks and
            their files are then deleted asynchronously in the background.
            </remarks>
            <param name='jobId'>
            The ID of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The ID of the task to delete.
            </param>
            <param name='taskDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified task.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId,
            executionInfo and nodeInfo refer to the primary task. Use the list
            subtasks API to retrieve information about subtasks.
            </remarks>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task to get information about.
            </param>
            <param name='taskGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to update.
            </param>
            <param name='constraints'>
            Constraints that apply to this task. If omitted, the task is given
            the default constraints.
            </param>
            <param name='taskUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.ListSubtasksWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
            <remarks>
            If the task is not a multi-instance task then this returns an empty
            collection.
            </remarks>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='taskId'>
            The ID of the task.
            </param>
            <param name='taskListSubtasksOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.TerminateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <remarks>
            When the task has been terminated, it moves to the completed state.
            For multi-instance tasks, the terminate task operation applies
            synchronously to the primary task; subtasks are then terminated
            asynchronously in the background.
            </remarks>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to terminate.
            </param>
            <param name='taskTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.ReactivateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reactivates the specified task.
            </summary>
            <remarks>
            Reactivation makes a task eligible to be retried again up to its
            maximum retry count. The task's state is changed to active. As the
            task is no longer in the completed state, any previous exit code or
            scheduling error is no longer available after reactivation. This
            will fail for tasks that are not completed or that previously
            completed successfully (with an exit code of 0). Additionally, this
            will fail if the job has completed (or is terminating or deleting).
            </remarks>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to reactivate.
            </param>
            <param name='taskReactivateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId,
            executionInfo and nodeInfo refer to the primary task. Use the list
            subtasks API to retrieve information about subtasks.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='taskListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.JobOperations">
            <summary>
            JobOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the JobOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.JobOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.GetAllLifetimeStatisticsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the specified
            account.
            </summary>
            <remarks>
            Statistics are aggregated across all jobs that have ever existed in the
            account, from account creation to the last update time of the statistics.
            </remarks>
            <param name='jobGetAllLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a job.
            </summary>
            <remarks>
            Deleting a job also deletes all tasks that are part of that job, and all
            job statistics. This also overrides the retention period for task data;
            that is, if the job contains tasks which are still retained on compute
            nodes, the Batch services deletes those tasks' working directories and all
            their contents.
            </remarks>
            <param name='jobId'>
            The ID of the job to delete.
            </param>
            <param name='jobDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='jobGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job.
            </summary>
            <remarks>
            This replaces only the job properties specified in the request. For
            example, if the job has constraints, and a request does not specify the
            constraints element, then the job keeps the existing constraints.
            </remarks>
            <param name='jobId'>
            The ID of the job whose properties you want to update.
            </param>
            <param name='jobPatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the job. For example,
            if the job has constraints associated with it and if constraints is not
            specified with this request, then the Batch service will remove the
            existing constraints.
            </remarks>
            <param name='jobId'>
            The ID of the job whose properties you want to update.
            </param>
            <param name='jobUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.DisableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <remarks>
            The Batch Service immediately moves the job to the disabling state. Batch
            then uses the disableTasks parameter to determine what to do with the
            currently running tasks of the job. The job remains in the disabling state
            until the disable operation is completed and all tasks have been dealt with
            according to the disableTasks option; the job then moves to the disabled
            state. No new tasks are started under the job until it moves back to active
            state. If you try to disable a job that is in any state other than active,
            disabling, or disabled, the request fails with status code 409.
            </remarks>
            <param name='jobId'>
            The ID of the job to disable.
            </param>
            <param name='disableTasks'>
            What to do with active tasks associated with the job. requeue - Terminate
            running tasks and requeue them. The tasks will run again when the job is
            enabled. terminate - Terminate running tasks. The tasks will not run again.
            wait - Allow currently running tasks to complete. Possible values include:
            'requeue', 'terminate', 'wait'
            </param>
            <param name='jobDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.EnableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <remarks>
            When you call this API, the Batch service sets a disabled job to the
            enabling state. After the this operation is completed, the job moves to the
            active state, and scheduling of new tasks under the job resumes. The Batch
            service does not allow a task to remain in the active state for more than 7
            days. Therefore, if you enable a job containing active tasks which were
            added more than 7 days ago, those tasks will not run.
            </remarks>
            <param name='jobId'>
            The ID of the job to enable.
            </param>
            <param name='jobEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.TerminateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <remarks>
            When a Terminate Job request is received, the Batch service sets the job to
            the terminating state. The Batch service then terminates any active or
            running tasks associated with the job, and runs any required Job Release
            tasks. The job then moves into the completed state.
            </remarks>
            <param name='jobId'>
            The ID of the job to terminate.
            </param>
            <param name='terminateReason'>
            The text you want to appear as the job's TerminateReason. The default is
            'UserTerminate'.
            </param>
            <param name='jobTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <remarks>
            The Batch service supports two ways to control the work done as part of a
            job. In the first approach, the user specifies a Job Manager task. The
            Batch service launches this task when it is ready to start the job. The Job
            Manager task controls all other tasks that run under this job, by using the
            Task APIs. In the second approach, the user directly controls the execution
            of tasks under an active job, by using the Task APIs. Also note: when
            naming jobs, avoid including sensitive information such as user names or
            secret project names. This information may appear in telemetry logs
            accessible to Microsoft Support engineers.
            </remarks>
            <param name='job'>
            The job to be added.
            </param>
            <param name='jobAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='jobListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListFromJobScheduleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule from which you want to get a list of jobs.
            </param>
            <param name='jobListFromJobScheduleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListPreparationAndReleaseTaskStatusWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <remarks>
            This API returns the Job Preparation and Job Release task status on all
            compute nodes that have run the Job Preparation or Job Release task. This
            includes nodes which have since been removed from the pool.
            </remarks>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListFromJobScheduleNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListFromJobScheduleNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListPreparationAndReleaseTaskStatusNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <remarks>
            This API returns the Job Preparation and Job Release task status on all
            compute nodes that have run the Job Preparation or Job Release task. This
            includes nodes which have since been removed from the pool.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions">
            <summary>
            Extension methods for JobOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the specified
            account.
            </summary>
            <remarks>
            Statistics are aggregated across all jobs that have ever existed in the
            account, from account creation to the last update time of the statistics.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobGetAllLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the specified
            account.
            </summary>
            <remarks>
            Statistics are aggregated across all jobs that have ever existed in the
            account, from account creation to the last update time of the statistics.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobGetAllLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)">
            <summary>
            Deletes a job.
            </summary>
            <remarks>
            Deleting a job also deletes all tasks that are part of that job, and all
            job statistics. This also overrides the retention period for task data;
            that is, if the job contains tasks which are still retained on compute
            nodes, the Batch services deletes those tasks' working directories and all
            their contents.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to delete.
            </param>
            <param name='jobDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a job.
            </summary>
            <remarks>
            Deleting a job also deletes all tasks that are part of that job, and all
            job statistics. This also overrides the retention period for task data;
            that is, if the job contains tasks which are still retained on compute
            nodes, the Batch services deletes those tasks' working directories and all
            their contents.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to delete.
            </param>
            <param name='jobDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='jobGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='jobGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)">
            <summary>
            Updates the properties of the specified job.
            </summary>
            <remarks>
            This replaces only the job properties specified in the request. For
            example, if the job has constraints, and a request does not specify the
            constraints element, then the job keeps the existing constraints.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job whose properties you want to update.
            </param>
            <param name='jobPatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobPatchOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job.
            </summary>
            <remarks>
            This replaces only the job properties specified in the request. For
            example, if the job has constraints, and a request does not specify the
            constraints element, then the job keeps the existing constraints.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job whose properties you want to update.
            </param>
            <param name='jobPatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)">
            <summary>
            Updates the properties of the specified job.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the job. For example,
            if the job has constraints associated with it and if constraints is not
            specified with this request, then the Batch service will remove the
            existing constraints.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job whose properties you want to update.
            </param>
            <param name='jobUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobUpdateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the job. For example,
            if the job has constraints associated with it and if constraints is not
            specified with this request, then the Batch service will remove the
            existing constraints.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job whose properties you want to update.
            </param>
            <param name='jobUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <remarks>
            The Batch Service immediately moves the job to the disabling state. Batch
            then uses the disableTasks parameter to determine what to do with the
            currently running tasks of the job. The job remains in the disabling state
            until the disable operation is completed and all tasks have been dealt with
            according to the disableTasks option; the job then moves to the disabled
            state. No new tasks are started under the job until it moves back to active
            state. If you try to disable a job that is in any state other than active,
            disabling, or disabled, the request fails with status code 409.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to disable.
            </param>
            <param name='disableTasks'>
            What to do with active tasks associated with the job. requeue - Terminate
            running tasks and requeue them. The tasks will run again when the job is
            enabled. terminate - Terminate running tasks. The tasks will not run again.
            wait - Allow currently running tasks to complete. Possible values include:
            'requeue', 'terminate', 'wait'
            </param>
            <param name='jobDisableOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Threading.CancellationToken)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <remarks>
            The Batch Service immediately moves the job to the disabling state. Batch
            then uses the disableTasks parameter to determine what to do with the
            currently running tasks of the job. The job remains in the disabling state
            until the disable operation is completed and all tasks have been dealt with
            according to the disableTasks option; the job then moves to the disabled
            state. No new tasks are started under the job until it moves back to active
            state. If you try to disable a job that is in any state other than active,
            disabling, or disabled, the request fails with status code 409.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to disable.
            </param>
            <param name='disableTasks'>
            What to do with active tasks associated with the job. requeue - Terminate
            running tasks and requeue them. The tasks will run again when the job is
            enabled. terminate - Terminate running tasks. The tasks will not run again.
            wait - Allow currently running tasks to complete. Possible values include:
            'requeue', 'terminate', 'wait'
            </param>
            <param name='jobDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <remarks>
            When you call this API, the Batch service sets a disabled job to the
            enabling state. After the this operation is completed, the job moves to the
            active state, and scheduling of new tasks under the job resumes. The Batch
            service does not allow a task to remain in the active state for more than 7
            days. Therefore, if you enable a job containing active tasks which were
            added more than 7 days ago, those tasks will not run.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to enable.
            </param>
            <param name='jobEnableOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <remarks>
            When you call this API, the Batch service sets a disabled job to the
            enabling state. After the this operation is completed, the job moves to the
            active state, and scheduling of new tasks under the job resumes. The Batch
            service does not allow a task to remain in the active state for more than 7
            days. Therefore, if you enable a job containing active tasks which were
            added more than 7 days ago, those tasks will not run.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to enable.
            </param>
            <param name='jobEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <remarks>
            When a Terminate Job request is received, the Batch service sets the job to
            the terminating state. The Batch service then terminates any active or
            running tasks associated with the job, and runs any required Job Release
            tasks. The job then moves into the completed state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to terminate.
            </param>
            <param name='terminateReason'>
            The text you want to appear as the job's TerminateReason. The default is
            'UserTerminate'.
            </param>
            <param name='jobTerminateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <remarks>
            When a Terminate Job request is received, the Batch service sets the job to
            the terminating state. The Batch service then terminates any active or
            running tasks associated with the job, and runs any required Job Release
            tasks. The job then moves into the completed state.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to terminate.
            </param>
            <param name='terminateReason'>
            The text you want to appear as the job's TerminateReason. The default is
            'UserTerminate'.
            </param>
            <param name='jobTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <remarks>
            The Batch service supports two ways to control the work done as part of a
            job. In the first approach, the user specifies a Job Manager task. The
            Batch service launches this task when it is ready to start the job. The Job
            Manager task controls all other tasks that run under this job, by using the
            Task APIs. In the second approach, the user directly controls the execution
            of tasks under an active job, by using the Task APIs. Also note: when
            naming jobs, avoid including sensitive information such as user names or
            secret project names. This information may appear in telemetry logs
            accessible to Microsoft Support engineers.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='job'>
            The job to be added.
            </param>
            <param name='jobAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <remarks>
            The Batch service supports two ways to control the work done as part of a
            job. In the first approach, the user specifies a Job Manager task. The
            Batch service launches this task when it is ready to start the job. The Job
            Manager task controls all other tasks that run under this job, by using the
            Task APIs. In the second approach, the user directly controls the execution
            of tasks under an active job, by using the Task APIs. Also note: when
            naming jobs, avoid including sensitive information such as user names or
            secret project names. This information may appear in telemetry logs
            accessible to Microsoft Support engineers.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='job'>
            The job to be added.
            </param>
            <param name='jobAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule from which you want to get a list of jobs.
            </param>
            <param name='jobListFromJobScheduleOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule from which you want to get a list of jobs.
            </param>
            <param name='jobListFromJobScheduleOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <remarks>
            This API returns the Job Preparation and Job Release task status on all
            compute nodes that have run the Job Preparation or Job Release task. This
            includes nodes which have since been removed from the pool.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <remarks>
            This API returns the Job Preparation and Job Release task status on all
            compute nodes that have run the Job Preparation or Job Release task. This
            includes nodes which have since been removed from the pool.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListFromJobScheduleNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListFromJobScheduleNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <remarks>
            This API returns the Job Preparation and Job Release task status on all
            compute nodes that have run the Job Preparation or Job Release task. This
            includes nodes which have since been removed from the pool.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <remarks>
            This API returns the Job Preparation and Job Release task status on all
            compute nodes that have run the Job Preparation or Job Release task. This
            includes nodes which have since been removed from the pool.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.JobScheduleOperations">
            <summary>
            JobScheduleOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the JobScheduleOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.ExistsWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule which you want to check.
            </param>
            <param name='jobScheduleExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <remarks>
            When you delete a job schedule, this also deletes all jobs and tasks under
            that schedule. When tasks are deleted, all the files in their working
            directories on the compute nodes are also deleted (the retention period is
            ignored). The job schedule statistics are no longer accessible once the job
            schedule is deleted, though they are still counted towards account lifetime
            statistics.
            </remarks>
            <param name='jobScheduleId'>
            The ID of the job schedule to delete.
            </param>
            <param name='jobScheduleDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule to get.
            </param>
            <param name='jobScheduleGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <remarks>
            This replaces only the job schedule properties specified in the request.
            For example, if the schedule property is not specified with this request,
            then the Batch service will keep the existing schedule. Changes to a job
            schedule only impact jobs created by the schedule after the update has
            taken place; currently running jobs are unaffected.
            </remarks>
            <param name='jobScheduleId'>
            The ID of the job schedule to update.
            </param>
            <param name='jobSchedulePatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobSchedulePatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the job schedule. For
            example, if the schedule property is not specified with this request, then
            the Batch service will remove the existing schedule. Changes to a job
            schedule only impact jobs created by the schedule after the update has
            taken place; currently running jobs are unaffected.
            </remarks>
            <param name='jobScheduleId'>
            The ID of the job schedule to update.
            </param>
            <param name='jobScheduleUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobScheduleUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.DisableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables a job schedule.
            </summary>
            <remarks>
            No new jobs will be created until the job schedule is enabled again.
            </remarks>
            <param name='jobScheduleId'>
            The ID of the job schedule to disable.
            </param>
            <param name='jobScheduleDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.EnableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule to enable.
            </param>
            <param name='jobScheduleEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.TerminateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The ID of the job schedule to terminates.
            </param>
            <param name='jobScheduleTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='cloudJobSchedule'>
            The job schedule to be added.
            </param>
            <param name='jobScheduleAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='jobScheduleListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobScheduleListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions">
            <summary>
            Extension methods for JobScheduleOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule which you want to check.
            </param>
            <param name='jobScheduleExistsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions,System.Threading.CancellationToken)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule which you want to check.
            </param>
            <param name='jobScheduleExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <remarks>
            When you delete a job schedule, this also deletes all jobs and tasks under
            that schedule. When tasks are deleted, all the files in their working
            directories on the compute nodes are also deleted (the retention period is
            ignored). The job schedule statistics are no longer accessible once the job
            schedule is deleted, though they are still counted towards account lifetime
            statistics.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to delete.
            </param>
            <param name='jobScheduleDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <remarks>
            When you delete a job schedule, this also deletes all jobs and tasks under
            that schedule. When tasks are deleted, all the files in their working
            directories on the compute nodes are also deleted (the retention period is
            ignored). The job schedule statistics are no longer accessible once the job
            schedule is deleted, though they are still counted towards account lifetime
            statistics.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to delete.
            </param>
            <param name='jobScheduleDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to get.
            </param>
            <param name='jobScheduleGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to get.
            </param>
            <param name='jobScheduleGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <remarks>
            This replaces only the job schedule properties specified in the request.
            For example, if the schedule property is not specified with this request,
            then the Batch service will keep the existing schedule. Changes to a job
            schedule only impact jobs created by the schedule after the update has
            taken place; currently running jobs are unaffected.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to update.
            </param>
            <param name='jobSchedulePatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobSchedulePatchOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <remarks>
            This replaces only the job schedule properties specified in the request.
            For example, if the schedule property is not specified with this request,
            then the Batch service will keep the existing schedule. Changes to a job
            schedule only impact jobs created by the schedule after the update has
            taken place; currently running jobs are unaffected.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to update.
            </param>
            <param name='jobSchedulePatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobSchedulePatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the job schedule. For
            example, if the schedule property is not specified with this request, then
            the Batch service will remove the existing schedule. Changes to a job
            schedule only impact jobs created by the schedule after the update has
            taken place; currently running jobs are unaffected.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to update.
            </param>
            <param name='jobScheduleUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobScheduleUpdateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the job schedule. For
            example, if the schedule property is not specified with this request, then
            the Batch service will remove the existing schedule. Changes to a job
            schedule only impact jobs created by the schedule after the update has
            taken place; currently running jobs are unaffected.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to update.
            </param>
            <param name='jobScheduleUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobScheduleUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions)">
            <summary>
            Disables a job schedule.
            </summary>
            <remarks>
            No new jobs will be created until the job schedule is enabled again.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to disable.
            </param>
            <param name='jobScheduleDisableOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions,System.Threading.CancellationToken)">
            <summary>
            Disables a job schedule.
            </summary>
            <remarks>
            No new jobs will be created until the job schedule is enabled again.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to disable.
            </param>
            <param name='jobScheduleDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to enable.
            </param>
            <param name='jobScheduleEnableOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions,System.Threading.CancellationToken)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to enable.
            </param>
            <param name='jobScheduleEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to terminates.
            </param>
            <param name='jobScheduleTerminateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions,System.Threading.CancellationToken)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The ID of the job schedule to terminates.
            </param>
            <param name='jobScheduleTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cloudJobSchedule'>
            The job schedule to be added.
            </param>
            <param name='jobScheduleAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cloudJobSchedule'>
            The job schedule to be added.
            </param>
            <param name='jobScheduleAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobScheduleListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobScheduleListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccessScope">
            <summary>
            Defines values for AccessScope.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders">
            <summary>
            Defines headers for ListNodeAgentSkus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.#ctor">
            <summary>
            Initializes a new instance of the AccountListNodeAgentSkusHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the AccountListNodeAgentSkusHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions">
            <summary>
            Additional parameters for the ListNodeAgentSkusNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            AccountListNodeAgentSkusNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            AccountListNodeAgentSkusNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions">
            <summary>
            Additional parameters for the Account_ListNodeAgentSkus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.#ctor">
            <summary>
            Initializes a new instance of the AccountListNodeAgentSkusOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the AccountListNodeAgentSkusOptions
            class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 results will be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 results will be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation">
            <summary>
            A locality hint that can be used by the Batch service to select a
            compute node on which to start a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.#ctor">
            <summary>
            Initializes a new instance of the AffinityInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AffinityInformation class.
            </summary>
            <param name="affinityId">An opaque string representing the location
            of a compute node or a task that has run previously.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.AffinityId">
            <summary>
            Gets or sets an opaque string representing the location of a
            compute node or a task that has run previously.
            </summary>
            <remarks>
            You can pass the affinityId of a compute node or task to indicate
            that this task needs to be placed close to the node or task.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AllocationState">
            <summary>
            Defines values for AllocationState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the ApplicationGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationGetHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions">
            <summary>
            Additional parameters for the Application_Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.#ctor">
            <summary>
            Initializes a new instance of the ApplicationGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationGetOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.#ctor">
            <summary>
            Initializes a new instance of the ApplicationListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationListHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the ApplicationListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationListNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions">
            <summary>
            Additional parameters for the Application_List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.#ctor">
            <summary>
            Initializes a new instance of the ApplicationListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationListOptions class.
            </summary>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 applications can be
            returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 applications can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference">
            <summary>
            A reference to an application package to be deployed to compute nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.#ctor">
            <summary>
            Initializes a new instance of the ApplicationPackageReference
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ApplicationPackageReference
            class.
            </summary>
            <param name="applicationId">The ID of the application to
            deploy.</param>
            <param name="version">The version of the application to deploy. If
            omitted, the default version is deployed.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.ApplicationId">
            <summary>
            Gets or sets the ID of the application to deploy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.Version">
            <summary>
            Gets or sets the version of the application to deploy. If omitted,
            the default version is deployed.
            </summary>
            <remarks>
            If this is omitted, and no default version is specified for this
            application, the request fails with the error code
            InvalidApplicationPackageReferences. If you are calling the REST
            API directly, the HTTP status code is 409.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary">
            <summary>
            Contains information about an application in an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor">
            <summary>
            Initializes a new instance of the ApplicationSummary class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the ApplicationSummary class.
            </summary>
            <param name="id">A string that uniquely identifies the application
            within the account.</param>
            <param name="displayName">The display name for the
            application.</param>
            <param name="versions">The versions of the application which are
            available.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id">
            <summary>
            Gets or sets a string that uniquely identifies the application
            within the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName">
            <summary>
            Gets or sets the display name for the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions">
            <summary>
            Gets or sets the versions of the application which are available.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings">
            <summary>
            The settings for an authentication token that the task can use to
            perform Batch service operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings.#ctor">
            <summary>
            Initializes a new instance of the AuthenticationTokenSettings
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.AccessScope})">
            <summary>
            Initializes a new instance of the AuthenticationTokenSettings
            class.
            </summary>
            <param name="access">The Batch resources to which the token grants
            access.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings.Access">
            <summary>
            Gets or sets the Batch resources to which the token grants access.
            </summary>
            <remarks>
            The authentication token grants access to a limited set of Batch
            service operations. Currently the only supported value for the
            access property is 'job', which grants access to all operations
            related to the job which contains the task.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification">
            <summary>
            Specifies characteristics for a temporary 'auto pool'. The Batch
            service will create this auto pool when the job is submitted.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the AutoPoolSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolLifetimeOption,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.PoolSpecification)">
            <summary>
            Initializes a new instance of the AutoPoolSpecification class.
            </summary>
            <param name="poolLifetimeOption">The minimum lifetime of created
            auto pools, and how multiple jobs on a schedule are assigned to
            pools.</param>
            <param name="autoPoolIdPrefix">A prefix to be added to the unique
            identifier when a pool is automatically created.</param>
            <param name="keepAlive">Whether to keep an auto pool alive after
            its lifetime expires.</param>
            <param name="pool">The pool specification for the auto
            pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.AutoPoolIdPrefix">
            <summary>
            Gets or sets a prefix to be added to the unique identifier when a
            pool is automatically created.
            </summary>
            <remarks>
            The Batch service assigns each auto pool a unique identifier on
            creation. To distinguish between pools created for different
            purposes, you can specify this element to add a prefix to the id
            that is assigned. The prefix can be up to 20 characters long.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.PoolLifetimeOption">
            <summary>
            Gets or sets the minimum lifetime of created auto pools, and how
            multiple jobs on a schedule are assigned to pools.
            </summary>
            <remarks>
            When the pool lifetime scope is jobSchedule level, the Batch
            service keeps track of the last autopool created for the job
            schedule, and deletes that pool when the job schedule completes.
            Batch will also delete this pool if the user updates the auto pool
            specification in a way that changes this lifetime. Possible values
            include: 'jobSchedule', 'job'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.KeepAlive">
            <summary>
            Gets or sets whether to keep an auto pool alive after its lifetime
            expires.
            </summary>
            <remarks>
            If false, the Batch service deletes the pool once its lifetime (as
            determined by the poolLifetimeOption setting) expires; that is,
            when the job or job schedule completes. If true, the Batch service
            does not delete the pool automatically. It is up to the user to
            delete auto pools created with this option.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.Pool">
            <summary>
            Gets or sets the pool specification for the auto pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun">
            <summary>
            The results and errors from an execution of a pool autoscale formula.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleRun class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.#ctor(System.DateTime,System.String,Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError)">
            <summary>
            Initializes a new instance of the AutoScaleRun class.
            </summary>
            <param name="timestamp">The time at which the autoscale formula was
            last evaluated.</param>
            <param name="results">The final values of all variables used in the
            evaluation of the autoscale formula.</param>
            <param name="error">Details of the error encountered evaluating the
            autoscale formula on the pool, if the evaluation was
            unsuccessful.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Timestamp">
            <summary>
            Gets or sets the time at which the autoscale formula was last
            evaluated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Results">
            <summary>
            Gets or sets the final values of all variables used in the
            evaluation of the autoscale formula.
            </summary>
            <remarks>
            Each variable value is returned in the form $variable=value, and
            variables are separated by semicolons.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Error">
            <summary>
            Gets or sets details of the error encountered evaluating the
            autoscale formula on the pool, if the evaluation was unsuccessful.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError">
            <summary>
            An error that occurred when executing or evaluating a pool autoscale
            formula.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleRunError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the AutoScaleRunError class.
            </summary>
            <param name="code">An identifier for the autoscale error. Codes are
            invariant and are intended to be consumed programmatically.</param>
            <param name="message">A message describing the autoscale error,
            intended to be suitable for display in a user interface.</param>
            <param name="values">A list of additional error details related to
            the autoscale error.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Code">
            <summary>
            Gets or sets an identifier for the autoscale error. Codes are
            invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Message">
            <summary>
            Gets or sets a message describing the autoscale error, intended to
            be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Values">
            <summary>
            Gets or sets a list of additional error details related to the
            autoscale error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoUserScope">
            <summary>
            Defines values for AutoUserScope.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification">
            <summary>
            Specifies the parameters for the auto user that runs a task on the
            Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor">
            <summary>
            Initializes a new instance of the AutoUserSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel})">
            <summary>
            Initializes a new instance of the AutoUserSpecification class.
            </summary>
            <param name="scope">The scope for the auto user</param>
            <param name="elevationLevel">The elevation level of the auto
            user.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope">
            <summary>
            Gets or sets the scope for the auto user
            </summary>
            <remarks>
            pool - specifies that the task runs as the common auto user account
            which is created on every node in a pool. task - specifies that the
            service should create a new user for the task. The default value is
            task. Possible values include: 'task', 'pool'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel">
            <summary>
            Gets or sets the elevation level of the auto user.
            </summary>
            <remarks>
            nonAdmin - The auto user is a standard user without elevated
            access. admin - The auto user is a user with elevated access and
            operates with full Administrator permissions. The default value is
            nonAdmin. Possible values include: 'nonAdmin', 'admin'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.BatchError">
            <summary>
            An error response received from the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor">
            <summary>
            Initializes a new instance of the BatchError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.ErrorMessage,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})">
            <summary>
            Initializes a new instance of the BatchError class.
            </summary>
            <param name="code">An identifier for the error. Codes are invariant
            and are intended to be consumed programmatically.</param>
            <param name="message">A message describing the error, intended to
            be suitable for display in a user interface.</param>
            <param name="values">A collection of key-value pairs containing
            additional details about the error.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Code">
            <summary>
            Gets or sets an identifier for the error. Codes are invariant and
            are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Message">
            <summary>
            Gets or sets a message describing the error, intended to be
            suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Values">
            <summary>
            Gets or sets a collection of key-value pairs containing additional
            details about the error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail">
            <summary>
            An item of additional information included in an Azure Batch error
            response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail.#ctor">
            <summary>
            Initializes a new instance of the BatchErrorDetail class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the BatchErrorDetail class.
            </summary>
            <param name="key">An identifier specifying the meaning of the Value
            property.</param>
            <param name="value">The additional information included with the
            error response.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail.Key">
            <summary>
            Gets or sets an identifier specifying the meaning of the Value
            property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail.Value">
            <summary>
            Gets or sets the additional information included with the error
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            <summary>
            Exception thrown for an invalid response with BatchError information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.#ctor">
            <summary>
            Initializes a new instance of the BatchErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BatchErrorException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the BatchErrorException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CachingType">
            <summary>
            Defines values for CachingType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.Certificate">
            <summary>
            A certificate that can be installed on compute nodes and can be used to
            authenticate operations on the machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Certificate.#ctor">
            <summary>
            Initializes a new instance of the Certificate class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Certificate.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError)">
            <summary>
            Initializes a new instance of the Certificate class.
            </summary>
            <param name="thumbprint">The X.509 thumbprint of the certificate.
            This is a sequence of up to 40 hex digits.</param>
            <param name="thumbprintAlgorithm">The algorithm used to derive the
            thumbprint.</param>
            <param name="url">The URL of the certificate.</param>
            <param name="state">The current state of the certificate.</param>
            <param name="stateTransitionTime">The time at which the certificate
            entered its current state.</param>
            <param name="previousState">The previous state of the
            certificate.</param>
            <param name="previousStateTransitionTime">The time at which the
            certificate entered its previous state.</param>
            <param name="publicData">The public part of the certificate as a
            base-64 encoded .cer file.</param>
            <param name="deleteCertificateError">The error that occurred on the
            last attempt to delete this certificate.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.Thumbprint">
            <summary>
            Gets or sets the X.509 thumbprint of the certificate. This is a
            sequence of up to 40 hex digits.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm used to derive the thumbprint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.Url">
            <summary>
            Gets or sets the URL of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.State">
            <summary>
            Gets or sets the current state of the certificate.
            </summary>
            <remarks>
            Possible values include: 'active', 'deleting', 'deleteFailed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.StateTransitionTime">
            <summary>
            Gets or sets the time at which the certificate entered its current
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PreviousState">
            <summary>
            Gets or sets the previous state of the certificate.
            </summary>
            <remarks>
            This property is not set if the certificate is in its initial
            active state. Possible values include: 'active', 'deleting',
            'deleteFailed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the certificate entered its previous
            state.
            </summary>
            <remarks>
            This property is not set if the certificate is in its initial
            Active state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PublicData">
            <summary>
            Gets or sets the public part of the certificate as a base-64
            encoded .cer file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.DeleteCertificateError">
            <summary>
            Gets or sets the error that occurred on the last attempt to delete
            this certificate.
            </summary>
            <remarks>
            This property is set only if the certificate is in the DeleteFailed
            state.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the CertificateAddHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions">
            <summary>
            Additional parameters for the Certificate_Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateAddOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter">
            <summary>
            A certificate that can be installed on compute nodes and can be used to
            authenticate operations on the machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor">
            <summary>
            Initializes a new instance of the CertificateAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat},System.String)">
            <summary>
            Initializes a new instance of the CertificateAddParameter class.
            </summary>
            <param name="thumbprint">The X.509 thumbprint of the certificate.
            This is a sequence of up to 40 hex digits (it may include spaces
            but these are removed).</param>
            <param name="thumbprintAlgorithm">The algorithm used to derive the
            thumbprint. This must be sha1.</param>
            <param name="data">The base64-encoded contents of the certificate.
            The maximum size is 10KB.</param>
            <param name="certificateFormat">The format of the certificate
            data.</param>
            <param name="password">The password to access the certificate's
            private key.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint">
            <summary>
            Gets or sets the X.509 thumbprint of the certificate. This is a
            sequence of up to 40 hex digits (it may include spaces but these
            are removed).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm used to derive the thumbprint. This must
            be sha1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data">
            <summary>
            Gets or sets the base64-encoded contents of the certificate. The
            maximum size is 10KB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat">
            <summary>
            Gets or sets the format of the certificate data.
            </summary>
            <remarks>
            Possible values include: 'pfx', 'cer'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password">
            <summary>
            Gets or sets the password to access the certificate's private key.
            </summary>
            <remarks>
            This is required if the certificate format is pfx. It should be
            omitted if the certificate format is cer.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders">
            <summary>
            Defines headers for CancelDeletion operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions">
            <summary>
            Additional parameters for the Certificate_CancelDeletion operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateDeleteHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions">
            <summary>
            Additional parameters for the Certificate_Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateDeleteOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateFormat">
            <summary>
            Defines values for CertificateFormat.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateGetHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions">
            <summary>
            Additional parameters for the Certificate_Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateGetOptions class.
            </summary>
            <param name="select">An OData $select clause.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateListHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateListNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions">
            <summary>
            Additional parameters for the Certificate_List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateListOptions class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="select">An OData $select clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 certificates can be
            returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 certificates can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateReference">
            <summary>
            A reference to a certificate to be installed on compute nodes in a
            pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor">
            <summary>
            Initializes a new instance of the CertificateReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation},System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility})">
            <summary>
            Initializes a new instance of the CertificateReference class.
            </summary>
            <param name="thumbprint">The thumbprint of the certificate.</param>
            <param name="thumbprintAlgorithm">The algorithm with which the
            thumbprint is associated. This must be sha1.</param>
            <param name="storeLocation">The location of the certificate store
            on the compute node into which to install the certificate.</param>
            <param name="storeName">The name of the certificate store on the
            compute node into which to install the certificate.</param>
            <param name="visibility">Which user accounts on the compute node
            should have access to the private data of the certificate.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint">
            <summary>
            Gets or sets the thumbprint of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm with which the thumbprint is associated.
            This must be sha1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation">
            <summary>
            Gets or sets the location of the certificate store on the compute
            node into which to install the certificate.
            </summary>
            <remarks>
            The default value is currentUser. This property is applicable only
            for pools configured with Windows nodes (that is, created with
            cloudServiceConfiguration, or with virtualMachineConfiguration
            using a Windows image reference). For Linux compute nodes, the
            certificates are stored in a directory inside the task working
            directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
            supplied to the task to query for this location. For certificates
            with visibility of 'remoteUser', a 'certs' directory is created in
            the user's home directory (e.g., /home/{user-name}/certs) and
            certificates are placed in that directory. Possible values include:
            'currentUser', 'localMachine'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName">
            <summary>
            Gets or sets the name of the certificate store on the compute node
            into which to install the certificate.
            </summary>
            <remarks>
            The default value is My. This property is applicable only for pools
            configured with Windows nodes (that is, created with
            cloudServiceConfiguration, or with virtualMachineConfiguration
            using a Windows image reference).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility">
            <summary>
            Gets or sets which user accounts on the compute node should have
            access to the private data of the certificate.
            </summary>
            <remarks>
            The default is all accounts.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateState">
            <summary>
            Defines values for CertificateState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation">
            <summary>
            Defines values for CertificateStoreLocation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility">
            <summary>
            Defines values for CertificateVisibility.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJob">
            <summary>
            An Azure Batch job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor">
            <summary>
            Initializes a new instance of the CloudJob class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobStatistics)">
            <summary>
            Initializes a new instance of the CloudJob class.
            </summary>
            <param name="id">A string that uniquely identifies the job within
            the account.</param>
            <param name="displayName">The display name for the job.</param>
            <param name="usesTaskDependencies">The flag that determines if this
            job will use tasks with dependencies.</param>
            <param name="url">The URL of the job.</param>
            <param name="eTag">The ETag of the job.</param>
            <param name="lastModified">The last modified time of the
            job.</param>
            <param name="creationTime">The creation time of the job.</param>
            <param name="state">The current state of the job.</param>
            <param name="stateTransitionTime">The time at which the job entered
            its current state.</param>
            <param name="previousState">The previous state of the job.</param>
            <param name="previousStateTransitionTime">The time at which the job
            entered its previous state.</param>
            <param name="priority">The priority of the job.</param>
            <param name="constraints">The execution constraints for the
            job.</param>
            <param name="jobManagerTask">Details of a Job Manager task to be
            launched when the job is started.</param>
            <param name="jobPreparationTask">The Job Preparation task.</param>
            <param name="jobReleaseTask">The Job Release task.</param>
            <param name="commonEnvironmentSettings">The list of common
            environment variable settings. These environment variables are set
            for all tasks in the job (including the Job Manager, Job
            Preparation and Job Release tasks).</param>
            <param name="poolInfo">The pool settings associated with the
            job.</param>
            <param name="onAllTasksComplete">The action the Batch service
            should take when all tasks in the job are in the completed
            state.</param>
            <param name="onTaskFailure">The action the Batch service should
            take when any task in the job fails. A task is considered to have
            failed if it completes with a non-zero exit code and has exhausted
            its retry count, or if it had a scheduling error.</param>
            <param name="metadata">A list of name-value pairs associated with
            the job as metadata.</param>
            <param name="executionInfo">The execution information for the
            job.</param>
            <param name="stats">Resource usage statistics for the entire
            lifetime of the job.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id">
            <summary>
            Gets or sets a string that uniquely identifies the job within the
            account.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. It is common to use a GUID for the id.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName">
            <summary>
            Gets or sets the display name for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies">
            <summary>
            Gets or sets the flag that determines if this job will use tasks
            with dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url">
            <summary>
            Gets or sets the URL of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag">
            <summary>
            Gets or sets the ETag of the job.
            </summary>
            <remarks>
            This is an opaque string. You can use it to detect whether the job
            has changed between requests. In particular, you can be pass the
            ETag when updating a job to specify that your changes should take
            effect only if nobody else has modified the job in the meantime.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified">
            <summary>
            Gets or sets the last modified time of the job.
            </summary>
            <remarks>
            This is the last time at which the job level data, such as the job
            state or priority, changed. It does not factor in task-level
            changes such as adding new tasks or tasks changing state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime">
            <summary>
            Gets or sets the creation time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.State">
            <summary>
            Gets or sets the current state of the job.
            </summary>
            <remarks>
            Possible values include: 'active', 'disabling', 'disabled',
            'enabling', 'terminating', 'completed', 'deleting'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime">
            <summary>
            Gets or sets the time at which the job entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState">
            <summary>
            Gets or sets the previous state of the job.
            </summary>
            <remarks>
            This property is not set if the job is in its initial Active state.
            Possible values include: 'active', 'disabling', 'disabled',
            'enabling', 'terminating', 'completed', 'deleting'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the job entered its previous state.
            </summary>
            <remarks>
            This property is not set if the job is in its initial Active state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority">
            <summary>
            Gets or sets the priority of the job.
            </summary>
            <remarks>
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. The default
            value is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask">
            <summary>
            Gets or sets details of a Job Manager task to be launched when the
            job is started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task.
            </summary>
            <remarks>
            The Job Preparation task is a special task run on each node before
            any other task of the job.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task.
            </summary>
            <remarks>
            The Job Release task is a special task run at the end of the job on
            each node that has run any other task of the job.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings">
            <summary>
            Gets or sets the list of common environment variable settings.
            These environment variables are set for all tasks in the job
            (including the Job Manager, Job Preparation and Job Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo">
            <summary>
            Gets or sets the pool settings associated with the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete">
            <summary>
            Gets or sets the action the Batch service should take when all
            tasks in the job are in the completed state.
            </summary>
            <remarks>
            noAction - do nothing. The job remains active unless terminated or
            disabled by some other means. terminateJob - terminate the job. The
            job's terminateReason is set to 'AllTasksComplete'. The default is
            noAction. Possible values include: 'noAction', 'terminateJob'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure">
            <summary>
            Gets or sets the action the Batch service should take when any task
            in the job fails. A task is considered to have failed if it
            completes with a non-zero exit code and has exhausted its retry
            count, or if it had a scheduling error.
            </summary>
            <remarks>
            noAction - do nothing. performExitOptionsJobAction - take the
            action associated with the task exit condition in the task's
            exitConditions collection. (This may still result in no action
            being taken, if that is what the task specifies.) The default is
            noAction. Possible values include: 'noAction',
            'performExitOptionsJobAction'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as
            metadata.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo">
            <summary>
            Gets or sets the execution information for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats">
            <summary>
            Gets or sets resource usage statistics for the entire lifetime of
            the job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule">
            <summary>
            A job schedule that allows recurring jobs by specifying when to run
            jobs and a specification used to create each job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.#ctor">
            <summary>
            Initializes a new instance of the CloudJobSchedule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobScheduleState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobScheduleState},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics)">
            <summary>
            Initializes a new instance of the CloudJobSchedule class.
            </summary>
            <param name="id">A string that uniquely identifies the schedule
            within the account.</param>
            <param name="displayName">The display name for the
            schedule.</param>
            <param name="url">The URL of the job schedule.</param>
            <param name="eTag">The ETag of the job schedule.</param>
            <param name="lastModified">The last modified time of the job
            schedule.</param>
            <param name="creationTime">The creation time of the job
            schedule.</param>
            <param name="state">The current state of the job schedule.</param>
            <param name="stateTransitionTime">The time at which the job
            schedule entered the current state.</param>
            <param name="previousState">The previous state of the job
            schedule.</param>
            <param name="previousStateTransitionTime">The time at which the job
            schedule entered its previous state.</param>
            <param name="schedule">The schedule according to which jobs will be
            created.</param>
            <param name="jobSpecification">The details of the jobs to be
            created on this schedule.</param>
            <param name="executionInfo">Information about jobs that have been
            and will be run under this schedule.</param>
            <param name="metadata">A list of name-value pairs associated with
            the schedule as metadata.</param>
            <param name="stats">The lifetime resource usage statistics for the
            job schedule.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Id">
            <summary>
            Gets or sets a string that uniquely identifies the schedule within
            the account.
            </summary>
            <remarks>
            It is common to use a GUID for the id.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.DisplayName">
            <summary>
            Gets or sets the display name for the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Url">
            <summary>
            Gets or sets the URL of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.ETag">
            <summary>
            Gets or sets the ETag of the job schedule.
            </summary>
            <remarks>
            This is an opaque string. You can use it to detect whether the job
            schedule has changed between requests. In particular, you can be
            pass the ETag with an Update Job Schedule request to specify that
            your changes should take effect only if nobody else has modified
            the schedule in the meantime.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.LastModified">
            <summary>
            Gets or sets the last modified time of the job schedule.
            </summary>
            <remarks>
            This is the last time at which the schedule level data, such as the
            job specification or recurrence information, changed. It does not
            factor in job-level changes such as new jobs being created or jobs
            changing state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.CreationTime">
            <summary>
            Gets or sets the creation time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.State">
            <summary>
            Gets or sets the current state of the job schedule.
            </summary>
            <remarks>
            Possible values include: 'active', 'completed', 'disabled',
            'terminating', 'deleting'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.StateTransitionTime">
            <summary>
            Gets or sets the time at which the job schedule entered the current
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.PreviousState">
            <summary>
            Gets or sets the previous state of the job schedule.
            </summary>
            <remarks>
            This property is not present if the job schedule is in its initial
            active state. Possible values include: 'active', 'completed',
            'disabled', 'terminating', 'deleting'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the job schedule entered its
            previous state.
            </summary>
            <remarks>
            This property is not present if the job schedule is in its initial
            active state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Schedule">
            <summary>
            Gets or sets the schedule according to which jobs will be created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.JobSpecification">
            <summary>
            Gets or sets the details of the jobs to be created on this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.ExecutionInfo">
            <summary>
            Gets or sets information about jobs that have been and will be run
            under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the
            schedule as metadata.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Stats">
            <summary>
            Gets or sets the lifetime resource usage statistics for the job
            schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPool">
            <summary>
            A pool in the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor">
            <summary>
            Initializes a new instance of the CloudPool class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.TimeSpan},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResizeError},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration,Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.UserAccount},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)">
            <summary>
            Initializes a new instance of the CloudPool class.
            </summary>
            <param name="id">A string that uniquely identifies the pool within
            the account.</param>
            <param name="displayName">The display name for the pool.</param>
            <param name="url">The URL of the pool.</param>
            <param name="eTag">The ETag of the pool.</param>
            <param name="lastModified">The last modified time of the
            pool.</param>
            <param name="creationTime">The creation time of the pool.</param>
            <param name="state">The current state of the pool.</param>
            <param name="stateTransitionTime">The time at which the pool
            entered its current state.</param>
            <param name="allocationState">Whether the pool is resizing.</param>
            <param name="allocationStateTransitionTime">The time at which the
            pool entered its current allocation state.</param>
            <param name="vmSize">The size of virtual machines in the pool. All
            virtual machines in a pool are the same size.</param>
            <param name="cloudServiceConfiguration">The cloud service
            configuration for the pool.</param>
            <param name="virtualMachineConfiguration">The virtual machine
            configuration for the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute
            nodes to the pool.</param>
            <param name="resizeErrors">A list of errors encountered while
            performing the last resize on the pool.</param>
            <param name="currentDedicatedNodes">The number of dedicated compute
            nodes currently in the pool.</param>
            <param name="currentLowPriorityNodes">The number of low-priority
            compute nodes currently in the pool.</param>
            <param name="targetDedicatedNodes">The desired number of dedicated
            compute nodes in the pool.</param>
            <param name="targetLowPriorityNodes">The desired number of
            low-priority compute nodes in the pool.</param>
            <param name="enableAutoScale">Whether the pool size should
            automatically adjust over time.</param>
            <param name="autoScaleFormula">A formula for the desired number of
            compute nodes in the pool.</param>
            <param name="autoScaleEvaluationInterval">The time interval at
            which to automatically adjust the pool size according to the
            autoscale formula.</param>
            <param name="autoScaleRun">The results and errors from the last
            execution of the autoscale formula.</param>
            <param name="enableInterNodeCommunication">Whether the pool permits
            direct communication between nodes.</param>
            <param name="networkConfiguration">The network configuration for
            the pool.</param>
            <param name="startTask">A task specified to run on each compute
            node as it joins the pool.</param>
            <param name="certificateReferences">The list of certificates to be
            installed on each compute node in the pool.</param>
            <param name="applicationPackageReferences">The list of application
            packages to be installed on each compute node in the pool.</param>
            <param name="applicationLicenses">The list of application licenses
            the Batch service will make available on each compute node in the
            pool.</param>
            <param name="maxTasksPerNode">The maximum number of tasks that can
            run concurrently on a single compute node in the pool.</param>
            <param name="taskSchedulingPolicy">How the Batch service
            distributes tasks between compute nodes in the pool.</param>
            <param name="userAccounts">The list of user accounts to be created
            on each node in the pool.</param>
            <param name="metadata">A list of name-value pairs associated with
            the pool as metadata.</param>
            <param name="stats">Utilization and resource usage statistics for
            the entire lifetime of the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id">
            <summary>
            Gets or sets a string that uniquely identifies the pool within the
            account.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. It is common to use a GUID for the id.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
            <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url">
            <summary>
            Gets or sets the URL of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag">
            <summary>
            Gets or sets the ETag of the pool.
            </summary>
            <remarks>
            This is an opaque string. You can use it to detect whether the pool
            has changed between requests. In particular, you can be pass the
            ETag when updating a pool to specify that your changes should take
            effect only if nobody else has modified the pool in the meantime.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified">
            <summary>
            Gets or sets the last modified time of the pool.
            </summary>
            <remarks>
            This is the last time at which the pool level data, such as the
            targetDedicatedNodes or enableAutoscale settings, changed. It does
            not factor in node-level changes such as a compute node changing
            state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime">
            <summary>
            Gets or sets the creation time of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.State">
            <summary>
            Gets or sets the current state of the pool.
            </summary>
            <remarks>
            active - The pool is available to run tasks subject to the
            availability of compute nodes. deleting - The user has requested
            that the pool be deleted, but the delete operation has not yet
            completed. upgrading - The user has requested that the operating
            system of the pool's nodes be upgraded, but the upgrade operation
            has not yet completed (that is, some nodes in the pool have not yet
            been upgraded). While upgrading, the pool may be able to run tasks
            (with reduced capacity) but this is not guaranteed. Possible values
            include: 'active', 'deleting', 'upgrading'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime">
            <summary>
            Gets or sets the time at which the pool entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState">
            <summary>
            Gets or sets whether the pool is resizing.
            </summary>
            <remarks>
            steady - The pool is not resizing. There are no changes to the
            number of nodes in the pool in progress. A pool enters this state
            when it is created and when no operations are being performed on
            the pool to change the number of dedicated nodes. resizing - The
            pool is resizing; that is, compute nodes are being added to or
            removed from the pool. stopping - The pool was resizing, but the
            user has requested that the resize be stopped, but the stop request
            has not yet been completed. Possible values include: 'steady',
            'resizing', 'stopping'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime">
            <summary>
            Gets or sets the time at which the pool entered its current
            allocation state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize">
            <summary>
            Gets or sets the size of virtual machines in the pool. All virtual
            machines in a pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines for Cloud
            Services pools (pools created with cloudServiceConfiguration), see
            Sizes for Cloud Services
            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
            Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2
            and A2V2. For information about available VM sizes for pools using
            images from the Virtual Machines Marketplace (pools created with
            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
            or Sizes for Virtual Machines (Windows)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration">
            <summary>
            Gets or sets the cloud service configuration for the pool.
            </summary>
            <remarks>
            This property and virtualMachineConfiguration are mutually
            exclusive and one of the properties must be specified. This
            property cannot be specified if the Batch account was created with
            its poolAllocationMode property set to 'UserSubscription'.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration">
            <summary>
            Gets or sets the virtual machine configuration for the pool.
            </summary>
            <remarks>
            This property and cloudServiceConfiguration are mutually exclusive
            and one of the properties must be specified.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool.
            </summary>
            <remarks>
            This is the timeout for the most recent resize operation. (The
            initial sizing when the pool is created counts as a resize.) The
            default value is 15 minutes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeErrors">
            <summary>
            Gets or sets a list of errors encountered while performing the last
            resize on the pool.
            </summary>
            <remarks>
            This property is set only if one or more errors occurred during the
            last pool resize, and only when the pool allocationState is Steady.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicatedNodes">
            <summary>
            Gets or sets the number of dedicated compute nodes currently in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentLowPriorityNodes">
            <summary>
            Gets or sets the number of low-priority compute nodes currently in
            the pool.
            </summary>
            <remarks>
            Low-priority compute nodes which have been preempted are included
            in this count.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicatedNodes">
            <summary>
            Gets or sets the desired number of dedicated compute nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetLowPriorityNodes">
            <summary>
            Gets or sets the desired number of low-priority compute nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale">
            <summary>
            Gets or sets whether the pool size should automatically adjust over
            time.
            </summary>
            <remarks>
            If false, at least one of targetDedicateNodes and
            targetLowPriorityNodes must be specified. If true, the
            autoScaleFormula property is required and the pool automatically
            resizes according to the formula. The default value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in
            the pool.
            </summary>
            <remarks>
            This property is set only if the pool automatically scales, i.e.
            enableAutoScale is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets the time interval at which to automatically adjust the
            pool size according to the autoscale formula.
            </summary>
            <remarks>
            This property is set only if the pool automatically scales, i.e.
            enableAutoScale is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun">
            <summary>
            Gets or sets the results and errors from the last execution of the
            autoscale formula.
            </summary>
            <remarks>
            This property is set only if the pool automatically scales, i.e.
            enableAutoScale is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication">
            <summary>
            Gets or sets whether the pool permits direct communication between
            nodes.
            </summary>
            <remarks>
            This imposes restrictions on which nodes can be assigned to the
            pool. Specifying this value can reduce the chance of the requested
            number of nodes to be allocated in the pool.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration">
            <summary>
            Gets or sets the network configuration for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask">
            <summary>
            Gets or sets a task specified to run on each compute node as it
            joins the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences">
            <summary>
            Gets or sets the list of certificates to be installed on each
            compute node in the pool.
            </summary>
            <remarks>
            For Windows compute nodes, the Batch service installs the
            certificates to the specified certificate store and location. For
            Linux compute nodes, the certificates are stored in a directory
            inside the task working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this
            location. For certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and certificates are placed in that
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences">
            <summary>
            Gets or sets the list of application packages to be installed on
            each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationLicenses">
            <summary>
            Gets or sets the list of application licenses the Batch service
            will make available on each compute node in the pool.
            </summary>
            <remarks>
            The list of application licenses must be a subset of available
            Batch service application licenses. If a license is requested which
            is not supported, pool creation will fail.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently
            on a single compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy">
            <summary>
            Gets or sets how the Batch service distributes tasks between
            compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.UserAccounts">
            <summary>
            Gets or sets the list of user accounts to be created on each node
            in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats">
            <summary>
            Gets or sets utilization and resource usage statistics for the
            entire lifetime of the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration">
            <summary>
            The configuration for nodes in a pool based on the Azure Cloud Services
            platform.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor">
            <summary>
            Initializes a new instance of the CloudServiceConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CloudServiceConfiguration class.
            </summary>
            <param name="osFamily">The Azure Guest OS family to be installed on
            the virtual machines in the pool.</param>
            <param name="targetOSVersion">The Azure Guest OS version to be
            installed on the virtual machines in the pool.</param>
            <param name="currentOSVersion">The Azure Guest OS Version currently
            installed on the virtual machines in the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily">
            <summary>
            Gets or sets the Azure Guest OS family to be installed on the
            virtual machines in the pool.
            </summary>
            <remarks>
            Possible values are: 2 - OS Family 2, equivalent to Windows Server
            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4
            - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family
            5, equivalent to Windows Server 2016. For more information, see
            Azure Guest OS Releases
            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion">
            <summary>
            Gets or sets the Azure Guest OS version to be installed on the
            virtual machines in the pool.
            </summary>
            <remarks>
            The default value is * which specifies the latest operating system
            version for the specified OS family.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion">
            <summary>
            Gets or sets the Azure Guest OS Version currently installed on the
            virtual machines in the pool.
            </summary>
            <remarks>
            This may differ from targetOSVersion if the pool state is
            Upgrading. In this case some virtual machines may be on the
            targetOSVersion and some may be on the currentOSVersion during the
            upgrade process. Once all virtual machines have upgraded,
            currentOSVersion is updated to be the same as targetOSVersion.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTask">
            <summary>
            An Azure Batch task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor">
            <summary>
            Initializes a new instance of the CloudTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.OutputFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.UserIdentity,Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskStatistics,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)">
            <summary>
            Initializes a new instance of the CloudTask class.
            </summary>
            <param name="id">A string that uniquely identifies the task within
            the job.</param>
            <param name="displayName">A display name for the task.</param>
            <param name="url">The URL of the task.</param>
            <param name="eTag">The ETag of the task.</param>
            <param name="lastModified">The last modified time of the
            task.</param>
            <param name="creationTime">The creation time of the task.</param>
            <param name="exitConditions">How the Batch service should respond
            when the task completes.</param>
            <param name="state">The current state of the task.</param>
            <param name="stateTransitionTime">The time at which the task
            entered its current state.</param>
            <param name="previousState">The previous state of the task.</param>
            <param name="previousStateTransitionTime">The time at which the
            task entered its previous state.</param>
            <param name="commandLine">The command line of the task.</param>
            <param name="resourceFiles">A list of files that the Batch service
            will download to the compute node before running the command
            line.</param>
            <param name="outputFiles">A list of files that the Batch service
            will upload from the compute node after running the command
            line.</param>
            <param name="environmentSettings">A list of environment variable
            settings for the task.</param>
            <param name="affinityInfo">A locality hint that can be used by the
            Batch service to select a compute node on which to start the new
            task.</param>
            <param name="constraints">The execution constraints that apply to
            this task.</param>
            <param name="userIdentity">The user identity under which the task
            runs.</param>
            <param name="executionInfo">Information about the execution of the
            task.</param>
            <param name="nodeInfo">Information about the compute node on which
            the task ran.</param>
            <param name="multiInstanceSettings">An object that indicates that
            the task is a multi-instance task, and contains information about
            how to run the multi-instance task.</param>
            <param name="stats">Resource usage statistics for the task.</param>
            <param name="dependsOn">The tasks that this task depends
            on.</param>
            <param name="applicationPackageReferences">A list of application
            packages that the Batch service will deploy to the compute node
            before running the command line.</param>
            <param name="authenticationTokenSettings">The settings for an
            authentication token that the task can use to perform Batch service
            operations.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id">
            <summary>
            Gets or sets a string that uniquely identifies the task within the
            job.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName">
            <summary>
            Gets or sets a display name for the task.
            </summary>
            <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url">
            <summary>
            Gets or sets the URL of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag">
            <summary>
            Gets or sets the ETag of the task.
            </summary>
            <remarks>
            This is an opaque string. You can use it to detect whether the task
            has changed between requests. In particular, you can be pass the
            ETag when updating a task to specify that your changes should take
            effect only if nobody else has modified the task in the meantime.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified">
            <summary>
            Gets or sets the last modified time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime">
            <summary>
            Gets or sets the creation time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions">
            <summary>
            Gets or sets how the Batch service should respond when the task
            completes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.State">
            <summary>
            Gets or sets the current state of the task.
            </summary>
            <remarks>
            Possible values include: 'active', 'preparing', 'running',
            'completed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime">
            <summary>
            Gets or sets the time at which the task entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState">
            <summary>
            Gets or sets the previous state of the task.
            </summary>
            <remarks>
            This property is not set if the task is in its initial Active
            state. Possible values include: 'active', 'preparing', 'running',
            'completed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the task entered its previous state.
            </summary>
            <remarks>
            This property is not set if the task is in its initial Active
            state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
            <remarks>
            For multi-instance tasks, the command line is executed as the
            primary task, after the primary task and all subtasks have finished
            executing the coordination command line. The command line does not
            run under a shell, and therefore cannot take advantage of shell
            features such as environment variable expansion. If you want to
            take advantage of such features, you should invoke the shell in the
            command line, for example using "cmd /c MyCommand" in Windows or
            "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download
            to the compute node before running the command line.
            </summary>
            <remarks>
            For multi-instance tasks, the resource files will only be
            downloaded to the compute node on which the primary task is
            executed.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.OutputFiles">
            <summary>
            Gets or sets a list of files that the Batch service will upload
            from the compute node after running the command line.
            </summary>
            <remarks>
            For multi-instance tasks, the files will only be uploaded from the
            compute node on which the primary task is executed.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo">
            <summary>
            Gets or sets a locality hint that can be used by the Batch service
            to select a compute node on which to start the new task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints">
            <summary>
            Gets or sets the execution constraints that apply to this task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to
            the task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo">
            <summary>
            Gets or sets information about the execution of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo">
            <summary>
            Gets or sets information about the compute node on which the task
            ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings">
            <summary>
            Gets or sets an object that indicates that the task is a
            multi-instance task, and contains information about how to run the
            multi-instance task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats">
            <summary>
            Gets or sets resource usage statistics for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn">
            <summary>
            Gets or sets the tasks that this task depends on.
            </summary>
            <remarks>
            This task will not be scheduled until all tasks that it depends on
            have completed successfully. If any of those tasks fail and exhaust
            their retry counts, this task will never be scheduled.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages that the Batch service
            will deploy to the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.AuthenticationTokenSettings">
            <summary>
            Gets or sets the settings for an authentication token that the task
            can use to perform Batch service operations.
            </summary>
            <remarks>
            If this property is set, the Batch service provides the task with
            an authentication token which can be used to authenticate Batch
            service operations without requiring an account access key. The
            token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment
            variable. The operations that the task can carry out using the
            token depend on the settings. For example, a task can request job
            permissions in order to add other tasks to the job, or check the
            status of the job or of other tasks under the job.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult">
            <summary>
            The result of listing the subtasks of a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskListSubtasksResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation})">
            <summary>
            Initializes a new instance of the CloudTaskListSubtasksResult
            class.
            </summary>
            <param name="value">The list of subtasks.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult.Value">
            <summary>
            Gets or sets the list of subtasks.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNode">
            <summary>
            A compute node in the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.#ctor">
            <summary>
            Initializes a new instance of the ComputeNode class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeState},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.SchedulingState},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskInformation},Microsoft.Azure.Batch.Protocol.Models.StartTask,Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ComputeNode class.
            </summary>
            <param name="id">The ID of the compute node.</param>
            <param name="url">The URL of the compute node.</param>
            <param name="state">The current state of the compute node.</param>
            <param name="schedulingState">Whether the compute node is available
            for task scheduling.</param>
            <param name="stateTransitionTime">The time at which the compute
            node entered its current state.</param>
            <param name="lastBootTime">The time at which the compute node was
            started.</param>
            <param name="allocationTime">The time at which this compute node
            was allocated to the pool.</param>
            <param name="ipAddress">The IP address that other compute nodes can
            use to communicate with this compute node.</param>
            <param name="affinityId">An identifier which can be passed when
            adding a task to request that the task be scheduled close to this
            compute node.</param>
            <param name="vmSize">The size of the virtual machine hosting the
            compute node.</param>
            <param name="totalTasksRun">The total number of job tasks completed
            on the compute node. This includes Job Preparation, Job Release and
            Job Manager tasks, but not the pool start task.</param>
            <param name="runningTasksCount">The total number of currently
            running job tasks on the compute node. This includes Job
            Preparation, Job Release, and Job Manager tasks, but not the pool
            start task.</param>
            <param name="totalTasksSucceeded">The total number of job tasks
            which completed successfully (with exitCode 0) on the compute node.
            This includes Job Preparation, Job Release, and Job Manager tasks,
            but not the pool start task.</param>
            <param name="recentTasks">The list of tasks that are currently
            running on the compute node.</param>
            <param name="startTask">The task specified to run on the compute
            node as it joins the pool.</param>
            <param name="startTaskInfo">Runtime information about the execution
            of the start task on the compute node.</param>
            <param name="certificateReferences">The list of certificates
            installed on the compute node.</param>
            <param name="errors">The list of errors that are currently being
            encountered by the compute node.</param>
            <param name="isDedicated">Whether this compute node is a dedicated
            node. If false, the node is a low-priority node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Id">
            <summary>
            Gets or sets the ID of the compute node.
            </summary>
            <remarks>
            Every node that is added to a pool is assigned a unique ID.
            Whenever a node is removed from a pool, all of its local files are
            deleted, and the ID is reclaimed and could be reused for new nodes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Url">
            <summary>
            Gets or sets the URL of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.State">
            <summary>
            Gets or sets the current state of the compute node.
            </summary>
            <remarks>
            Possible values include: 'idle', 'rebooting', 'reimaging',
            'running', 'unusable', 'creating', 'starting',
            'waitingForStartTask', 'startTaskFailed', 'unknown', 'leavingPool',
            'offline', 'preempted'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.SchedulingState">
            <summary>
            Gets or sets whether the compute node is available for task
            scheduling.
            </summary>
            <remarks>
            enabled - Tasks can be scheduled on the node. disabled - No new
            tasks will be scheduled on the node. Tasks already running on the
            node may still run to completion. All nodes start with scheduling
            enabled. Possible values include: 'enabled', 'disabled'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StateTransitionTime">
            <summary>
            Gets or sets the time at which the compute node entered its current
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.LastBootTime">
            <summary>
            Gets or sets the time at which the compute node was started.
            </summary>
            <remarks>
            This property may not be present if the node state is unusable.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.AllocationTime">
            <summary>
            Gets or sets the time at which this compute node was allocated to
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.IpAddress">
            <summary>
            Gets or sets the IP address that other compute nodes can use to
            communicate with this compute node.
            </summary>
            <remarks>
            Every node that is added to a pool is assigned a unique IP address.
            Whenever a node is removed from a pool, all of its local files are
            deleted, and the IP address is reclaimed and could be reused for
            new nodes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.AffinityId">
            <summary>
            Gets or sets an identifier which can be passed when adding a task
            to request that the task be scheduled close to this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.VmSize">
            <summary>
            Gets or sets the size of the virtual machine hosting the compute
            node.
            </summary>
            <remarks>
            For information about available sizes of virtual machines for Cloud
            Services pools (pools created with cloudServiceConfiguration), see
            Sizes for Cloud Services
            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
            Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2
            and A2V2. For information about available VM sizes for pools using
            images from the Virtual Machines Marketplace (pools created with
            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
            or Sizes for Virtual Machines (Windows)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.TotalTasksRun">
            <summary>
            Gets or sets the total number of job tasks completed on the compute
            node. This includes Job Preparation, Job Release and Job Manager
            tasks, but not the pool start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.RunningTasksCount">
            <summary>
            Gets or sets the total number of currently running job tasks on the
            compute node. This includes Job Preparation, Job Release, and Job
            Manager tasks, but not the pool start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.TotalTasksSucceeded">
            <summary>
            Gets or sets the total number of job tasks which completed
            successfully (with exitCode 0) on the compute node. This includes
            Job Preparation, Job Release, and Job Manager tasks, but not the
            pool start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.RecentTasks">
            <summary>
            Gets or sets the list of tasks that are currently running on the
            compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StartTask">
            <summary>
            Gets or sets the task specified to run on the compute node as it
            joins the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StartTaskInfo">
            <summary>
            Gets or sets runtime information about the execution of the start
            task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.CertificateReferences">
            <summary>
            Gets or sets the list of certificates installed on the compute
            node.
            </summary>
            <remarks>
            For Windows compute nodes, the Batch service installs the
            certificates to the specified certificate store and location. For
            Linux compute nodes, the certificates are stored in a directory
            inside the task working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this
            location. For certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and certificates are placed in that
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Errors">
            <summary>
            Gets or sets the list of errors that are currently being
            encountered by the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.IsDedicated">
            <summary>
            Gets or sets whether this compute node is a dedicated node. If
            false, the node is a low-priority node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders">
            <summary>
            Defines headers for AddUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions">
            <summary>
            Additional parameters for the ComputeNode_AddUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeallocationOption">
            <summary>
            Defines values for ComputeNodeDeallocationOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders">
            <summary>
            Defines headers for DeleteUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions">
            <summary>
            Additional parameters for the ComputeNode_DeleteUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders">
            <summary>
            Defines headers for DisableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeDisableSchedulingHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the
            ComputeNodeDisableSchedulingHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions">
            <summary>
            Additional parameters for the ComputeNode_DisableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeDisableSchedulingOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeDisableSchedulingOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders">
            <summary>
            Defines headers for EnableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeEnableSchedulingHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the
            ComputeNodeEnableSchedulingHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions">
            <summary>
            Additional parameters for the ComputeNode_EnableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeEnableSchedulingOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeEnableSchedulingOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError">
            <summary>
            An error encountered by a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the ComputeNodeError class.
            </summary>
            <param name="code">An identifier for the compute node error. Codes
            are invariant and are intended to be consumed
            programmatically.</param>
            <param name="message">A message describing the compute node error,
            intended to be suitable for display in a user interface.</param>
            <param name="errorDetails">The list of additional error details
            related to the compute node error.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.Code">
            <summary>
            Gets or sets an identifier for the compute node error. Codes are
            invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.Message">
            <summary>
            Gets or sets a message describing the compute node error, intended
            to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.ErrorDetails">
            <summary>
            Gets or sets the list of additional error details related to the
            compute node error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeFillType">
            <summary>
            Defines values for ComputeNodeFillType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeGetHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions">
            <summary>
            Additional parameters for the ComputeNode_Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeGetOptions class.
            </summary>
            <param name="select">An OData $select clause.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders">
            <summary>
            Defines headers for GetRemoteDesktop operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions">
            <summary>
            Additional parameters for the ComputeNode_GetRemoteDesktop operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders">
            <summary>
            Defines headers for GetRemoteLoginSettings operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions">
            <summary>
            Additional parameters for the ComputeNode_GetRemoteLoginSettings
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult">
            <summary>
            The remote login settings for a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsResult class.
            </summary>
            <param name="remoteLoginIPAddress">The IP address used for remote
            login to the compute node.</param>
            <param name="remoteLoginPort">The port used for remote login to the
            compute node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.RemoteLoginIPAddress">
            <summary>
            Gets or sets the IP address used for remote login to the compute
            node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.RemoteLoginPort">
            <summary>
            Gets or sets the port used for remote login to the compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation">
            <summary>
            Information about the compute node on which a task ran.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeInformation class.
            </summary>
            <param name="affinityId">An identifier for the compute node on
            which the task ran, which can be passed when adding a task to
            request that the task be scheduled close to this compute
            node.</param>
            <param name="nodeUrl">The URL of the node on which the task ran.
            </param>
            <param name="poolId">The ID of the pool on which the task
            ran.</param>
            <param name="nodeId">The ID of the node on which the task
            ran.</param>
            <param name="taskRootDirectory">The root directory of the task on
            the compute node.</param>
            <param name="taskRootDirectoryUrl">The URL to the root directory of
            the task on the compute node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.AffinityId">
            <summary>
            Gets or sets an identifier for the compute node on which the task
            ran, which can be passed when adding a task to request that the
            task be scheduled close to this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.NodeUrl">
            <summary>
            Gets or sets the URL of the node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.PoolId">
            <summary>
            Gets or sets the ID of the pool on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.NodeId">
            <summary>
            Gets or sets the ID of the node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.TaskRootDirectory">
            <summary>
            Gets or sets the root directory of the task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.TaskRootDirectoryUrl">
            <summary>
            Gets or sets the URL to the root directory of the task on the
            compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeListHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeListNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions">
            <summary>
            Additional parameters for the ComputeNode_List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeListOptions class.
            </summary>
            <param name="filter">An OData $filter clause..</param>
            <param name="select">An OData $select clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 nodes can be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 nodes can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders">
            <summary>
            Defines headers for Reboot operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeRebootHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeRebootHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption">
            <summary>
            Defines values for ComputeNodeRebootOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions">
            <summary>
            Additional parameters for the ComputeNode_Reboot operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeRebootOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeRebootOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders">
            <summary>
            Defines headers for Reimage operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeReimageHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeReimageHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption">
            <summary>
            Defines values for ComputeNodeReimageOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions">
            <summary>
            Additional parameters for the ComputeNode_Reimage operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeReimageOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeReimageOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeState">
            <summary>
            Defines values for ComputeNodeState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders">
            <summary>
            Defines headers for UpdateUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions">
            <summary>
            Additional parameters for the ComputeNode_UpdateUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser">
            <summary>
            A user account for RDP or SSH access on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUser class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeUser class.
            </summary>
            <param name="name">The user name of the account.</param>
            <param name="isAdmin">Whether the account should be an
            administrator on the compute node.</param>
            <param name="expiryTime">The time at which the account should
            expire.</param>
            <param name="password">The password of the account.</param>
            <param name="sshPublicKey">The SSH public key that can be used for
            remote login to the compute node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name">
            <summary>
            Gets or sets the user name of the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin">
            <summary>
            Gets or sets whether the account should be an administrator on the
            compute node.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime">
            <summary>
            Gets or sets the time at which the account should expire.
            </summary>
            <remarks>
            If omitted, the default is 1 day from the current time. For Linux
            compute nodes, the expiryTime has a precision up to a day.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password">
            <summary>
            Gets or sets the password of the account.
            </summary>
            <remarks>
            The password is required for Windows nodes (those created with
            'cloudServiceConfiguration', or created with
            'virtualMachineConfiguration' using a Windows image reference). For
            Linux compute nodes, the password can optionally be specified along
            with the sshPublicKey property.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey">
            <summary>
            Gets or sets the SSH public key that can be used for remote login
            to the compute node.
            </summary>
            <remarks>
            The public key should be compatible with OpenSSH encoding and
            should be base 64 encoded. This property can be specified only for
            Linux nodes. If this is specified for a Windows node, then the
            Batch service rejects the request; if you are calling the REST API
            directly, the HTTP status code is 400 (Bad Request).
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError">
            <summary>
            An error encountered by the Batch service when deleting a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.#ctor">
            <summary>
            Initializes a new instance of the DeleteCertificateError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the DeleteCertificateError class.
            </summary>
            <param name="code">An identifier for the certificate deletion
            error. Codes are invariant and are intended to be consumed
            programmatically.</param>
            <param name="message">A message describing the certificate deletion
            error, intended to be suitable for display in a user
            interface.</param>
            <param name="values">A list of additional error details related to
            the certificate deletion error.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Code">
            <summary>
            Gets or sets an identifier for the certificate deletion error.
            Codes are invariant and are intended to be consumed
            programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Message">
            <summary>
            Gets or sets a message describing the certificate deletion error,
            intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Values">
            <summary>
            Gets or sets a list of additional error details related to the
            certificate deletion error.
            </summary>
            <remarks>
            This list includes details such as the active pools and nodes
            referencing this certificate. However, if a large number of
            resources reference the certificate, the list contains only about
            the first hundred.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DependencyAction">
            <summary>
            Defines values for DependencyAction.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption">
            <summary>
            Defines values for DisableComputeNodeSchedulingOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DisableJobOption">
            <summary>
            Defines values for DisableJobOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ElevationLevel">
            <summary>
            Defines values for ElevationLevel.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting">
            <summary>
            An environment variable to be set on a task process.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.#ctor">
            <summary>
            Initializes a new instance of the EnvironmentSetting class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the EnvironmentSetting class.
            </summary>
            <param name="name">The name of the environment variable.</param>
            <param name="value">The value of the environment variable.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.Name">
            <summary>
            Gets or sets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.Value">
            <summary>
            Gets or sets the value of the environment variable.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ErrorCategory">
            <summary>
            Defines values for ErrorCategory.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage">
            <summary>
            An error message received in an Azure Batch error response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.#ctor">
            <summary>
            Initializes a new instance of the ErrorMessage class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ErrorMessage class.
            </summary>
            <param name="lang">The language code of the error message</param>
            <param name="value">The text of the message.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.Lang">
            <summary>
            Gets or sets the language code of the error message
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.Value">
            <summary>
            Gets or sets the text of the message.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping">
            <summary>
            How the Batch service should respond if a task exits with a particular
            exit code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping.#ctor">
            <summary>
            Initializes a new instance of the ExitCodeMapping class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping.#ctor(System.Int32,Microsoft.Azure.Batch.Protocol.Models.ExitOptions)">
            <summary>
            Initializes a new instance of the ExitCodeMapping class.
            </summary>
            <param name="code">A process exit code.</param>
            <param name="exitOptions">How the Batch service should respond if
            the task exits with this exit code.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping.Code">
            <summary>
            Gets or sets a process exit code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping.ExitOptions">
            <summary>
            Gets or sets how the Batch service should respond if the task exits
            with this exit code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping">
            <summary>
            A range of exit codes and how the Batch service should respond to exit
            codes within that range.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping.#ctor">
            <summary>
            Initializes a new instance of the ExitCodeRangeMapping class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping.#ctor(System.Int32,System.Int32,Microsoft.Azure.Batch.Protocol.Models.ExitOptions)">
            <summary>
            Initializes a new instance of the ExitCodeRangeMapping class.
            </summary>
            <param name="start">The first exit code in the range.</param>
            <param name="end">The last exit code in the range.</param>
            <param name="exitOptions">How the Batch service should respond if
            the task exits with an exit code in the range start to end
            (inclusive).</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping.Start">
            <summary>
            Gets or sets the first exit code in the range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping.End">
            <summary>
            Gets or sets the last exit code in the range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping.ExitOptions">
            <summary>
            Gets or sets how the Batch service should respond if the task exits
            with an exit code in the range start to end (inclusive).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ExitConditions">
            <summary>
            Specifies how the Batch service should respond when the task completes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitConditions.#ctor">
            <summary>
            Initializes a new instance of the ExitConditions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitConditions.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping},Microsoft.Azure.Batch.Protocol.Models.ExitOptions,Microsoft.Azure.Batch.Protocol.Models.ExitOptions,Microsoft.Azure.Batch.Protocol.Models.ExitOptions)">
            <summary>
            Initializes a new instance of the ExitConditions class.
            </summary>
            <param name="exitCodes">A list of individual task exit codes and
            how the Batch service should respond to them.</param>
            <param name="exitCodeRanges">A list of task exit code ranges and
            how the Batch service should respond to them.</param>
            <param name="preProcessingError">How the Batch service should
            respond if the task fails to start due to an error.</param>
            <param name="fileUploadError">How the Batch service should respond
            if a file upload error occurs.</param>
            <param name="defaultProperty">How the Batch service should respond
            if the task fails with an exit condition not covered by any of the
            other properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitConditions.ExitCodes">
            <summary>
            Gets or sets a list of individual task exit codes and how the Batch
            service should respond to them.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitConditions.ExitCodeRanges">
            <summary>
            Gets or sets a list of task exit code ranges and how the Batch
            service should respond to them.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitConditions.PreProcessingError">
            <summary>
            Gets or sets how the Batch service should respond if the task fails
            to start due to an error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitConditions.FileUploadError">
            <summary>
            Gets or sets how the Batch service should respond if a file upload
            error occurs.
            </summary>
            <remarks>
            If the task exited with an exit code that was specified via
            exitCodes or exitCodeRanges, and then encountered a file upload
            error, then the action specified by the exit code takes precedence.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitConditions.DefaultProperty">
            <summary>
            Gets or sets how the Batch service should respond if the task fails
            with an exit condition not covered by any of the other properties.
            </summary>
            <remarks>
            This value is used if the task exits with any nonzero exit code not
            listed in the exitCodes or exitCodeRanges collection, with a
            pre-processing error if the preProcessingError property is not
            present, or with a file upload error if the fileUploadError
            property is not present. If you want non-default behaviour on exit
            code 0, you must list it explicitly using the exitCodes or
            exitCodeRanges collection.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ExitOptions">
            <summary>
            Specifies how the Batch service responds to a particular exit
            condition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor">
            <summary>
            Initializes a new instance of the ExitOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DependencyAction})">
            <summary>
            Initializes a new instance of the ExitOptions class.
            </summary>
            <param name="jobAction">An action to take on the job containing the
            task, if the task completes with the given exit condition and the
            job's onTaskFailed property is
            'performExitOptionsJobAction'.</param>
            <param name="dependencyAction">An action that the Batch service
            performs on tasks that depend on this task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction">
            <summary>
            Gets or sets an action to take on the job containing the task, if
            the task completes with the given exit condition and the job's
            onTaskFailed property is 'performExitOptionsJobAction'.
            </summary>
            <remarks>
            The default is none for exit code 0 and terminate for all other
            exit conditions. If the job's onTaskFailed property is noAction,
            then specify this property returns an error. The add task request
            fails with an invalid property value error;; if you are calling the
            REST API directly, the HTTP status code is 400 (Bad Request).
            Possible values include: 'none', 'disable', 'terminate'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.DependencyAction">
            <summary>
            Gets or sets an action that the Batch service performs on tasks
            that depend on this task.
            </summary>
            <remarks>
            The default is 'satisfy' for exit code 0, and 'block' for all other
            exit conditions. If the job's usesTaskDependencies property is set
            to false, then specifying the dependencyAction property returns an
            error. The add task request fails with an invalid property value
            error; if you are calling the REST API directly, the HTTP status
            code is 400  (Bad Request). Possible values include: 'satisfy',
            'block'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders">
            <summary>
            Defines headers for DeleteFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileDeleteFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the FileDeleteFromComputeNodeHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions">
            <summary>
            Additional parameters for the File_DeleteFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the FileDeleteFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileDeleteFromComputeNodeOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders">
            <summary>
            Defines headers for DeleteFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileDeleteFromTaskHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the FileDeleteFromTaskHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions">
            <summary>
            Additional parameters for the File_DeleteFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.#ctor">
            <summary>
            Initializes a new instance of the FileDeleteFromTaskOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileDeleteFromTaskOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders">
            <summary>
            Defines headers for GetFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileGetFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the FileGetFromComputeNodeHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="ocpCreationTime">The file creation time.</param>
            <param name="ocpBatchFileIsdirectory">Whether the object represents
            a directory.</param>
            <param name="ocpBatchFileUrl">The URL of the file.</param>
            <param name="ocpBatchFileMode">The file mode attribute in octal
            format.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="contentLength">The length of the file.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.OcpCreationTime">
            <summary>
            Gets or sets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.OcpBatchFileIsdirectory">
            <summary>
            Gets or sets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.OcpBatchFileUrl">
            <summary>
            Gets or sets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.OcpBatchFileMode">
            <summary>
            Gets or sets the file mode attribute in octal format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.ContentType">
            <summary>
            Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.ContentLength">
            <summary>
            Gets or sets the length of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions">
            <summary>
            Additional parameters for the File_GetFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the FileGetFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileGetFromComputeNodeOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ocpRange">The byte range to be retrieved. The default
            is to retrieve the entire file. The format is
            bytes=startRange-endRange.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.OcpRange">
            <summary>
            Gets or sets the byte range to be retrieved. The default is to
            retrieve the entire file. The format is bytes=startRange-endRange.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders">
            <summary>
            Defines headers for GetFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileGetFromTaskHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the FileGetFromTaskHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="ocpCreationTime">The file creation time.</param>
            <param name="ocpBatchFileIsdirectory">Whether the object represents
            a directory.</param>
            <param name="ocpBatchFileUrl">The URL of the file.</param>
            <param name="ocpBatchFileMode">The file mode attribute in octal
            format.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="contentLength">The length of the file.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.OcpCreationTime">
            <summary>
            Gets or sets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.OcpBatchFileIsdirectory">
            <summary>
            Gets or sets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.OcpBatchFileUrl">
            <summary>
            Gets or sets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.OcpBatchFileMode">
            <summary>
            Gets or sets the file mode attribute in octal format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.ContentType">
            <summary>
            Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.ContentLength">
            <summary>
            Gets or sets the length of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions">
            <summary>
            Additional parameters for the File_GetFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.#ctor">
            <summary>
            Initializes a new instance of the FileGetFromTaskOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileGetFromTaskOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ocpRange">The byte range to be retrieved. The default
            is to retrieve the entire file. The format is
            bytes=startRange-endRange.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.OcpRange">
            <summary>
            Gets or sets the byte range to be retrieved. The default is to
            retrieve the entire file. The format is bytes=startRange-endRange.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders">
            <summary>
            Defines headers for GetPropertiesFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            FileGetPropertiesFromComputeNodeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the
            FileGetPropertiesFromComputeNodeHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="ocpCreationTime">The file creation time.</param>
            <param name="ocpBatchFileIsdirectory">Whether the object represents
            a directory.</param>
            <param name="ocpBatchFileUrl">The URL of the file.</param>
            <param name="ocpBatchFileMode">The file mode attribute in octal
            format.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="contentLength">The length of the file.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.OcpCreationTime">
            <summary>
            Gets or sets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.OcpBatchFileIsdirectory">
            <summary>
            Gets or sets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.OcpBatchFileUrl">
            <summary>
            Gets or sets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.OcpBatchFileMode">
            <summary>
            Gets or sets the file mode attribute in octal format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.ContentType">
            <summary>
            Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders.ContentLength">
            <summary>
            Gets or sets the length of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions">
            <summary>
            Additional parameters for the File_GetPropertiesFromComputeNode
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the
            FileGetPropertiesFromComputeNodeOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            FileGetPropertiesFromComputeNodeOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders">
            <summary>
            Defines headers for GetPropertiesFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileGetPropertiesFromTaskHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the FileGetPropertiesFromTaskHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="ocpCreationTime">The file creation time.</param>
            <param name="ocpBatchFileIsdirectory">Whether the object represents
            a directory.</param>
            <param name="ocpBatchFileUrl">The URL of the file.</param>
            <param name="ocpBatchFileMode">The file mode attribute in octal
            format.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="contentLength">The length of the file.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.OcpCreationTime">
            <summary>
            Gets or sets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.OcpBatchFileIsdirectory">
            <summary>
            Gets or sets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.OcpBatchFileUrl">
            <summary>
            Gets or sets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.OcpBatchFileMode">
            <summary>
            Gets or sets the file mode attribute in octal format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.ContentType">
            <summary>
            Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders.ContentLength">
            <summary>
            Gets or sets the length of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions">
            <summary>
            Additional parameters for the File_GetPropertiesFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions.#ctor">
            <summary>
            Initializes a new instance of the FileGetPropertiesFromTaskOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileGetPropertiesFromTaskOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders">
            <summary>
            Defines headers for ListFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileListFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromComputeNodeHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions">
            <summary>
            Additional parameters for the ListFromComputeNodeNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            FileListFromComputeNodeNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            FileListFromComputeNodeNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions">
            <summary>
            Additional parameters for the File_ListFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the FileListFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromComputeNodeOptions
            class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 files can be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 files can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders">
            <summary>
            Defines headers for ListFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileListFromTaskHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromTaskHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions">
            <summary>
            Additional parameters for the ListFromTaskNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.#ctor">
            <summary>
            Initializes a new instance of the FileListFromTaskNextOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromTaskNextOptions
            class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions">
            <summary>
            Additional parameters for the File_ListFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.#ctor">
            <summary>
            Initializes a new instance of the FileListFromTaskOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromTaskOptions class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 files can be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 files can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileProperties">
            <summary>
            The properties of a file on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileProperties.#ctor">
            <summary>
            Initializes a new instance of the FileProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileProperties.#ctor(System.DateTime,System.Int64,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Initializes a new instance of the FileProperties class.
            </summary>
            <param name="lastModified">The time at which the file was last
            modified.</param>
            <param name="contentLength">The length of the file.</param>
            <param name="creationTime">The file creation time.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="fileMode">The file mode attribute in octal
            format.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.CreationTime">
            <summary>
            Gets or sets the file creation time.
            </summary>
            <remarks>
            The creation time is not returned for files on Linux compute nodes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.LastModified">
            <summary>
            Gets or sets the time at which the file was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.ContentLength">
            <summary>
            Gets or sets the length of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.ContentType">
            <summary>
            Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.FileMode">
            <summary>
            Gets or sets the file mode attribute in octal format.
            </summary>
            <remarks>
            The file mode is returned only for files on Linux compute nodes.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ImageReference">
            <summary>
            A reference to an Azure Virtual Machines Marketplace image. To get the
            list of all imageReferences verified by Azure Batch, see the 'List
            supported node agent SKUs' operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ImageReference.#ctor">
            <summary>
            Initializes a new instance of the ImageReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ImageReference.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ImageReference class.
            </summary>
            <param name="publisher">The publisher of the Azure Virtual Machines
            Marketplace image.</param>
            <param name="offer">The offer type of the Azure Virtual Machines
            Marketplace image.</param>
            <param name="sku">The SKU of the Azure Virtual Machines Marketplace
            image.</param>
            <param name="version">The version of the Azure Virtual Machines
            Marketplace image.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Publisher">
            <summary>
            Gets or sets the publisher of the Azure Virtual Machines
            Marketplace image.
            </summary>
            <remarks>
            For example, Canonical or MicrosoftWindowsServer.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Offer">
            <summary>
            Gets or sets the offer type of the Azure Virtual Machines
            Marketplace image.
            </summary>
            <remarks>
            For example, UbuntuServer or WindowsServer.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Sku">
            <summary>
            Gets or sets the SKU of the Azure Virtual Machines Marketplace
            image.
            </summary>
            <remarks>
            For example, 14.04.0-LTS or 2012-R2-Datacenter.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Version">
            <summary>
            Gets or sets the version of the Azure Virtual Machines Marketplace
            image.
            </summary>
            <remarks>
            A value of 'latest' can be specified to select the latest version
            of an image. If omitted, the default is 'latest'.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobAction">
            <summary>
            Defines values for JobAction.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobAddHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions">
            <summary>
            Additional parameters for the Job_Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.#ctor">
            <summary>
            Initializes a new instance of the JobAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobAddOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter">
            <summary>
            An Azure Batch job to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.#ctor">
            <summary>
            Initializes a new instance of the JobAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the JobAddParameter class.
            </summary>
            <param name="id">A string that uniquely identifies the job within
            the account.</param>
            <param name="poolInfo">The pool on which the Batch service runs the
            job's tasks.</param>
            <param name="displayName">The display name for the job.</param>
            <param name="priority">The priority of the job.</param>
            <param name="constraints">The execution constraints for the
            job.</param>
            <param name="jobManagerTask">Details of a Job Manager task to be
            launched when the job is started.</param>
            <param name="jobPreparationTask">The Job Preparation task.</param>
            <param name="jobReleaseTask">The Job Release task.</param>
            <param name="commonEnvironmentSettings">The list of common
            environment variable settings. These environment variables are set
            for all tasks in the job (including the Job Manager, Job
            Preparation and Job Release tasks).</param>
            <param name="onAllTasksComplete">The action the Batch service
            should take when all tasks in the job are in the completed
            state.</param>
            <param name="onTaskFailure">The action the Batch service should
            take when any task in the job fails. A task is considered to have
            failed if it completes with a non-zero exit code and has exhausted
            its retry count, or if it had a scheduling error.</param>
            <param name="metadata">A list of name-value pairs associated with
            the job as metadata.</param>
            <param name="usesTaskDependencies">The flag that determines if this
            job will use tasks with dependencies.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Id">
            <summary>
            Gets or sets a string that uniquely identifies the job within the
            account.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. It is common to use a GUID for the id.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.DisplayName">
            <summary>
            Gets or sets the display name for the job.
            </summary>
            <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Priority">
            <summary>
            Gets or sets the priority of the job.
            </summary>
            <remarks>
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. The default
            value is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.JobManagerTask">
            <summary>
            Gets or sets details of a Job Manager task to be launched when the
            job is started.
            </summary>
            <remarks>
            If the job does not specify a Job Manager task, the user must
            explicitly add tasks to the job. If the job does specify a Job
            Manager task, the Batch service creates the Job Manager task when
            the job is created, and will try to schedule the Job Manager task
            before scheduling other tasks in the job. The Job Manager task's
            typical purpose is to control and/or monitor job execution, for
            example by deciding what additional tasks to run, determining when
            the work is complete, etc. (However, a Job Manager task is not
            restricted to these activities - it is a fully-fledged task in the
            system and perform whatever actions are required for the job.) For
            example, a Job Manager task might download a file specified as a
            parameter, analyze the contents of that file and submit additional
            tasks based on those contents.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task.
            </summary>
            <remarks>
            If a job has a Job Preparation task, the Batch service will run the
            Job Preparation task on a compute node before starting any tasks of
            that job on that compute node.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task.
            </summary>
            <remarks>
            A Job Release task cannot be specified without also specifying a
            Job Preparation task for the job. The Batch service runs the Job
            Release task on the compute nodes that have run the Job Preparation
            task. The primary purpose of the Job Release task is to undo
            changes to compute nodes made by the Job Preparation task. Example
            activities include deleting local files, or shutting down services
            that were started as part of job preparation.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.CommonEnvironmentSettings">
            <summary>
            Gets or sets the list of common environment variable settings.
            These environment variables are set for all tasks in the job
            (including the Job Manager, Job Preparation and Job Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.PoolInfo">
            <summary>
            Gets or sets the pool on which the Batch service runs the job's
            tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.OnAllTasksComplete">
            <summary>
            Gets or sets the action the Batch service should take when all
            tasks in the job are in the completed state.
            </summary>
            <remarks>
            Note that if a job contains no tasks, then all tasks are considered
            complete. This option is therefore most commonly used with a Job
            Manager task; if you want to use automatic job termination without
            a Job Manager, you should initially set onAllTasksComplete to
            noAction and update the job properties to set onAllTasksComplete to
            terminateJob once you have finished adding tasks. Permitted values
            are: noAction - do nothing. The job remains active unless
            terminated or disabled by some other means. terminateJob -
            terminate the job. The job's terminateReason is set to
            'AllTasksComplete'. The default is noAction. Possible values
            include: 'noAction', 'terminateJob'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.OnTaskFailure">
            <summary>
            Gets or sets the action the Batch service should take when any task
            in the job fails. A task is considered to have failed if it
            completes with a non-zero exit code and has exhausted its retry
            count, or if it had a scheduling error.
            </summary>
            <remarks>
            noAction - do nothing. performExitOptionsJobAction - take the
            action associated with the task exit condition in the task's
            exitConditions collection. (This may still result in no action
            being taken, if that is what the task specifies.) The default is
            noAction. Possible values include: 'noAction',
            'performExitOptionsJobAction'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as
            metadata.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.UsesTaskDependencies">
            <summary>
            Gets or sets the flag that determines if this job will use tasks
            with dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobConstraints">
            <summary>
            The execution constraints for a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor">
            <summary>
            Initializes a new instance of the JobConstraints class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the JobConstraints class.
            </summary>
            <param name="maxWallClockTime">The maximum elapsed time that the
            job may run, measured from the time the job is created.</param>
            <param name="maxTaskRetryCount">The maximum number of times each
            task may be retried. The Batch service retries a task if its exit
            code is nonzero.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum elapsed time that the job may run,
            measured from the time the job is created.
            </summary>
            <remarks>
            If the job does not complete within the time limit, the Batch
            service terminates it and any tasks that are still running. In this
            case, the termination reason will be MaxWallClockTimeExpiry. If
            this property is not specified, there is no time limit on how long
            the job may run.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of times each task may be retried.
            The Batch service retries a task if its exit code is nonzero.
            </summary>
            <remarks>
            Note that this value specifically controls the number of retries.
            The Batch service will try each task once, and may then retry up to
            this limit. For example, if the maximum retry count is 3, Batch
            tries a task up to 4 times (one initial try and 3 retries). If the
            maximum retry count is 0, the Batch service does not retry tasks.
            If the maximum retry count is -1, the Batch service retries tasks
            without limit. The default value is 0 (no retries).
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the JobDeleteHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions">
            <summary>
            Additional parameters for the Job_Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the JobDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobDeleteOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders">
            <summary>
            Defines headers for Disable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobDisableHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobDisableHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions">
            <summary>
            Additional parameters for the Job_Disable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.#ctor">
            <summary>
            Initializes a new instance of the JobDisableOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobDisableOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter">
            <summary>
            Options when disabling a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor">
            <summary>
            Initializes a new instance of the JobDisableParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.DisableJobOption)">
            <summary>
            Initializes a new instance of the JobDisableParameter class.
            </summary>
            <param name="disableTasks">What to do with active tasks associated
            with the job.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks">
            <summary>
            Gets or sets what to do with active tasks associated with the job.
            </summary>
            <remarks>
            requeue - Terminate running tasks and requeue them. The tasks will
            run again when the job is enabled. terminate - Terminate running
            tasks. The tasks will not run again. wait - Allow currently running
            tasks to complete. Possible values include: 'requeue', 'terminate',
            'wait'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders">
            <summary>
            Defines headers for Enable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobEnableHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobEnableHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions">
            <summary>
            Additional parameters for the Job_Enable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.#ctor">
            <summary>
            Initializes a new instance of the JobEnableOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobEnableOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation">
            <summary>
            Contains information about the execution of a job in the Azure Batch
            service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the JobExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor(System.DateTime,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError,System.String)">
            <summary>
            Initializes a new instance of the JobExecutionInformation class.
            </summary>
            <param name="startTime">The start time of the job.</param>
            <param name="endTime">The completion time of the job.</param>
            <param name="poolId">The ID of the pool to which this job is
            assigned.</param>
            <param name="schedulingError">Details of any error encountered by
            the service in starting the job.</param>
            <param name="terminateReason">A string describing the reason the
            job ended.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime">
            <summary>
            Gets or sets the start time of the job.
            </summary>
            <remarks>
            This is the time at which the job was created.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime">
            <summary>
            Gets or sets the completion time of the job.
            </summary>
            <remarks>
            This property is set only if the job is in the completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId">
            <summary>
            Gets or sets the ID of the pool to which this job is assigned.
            </summary>
            <remarks>
            This element contains the actual pool where the job is assigned.
            When you get job details from the service, they also contain a
            poolInfo element, which contains the pool configuration data from
            when the job was added or updated. That poolInfo element may also
            contain a poolId element. If it does, the two IDs are the same. If
            it does not, it means the job ran on an auto pool, and this
            property contains the id of that auto pool.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError">
            <summary>
            Gets or sets details of any error encountered by the service in
            starting the job.
            </summary>
            <remarks>
            This property is not set if there was no error starting the job.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason">
            <summary>
            Gets or sets a string describing the reason the job ended.
            </summary>
            <remarks>
            This property is set only if the job is in the completed state. If
            the Batch service terminates the job, it sets the reason as
            follows: JMComplete - the Job Manager task completed, and
            killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the
            job reached its maxWallClockTime constraint. TerminateJobSchedule -
            the job ran as part of a schedule, and the schedule terminated.
            AllTasksComplete - the job's onAllTasksComplete attribute is set to
            terminateJob, and all tasks in the job are complete. TaskFailed -
            the job's onTaskFailure attribute is set to
            performExitOptionsJobAction, and a task in the job failed with an
            exit condition that specified a jobAction of terminateJob. Any
            other string is a user-defined reason specified in a call to the
            'Terminate a job' operation.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsHeaders">
            <summary>
            Defines headers for GetAllLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            JobGetAllLifetimeStatisticsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobGetAllLifetimeStatisticsHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions">
            <summary>
            Additional parameters for the Job_GetAllLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions.#ctor">
            <summary>
            Initializes a new instance of the
            JobGetAllLifetimeStatisticsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobGetAllLifetimeStatisticsOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobGetHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions">
            <summary>
            Additional parameters for the Job_Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.#ctor">
            <summary>
            Initializes a new instance of the JobGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobGetOptions class.
            </summary>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders">
            <summary>
            Defines headers for ListFromJobSchedule operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions">
            <summary>
            Additional parameters for the ListFromJobScheduleNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.#ctor">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleNextOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleNextOptions
            class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions">
            <summary>
            Additional parameters for the Job_ListFromJobSchedule operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.#ctor">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleOptions
            class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 jobs can be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 jobs can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the JobListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListOptions">
            <summary>
            Additional parameters for the Job_List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.#ctor">
            <summary>
            Initializes a new instance of the JobListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListOptions class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 jobs can be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 jobs can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders">
            <summary>
            Defines headers for ListPreparationAndReleaseTaskStatus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions">
            <summary>
            Additional parameters for the ListPreparationAndReleaseTaskStatusNext
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions">
            <summary>
            Additional parameters for the Job_ListPreparationAndReleaseTaskStatus
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.#ctor">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusOptions class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="select">An OData $select clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 tasks can be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 tasks can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask">
            <summary>
            Specifies details of a Job Manager task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor">
            <summary>
            Initializes a new instance of the JobManagerTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.OutputFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the JobManagerTask class.
            </summary>
            <param name="id">A string that uniquely identifies the Job Manager
            taskwithin the job.</param>
            <param name="commandLine">The command line of the Job Manager
            task.</param>
            <param name="displayName">The display name of the Job Manager
            task.</param>
            <param name="resourceFiles">A list of files that the Batch service
            will download to the compute node before running the command
            line.</param>
            <param name="outputFiles">A list of files that the Batch service
            will upload from the compute node after running the command
            line.</param>
            <param name="environmentSettings">A list of environment variable
            settings for the Job Manager task.</param>
            <param name="constraints">Constraints that apply to the Job Manager
            task.</param>
            <param name="killJobOnCompletion">Whether completion of the Job
            Manager task signifies completion of the entire job.</param>
            <param name="userIdentity">The user identity under which the Job
            Manager task runs.</param>
            <param name="runExclusive">Whether the Job Manager task requires
            exclusive use of the compute node where it runs.</param>
            <param name="applicationPackageReferences">A list of application
            packages that the Batch service will deploy to the compute node
            before running the command line.</param>
            <param name="authenticationTokenSettings">The settings for an
            authentication token that the task can use to perform Batch service
            operations.</param>
            <param name="allowLowPriorityNode">Whether the Job Manager task may
            run on a low-priority compute node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id">
            <summary>
            Gets or sets a string that uniquely identifies the Job Manager
            taskwithin the job.
            </summary>
            <remarks>
            The id can contain any combination of alphanumeric characters
            including hyphens and underscores and cannot contain more than 64
            characters.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName">
            <summary>
            Gets or sets the display name of the Job Manager task.
            </summary>
            <remarks>
            It need not be unique and can contain any Unicode characters up to
            a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine">
            <summary>
            Gets or sets the command line of the Job Manager task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download
            to the compute node before running the command line.
            </summary>
            <remarks>
            Files listed under this element are located in the task's working
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.OutputFiles">
            <summary>
            Gets or sets a list of files that the Batch service will upload
            from the compute node after running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the Job
            Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints">
            <summary>
            Gets or sets constraints that apply to the Job Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion">
            <summary>
            Gets or sets whether completion of the Job Manager task signifies
            completion of the entire job.
            </summary>
            <remarks>
            If true, when the Job Manager task completes, the Batch service
            marks the job as complete. If any tasks are still running at this
            time (other than Job Release), those tasks are terminated. If
            false, the completion of the Job Manager task does not affect the
            job status. In this case, you should either use the
            onAllTasksComplete attribute to terminate the job, or have a client
            or user terminate the job explicitly. An example of this is if the
            Job Manager creates a set of tasks but then takes no further role
            in their execution. The default value is true. If you are using the
            onAllTasksComplete and onTaskFailure attributes to control job
            lifetime, and using the Job Manager task only to create the tasks
            for the job (not to monitor progress), then it is important to set
            killJobOnCompletion to false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the Job Manager task
            runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to
            the task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive">
            <summary>
            Gets or sets whether the Job Manager task requires exclusive use of
            the compute node where it runs.
            </summary>
            <remarks>
            If true, no other tasks will run on the same compute node for as
            long as the Job Manager is running. If false, other tasks can run
            simultaneously with the Job Manager on a compute node. The Job
            Manager task counts normally against the node's concurrent task
            limit, so this is only relevant if the node allows multiple
            concurrent tasks. The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages that the Batch service
            will deploy to the compute node before running the command line.
            </summary>
            <remarks>
            Application packages are downloaded and deployed to a shared
            directory, not the task directory. Therefore, if a referenced
            package is already on the compute node, and is up to date, then it
            is not re-downloaded; the existing copy on the compute node is
            used. If a referenced application package cannot be installed, for
            example because the package has been deleted or because download
            failed, the task fails with a scheduling error. This property is
            currently not supported on jobs running on pools created using the
            virtualMachineConfiguration (IaaS) property. If a task specifying
            applicationPackageReferences runs on such a pool, it fails with a
            scheduling error with code TaskSchedulingConstraintFailed.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings">
            <summary>
            Gets or sets the settings for an authentication token that the task
            can use to perform Batch service operations.
            </summary>
            <remarks>
            If this property is set, the Batch service provides the task with
            an authentication token which can be used to authenticate Batch
            service operations without requiring an account access key. The
            token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment
            variable. The operations that the task can carry out using the
            token depend on the settings. For example, a task can request job
            permissions in order to add other tasks to the job, or check the
            status of the job or of other tasks under the job.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AllowLowPriorityNode">
            <summary>
            Gets or sets whether the Job Manager task may run on a low-priority
            compute node.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders">
            <summary>
            Defines headers for Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobPatchHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobPatchHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions">
            <summary>
            Additional parameters for the Job_Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.#ctor">
            <summary>
            Initializes a new instance of the JobPatchOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobPatchOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter">
            <summary>
            The set of changes to be made to a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.#ctor">
            <summary>
            Initializes a new instance of the JobPatchParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.#ctor(System.Nullable{System.Int32},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobPatchParameter class.
            </summary>
            <param name="priority">The priority of the job.</param>
            <param name="onAllTasksComplete">The action the Batch service
            should take when all tasks in the job are in the completed
            state.</param>
            <param name="constraints">The execution constraints for the
            job.</param>
            <param name="poolInfo">The pool on which the Batch service runs the
            job's tasks.</param>
            <param name="metadata">A list of name-value pairs associated with
            the job as metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.Priority">
            <summary>
            Gets or sets the priority of the job.
            </summary>
            <remarks>
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. If omitted,
            the priority of the job is left unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.OnAllTasksComplete">
            <summary>
            Gets or sets the action the Batch service should take when all
            tasks in the job are in the completed state.
            </summary>
            <remarks>
            If omitted, the completion behavior is left unchanged. You may not
            change the value from terminateJob to noAction - that is, once you
            have engaged automatic job termination, you cannot turn it off
            again. If you try to do this, the request fails with an 'invalid
            property value' error response; if you are calling the REST API
            directly, the HTTP status code is 400 (Bad Request). Possible
            values include: 'noAction', 'terminateJob'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
            <remarks>
            If omitted, the existing execution constraints are left unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.PoolInfo">
            <summary>
            Gets or sets the pool on which the Batch service runs the job's
            tasks.
            </summary>
            <remarks>
            You may change the pool for a job only when the job is disabled.
            The Patch Job call will fail if you include the poolInfo element
            and the job is not disabled. If you specify an
            autoPoolSpecification specification in the poolInfo, only the
            keepAlive property can be updated, and then only if the auto pool
            has a poolLifetimeOption of job. If omitted, the job continues to
            run on its current pool.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as
            metadata.
            </summary>
            <remarks>
            If omitted, the existing job metadata is left unchanged.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation">
            <summary>
            The status of the Job Preparation and Job Release tasks on a compute
            node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobPreparationAndReleaseTaskExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation)">
            <summary>
            Initializes a new instance of the
            JobPreparationAndReleaseTaskExecutionInformation class.
            </summary>
            <param name="poolId">The ID of the pool containing the compute node
            to which this entry refers.</param>
            <param name="nodeId">The ID of the compute node to which this entry
            refers.</param>
            <param name="nodeUrl">The URL of the compute node to which this
            entry refers.</param>
            <param name="jobPreparationTaskExecutionInfo">Information about the
            execution status of the Job Preparation task on this compute
            node.</param>
            <param name="jobReleaseTaskExecutionInfo">Information about the
            execution status of the Job Release task on this compute
            node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId">
            <summary>
            Gets or sets the ID of the pool containing the compute node to
            which this entry refers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId">
            <summary>
            Gets or sets the ID of the compute node to which this entry refers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl">
            <summary>
            Gets or sets the URL of the compute node to which this entry
            refers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo">
            <summary>
            Gets or sets information about the execution status of the Job
            Preparation task on this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo">
            <summary>
            Gets or sets information about the execution status of the Job
            Release task on this compute node.
            </summary>
            <remarks>
            This property is set only if the Job Release task has run on the
            node.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask">
            <summary>
            A Job Preparation task to run before any tasks of the job on any given
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor">
            <summary>
            Initializes a new instance of the JobPreparationTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the JobPreparationTask class.
            </summary>
            <param name="commandLine">The command line of the Job Preparation
            task.</param>
            <param name="id">A string that uniquely identifies the Job
            Preparation task within the job.</param>
            <param name="resourceFiles">A list of files that the Batch service
            will download to the compute node before running the command
            line.</param>
            <param name="environmentSettings">A list of environment variable
            settings for the Job Preparation task.</param>
            <param name="constraints">Constraints that apply to the Job
            Preparation task.</param>
            <param name="waitForSuccess">Whether the Batch service should wait
            for the Job Preparation task to complete successfully before
            scheduling any other tasks of the job on the compute node.</param>
            <param name="userIdentity">The user identity under which the Job
            Preparation task runs.</param>
            <param name="rerunOnNodeRebootAfterSuccess">Whether the Batch
            service should rerun the Job Preparation task after a compute node
            reboots.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id">
            <summary>
            Gets or sets a string that uniquely identifies the Job Preparation
            task within the job.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores and cannot contain more than 64
            characters. If you do not specify this property, the Batch service
            assigns a default value of 'jobpreparation'. No other task in the
            job can have the same id as the Job Preparation task. If you try to
            submit a task with the same id, the Batch service rejects the
            request with error code TaskIdSameAsJobPreparationTask; if you are
            calling the REST API directly, the HTTP status code is 409
            (Conflict).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine">
            <summary>
            Gets or sets the command line of the Job Preparation task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download
            to the compute node before running the command line.
            </summary>
            <remarks>
            Files listed under this element are located in the task's working
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the Job
            Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints">
            <summary>
            Gets or sets constraints that apply to the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess">
            <summary>
            Gets or sets whether the Batch service should wait for the Job
            Preparation task to complete successfully before scheduling any
            other tasks of the job on the compute node.
            </summary>
            <remarks>
            If true and the Job Preparation task fails on a compute node, the
            Batch service retries the Job Preparation task up to its maximum
            retry count (as specified in the constraints element). If the task
            has still not completed successfully after all retries, then the
            Batch service will not schedule tasks of the job to the compute
            node. The compute node remains active and eligible to run tasks of
            other jobs. If false, the Batch service will not wait for the Job
            Preparation task to complete. In this case, other tasks of the job
            can start executing on the compute node while the Job Preparation
            task is still running; and even if the Job Preparation task fails,
            new tasks will continue to be scheduled on the node. The default
            value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the Job Preparation task
            runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to
            the task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess">
            <summary>
            Gets or sets whether the Batch service should rerun the Job
            Preparation task after a compute node reboots.
            </summary>
            <remarks>
            The Job Preparation task is always rerun if a compute node is
            reimaged, or if the Job Preparation task did not complete (e.g.
            because the reboot occurred while the task was running). Therefore,
            you should always write a Job Preparation task to be idempotent and
            to behave correctly if run multiple times. The default value is
            true.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Preparation task on a
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobPreparationTaskExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.#ctor(System.DateTime,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskState,System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation,System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskExecutionResult})">
            <summary>
            Initializes a new instance of the
            JobPreparationTaskExecutionInformation class.
            </summary>
            <param name="startTime">The time at which the task started
            running.</param>
            <param name="state">The current state of the Job Preparation task
            on the compute node.</param>
            <param name="retryCount">The number of times the task has been
            retried by the Batch service. Task application failures (non-zero
            exit code) are retried, pre-processing errors (the task could not
            be run) and file upload errors are not retried. The Batch service
            will retry the task up to the limit specified by the
            constraints.</param>
            <param name="endTime">The time at which the Job Preparation task
            completed.</param>
            <param name="taskRootDirectory">The root directory of the Job
            Preparation task on the compute node. You can use this path to
            retrieve files created by the task, such as log files.</param>
            <param name="taskRootDirectoryUrl">The URL to the root directory of
            the Job Preparation task on the compute node.</param>
            <param name="exitCode">The exit code of the program specified on
            the task command line.</param>
            <param name="failureInfo">Information describing the task failure,
            if any.</param>
            <param name="lastRetryTime">The most recent time at which a retry
            of the Job Preparation task started running.</param>
            <param name="result">The result of the task execution.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.StartTime">
            <summary>
            Gets or sets the time at which the task started running.
            </summary>
            <remarks>
            Note that every time the task is restarted, this value is updated.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.EndTime">
            <summary>
            Gets or sets the time at which the Job Preparation task completed.
            </summary>
            <remarks>
            This property is set only if the task is in the Completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.State">
            <summary>
            Gets or sets the current state of the Job Preparation task on the
            compute node.
            </summary>
            <remarks>
            running - the task is currently running (including retrying).
            completed - the task has exited with exit code 0, or the task has
            exhausted its retry limit, or the Batch service was unable to start
            the task due to scheduling errors. Possible values include:
            'running', 'completed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.TaskRootDirectory">
            <summary>
            Gets or sets the root directory of the Job Preparation task on the
            compute node. You can use this path to retrieve files created by
            the task, such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Gets or sets the URL to the root directory of the Job Preparation
            task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the program specified on the task
            command line.
            </summary>
            <remarks>
            This parameter is returned only if the task is in the completed
            state. The exit code for a process reflects the specific convention
            implemented by the application developer for that process. If you
            use the exit code value to make decisions in your code, be sure
            that you know the exit code convention used by the application
            process. Note that the exit code may also be generated by the
            compute node operating system, such as when a process is forcibly
            terminated.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.FailureInfo">
            <summary>
            Gets or sets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the completed state and
            encountered a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.RetryCount">
            <summary>
            Gets or sets the number of times the task has been retried by the
            Batch service. Task application failures (non-zero exit code) are
            retried, pre-processing errors (the task could not be run) and file
            upload errors are not retried. The Batch service will retry the
            task up to the limit specified by the constraints.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.LastRetryTime">
            <summary>
            Gets or sets the most recent time at which a retry of the Job
            Preparation task started running.
            </summary>
            <remarks>
            This property is set only if the task was retried (i.e. retryCount
            is nonzero). If present, this is typically the same as startTime,
            but may be different if the task has been restarted for reasons
            other than retry; for example, if the compute node was rebooted
            during a retry, then the startTime is updated but the lastRetryTime
            is not.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.Result">
            <summary>
            Gets or sets the result of the task execution.
            </summary>
            <remarks>
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property. Possible values include:
            'success', 'failure'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskState">
            <summary>
            Defines values for JobPreparationTaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask">
            <summary>
            A Job Release task to run on job completion on any compute node where
            the job has run.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor">
            <summary>
            Initializes a new instance of the JobReleaseTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.UserIdentity)">
            <summary>
            Initializes a new instance of the JobReleaseTask class.
            </summary>
            <param name="commandLine">The command line of the Job Release
            task.</param>
            <param name="id">A string that uniquely identifies the Job Release
            task within the job.</param>
            <param name="resourceFiles">A list of files that the Batch service
            will download to the compute node before running the command
            line.</param>
            <param name="environmentSettings">A list of environment variable
            settings for the Job Release task.</param>
            <param name="maxWallClockTime">The maximum elapsed time that the
            Job Release task may run on a given compute node, measured from the
            time the task starts. If the task does not complete within the time
            limit, the Batch service terminates it. The default value is 15
            minutes. You may not specify a timeout longer than 15 minutes. If
            you do, the Batch service rejects it with an error; if you are
            calling the REST API directly, the HTTP status code is 400 (Bad
            Request).</param>
            <param name="retentionTime">The minimum time to retain the task
            directory for the Job Release task on the compute node. After this
            time, the Batch service may delete the task directory and all its
            contents.</param>
            <param name="userIdentity">The user identity under which the Job
            Release task runs.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id">
            <summary>
            Gets or sets a string that uniquely identifies the Job Release task
            within the job.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores and cannot contain more than 64
            characters. If you do not specify this property, the Batch service
            assigns a default value of 'jobrelease'. No other task in the job
            can have the same id as the Job Release task. If you try to submit
            a task with the same id, the Batch service rejects the request with
            error code TaskIdSameAsJobReleaseTask; if you are calling the REST
            API directly, the HTTP status code is 409 (Conflict).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine">
            <summary>
            Gets or sets the command line of the Job Release task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download
            to the compute node before running the command line.
            </summary>
            <remarks>
            Files listed under this element are located in the task's working
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the Job
            Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime">
            <summary>
            Gets or sets the maximum elapsed time that the Job Release task may
            run on a given compute node, measured from the time the task
            starts. If the task does not complete within the time limit, the
            Batch service terminates it. The default value is 15 minutes. You
            may not specify a timeout longer than 15 minutes. If you do, the
            Batch service rejects it with an error; if you are calling the REST
            API directly, the HTTP status code is 400 (Bad Request).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime">
            <summary>
            Gets or sets the minimum time to retain the task directory for the
            Job Release task on the compute node. After this time, the Batch
            service may delete the task directory and all its contents.
            </summary>
            <remarks>
            The default is infinite, i.e. the task directory will be retained
            until the compute node is removed or reimaged.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the Job Release task
            runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to
            the task.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Release task on a
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobReleaseTaskExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor(System.DateTime,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskExecutionResult})">
            <summary>
            Initializes a new instance of the
            JobReleaseTaskExecutionInformation class.
            </summary>
            <param name="startTime">The time at which the task started running.
            Note that every time the task is restarted, this value is
            updated.</param>
            <param name="state">The current state of the Job Release task on
            the compute node.</param>
            <param name="endTime">The time at which the Job Release task
            completed.</param>
            <param name="taskRootDirectory">The root directory of the Job
            Release task on the compute node. You can use this path to retrieve
            files created by the task, such as log files.</param>
            <param name="taskRootDirectoryUrl">The URL to the root directory of
            the Job Release task on the compute node.</param>
            <param name="exitCode">The exit code of the program specified on
            the task command line.</param>
            <param name="failureInfo">Information describing the task failure,
            if any.</param>
            <param name="result">The result of the task execution.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime">
            <summary>
            Gets or sets the time at which the task started running. Note that
            every time the task is restarted, this value is updated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime">
            <summary>
            Gets or sets the time at which the Job Release task completed.
            </summary>
            <remarks>
            This property is set only if the task is in the Completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State">
            <summary>
            Gets or sets the current state of the Job Release task on the
            compute node.
            </summary>
            <remarks>
            running - the task is currently running (including retrying).
            completed - the task has exited, or the Batch service was unable to
            start the task due to scheduling errors. Possible values include:
            'running', 'completed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory">
            <summary>
            Gets or sets the root directory of the Job Release task on the
            compute node. You can use this path to retrieve files created by
            the task, such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Gets or sets the URL to the root directory of the Job Release task
            on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the program specified on the task
            command line.
            </summary>
            <remarks>
            This parameter is returned only if the task is in the completed
            state. The exit code for a process reflects the specific convention
            implemented by the application developer for that process. If you
            use the exit code value to make decisions in your code, be sure
            that you know the exit code convention used by the application
            process. Note that the exit code may also be generated by the
            compute node operating system, such as when a process is forcibly
            terminated.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.FailureInfo">
            <summary>
            Gets or sets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the completed state and
            encountered a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Result">
            <summary>
            Gets or sets the result of the task execution.
            </summary>
            <remarks>
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property. Possible values include:
            'success', 'failure'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState">
            <summary>
            Defines values for JobReleaseTaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleAddHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions">
            <summary>
            Additional parameters for the JobSchedule_Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleAddOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter">
            <summary>
            A job schedule that allows recurring jobs by specifying when to run
            jobs and a specification used to create each job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobScheduleAddParameter class.
            </summary>
            <param name="id">A string that uniquely identifies the schedule
            within the account.</param>
            <param name="schedule">The schedule according to which jobs will be
            created.</param>
            <param name="jobSpecification">The details of the jobs to be
            created on this schedule.</param>
            <param name="displayName">The display name for the
            schedule.</param>
            <param name="metadata">A list of name-value pairs associated with
            the schedule as metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.Id">
            <summary>
            Gets or sets a string that uniquely identifies the schedule within
            the account.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. The id is case-preserving and case-insensitive (that
            is, you may not have two ids within an account that differ only by
            case).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.DisplayName">
            <summary>
            Gets or sets the display name for the schedule.
            </summary>
            <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.Schedule">
            <summary>
            Gets or sets the schedule according to which jobs will be created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.JobSpecification">
            <summary>
            Gets or sets the details of the jobs to be created on this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the
            schedule as metadata.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the JobScheduleDeleteHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions">
            <summary>
            Additional parameters for the JobSchedule_Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleDeleteOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders">
            <summary>
            Defines headers for Disable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleDisableHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleDisableHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions">
            <summary>
            Additional parameters for the JobSchedule_Disable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleDisableOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleDisableOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders">
            <summary>
            Defines headers for Enable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleEnableHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleEnableHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions">
            <summary>
            Additional parameters for the JobSchedule_Enable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleEnableOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleEnableOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation">
            <summary>
            Contains information about jobs that have been and will be run under a
            job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleExecutionInformation
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.#ctor(System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.RecentJob,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleExecutionInformation
            class.
            </summary>
            <param name="nextRunTime">The next time at which a job will be
            created under this schedule.</param>
            <param name="recentJob">Information about the most recent job under
            the job schedule.</param>
            <param name="endTime">The time at which the schedule ended.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.NextRunTime">
            <summary>
            Gets or sets the next time at which a job will be created under
            this schedule.
            </summary>
            <remarks>
            This property is meaningful only if the schedule is in the active
            state when the time comes around. For example, if the schedule is
            disabled, no job will be created at nextRunTime unless the job is
            enabled before then.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.RecentJob">
            <summary>
            Gets or sets information about the most recent job under the job
            schedule.
            </summary>
            <remarks>
            This property is present only if the at least one job has run under
            the schedule.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.EndTime">
            <summary>
            Gets or sets the time at which the schedule ended.
            </summary>
            <remarks>
            This property is set only if the job schedule is in the completed
            state.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders">
            <summary>
            Defines headers for Exists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleExistsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleExistsHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions">
            <summary>
            Additional parameters for the JobSchedule_Exists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleExistsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleExistsOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleGetHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions">
            <summary>
            Additional parameters for the JobSchedule_Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleGetOptions class.
            </summary>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleListHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleListNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions">
            <summary>
            Additional parameters for the JobSchedule_List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleListOptions class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 job schedules can be
            returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 job schedules can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders">
            <summary>
            Defines headers for Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulePatchHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobSchedulePatchHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions">
            <summary>
            Additional parameters for the JobSchedule_Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulePatchOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobSchedulePatchOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter">
            <summary>
            The set of changes to be made to a job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulePatchParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobSchedulePatchParameter class.
            </summary>
            <param name="schedule">The schedule according to which jobs will be
            created.</param>
            <param name="jobSpecification">The details of the jobs to be
            created on this schedule.</param>
            <param name="metadata">A list of name-value pairs associated with
            the job schedule as metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.Schedule">
            <summary>
            Gets or sets the schedule according to which jobs will be created.
            </summary>
            <remarks>
            If you do not specify this element, the existing schedule is left
            unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.JobSpecification">
            <summary>
            Gets or sets the details of the jobs to be created on this
            schedule.
            </summary>
            <remarks>
            Updates affect only jobs that are started after the update has
            taken place. Any currently active job continues with the older
            specification.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job
            schedule as metadata.
            </summary>
            <remarks>
            If you do not specify this element, existing metadata is left
            unchanged.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleState">
            <summary>
            Defines values for JobScheduleState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics">
            <summary>
            Resource usage statistics for a job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.#ctor(System.String,System.DateTime,System.DateTime,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int64,System.Int64,System.Double,System.Double,System.Int64,System.Int64,System.Int64,System.TimeSpan)">
            <summary>
            Initializes a new instance of the JobScheduleStatistics class.
            </summary>
            <param name="url">The URL of the statistics.</param>
            <param name="startTime">The start time of the time range covered by
            the statistics.</param>
            <param name="lastUpdateTime">The time at which the statistics were
            last updated. All statistics are limited to the range between
            startTime and lastUpdateTime.</param>
            <param name="userCPUTime">The total user mode CPU time (summed
            across all cores and all compute nodes) consumed by all tasks in
            all jobs created under the schedule.</param>
            <param name="kernelCPUTime">The total kernel mode CPU time (summed
            across all cores and all compute nodes) consumed by all tasks in
            all jobs created under the schedule.</param>
            <param name="wallClockTime">The total wall clock time of all the
            tasks in all the jobs created under the schedule.</param>
            <param name="readIOps">The total number of disk read operations
            made by all tasks in all jobs created under the schedule.</param>
            <param name="writeIOps">The total number of disk write operations
            made by all tasks in all jobs created under the schedule.</param>
            <param name="readIOGiB">The total gibibytes read from disk by all
            tasks in all jobs created under the schedule.</param>
            <param name="writeIOGiB">The total gibibytes written to disk by all
            tasks in all jobs created under the schedule.</param>
            <param name="numSucceededTasks">The total number of tasks
            successfully completed during the given time range in jobs created
            under the schedule. A task completes successfully if it returns
            exit code 0.</param>
            <param name="numFailedTasks">The total number of tasks that failed
            during the given time range in jobs created under the schedule. A
            task fails if it exhausts its maximum retry count without returning
            exit code 0.</param>
            <param name="numTaskRetries">The total number of retries during the
            given time range on all tasks in all jobs created under the
            schedule.</param>
            <param name="waitTime">The total wait time of all tasks in all jobs
            created under the schedule. The wait time for a task is defined as
            the elapsed time between the creation of the task and the start of
            task execution. (If the task is retried due to failures, the wait
            time is the time to the most recent task execution.)</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.Url">
            <summary>
            Gets or sets the URL of the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.UserCPUTime">
            <summary>
            Gets or sets the total user mode CPU time (summed across all cores
            and all compute nodes) consumed by all tasks in all jobs created
            under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.KernelCPUTime">
            <summary>
            Gets or sets the total kernel mode CPU time (summed across all
            cores and all compute nodes) consumed by all tasks in all jobs
            created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WallClockTime">
            <summary>
            Gets or sets the total wall clock time of all the tasks in all the
            jobs created under the schedule.
            </summary>
            <remarks>
            The wall clock time is the elapsed time from when the task started
            running on a compute node to when it finished (or to the last time
            the statistics were updated, if the task had not finished by then).
            If a task was retried, this includes the wall clock time of all the
            task retries.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.ReadIOps">
            <summary>
            Gets or sets the total number of disk read operations made by all
            tasks in all jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WriteIOps">
            <summary>
            Gets or sets the total number of disk write operations made by all
            tasks in all jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.ReadIOGiB">
            <summary>
            Gets or sets the total gibibytes read from disk by all tasks in all
            jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WriteIOGiB">
            <summary>
            Gets or sets the total gibibytes written to disk by all tasks in
            all jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.NumSucceededTasks">
            <summary>
            Gets or sets the total number of tasks successfully completed
            during the given time range in jobs created under the schedule. A
            task completes successfully if it returns exit code 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.NumFailedTasks">
            <summary>
            Gets or sets the total number of tasks that failed during the given
            time range in jobs created under the schedule. A task fails if it
            exhausts its maximum retry count without returning exit code 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.NumTaskRetries">
            <summary>
            Gets or sets the total number of retries during the given time
            range on all tasks in all jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WaitTime">
            <summary>
            Gets or sets the total wait time of all tasks in all jobs created
            under the schedule. The wait time for a task is defined as the
            elapsed time between the creation of the task and the start of task
            execution. (If the task is retried due to failures, the wait time
            is the time to the most recent task execution.)
            </summary>
            <remarks>
            This value is only reported in the account lifetime statistics; it
            is not included in the job statistics.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders">
            <summary>
            Defines headers for Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleTerminateHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleTerminateHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions">
            <summary>
            Additional parameters for the JobSchedule_Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleTerminateOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleTerminateOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders">
            <summary>
            Defines headers for Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleUpdateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleUpdateHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions">
            <summary>
            Additional parameters for the JobSchedule_Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleUpdateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleUpdateOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter">
            <summary>
            The set of changes to be made to a job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleUpdateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobScheduleUpdateParameter class.
            </summary>
            <param name="schedule">The schedule according to which jobs will be
            created.</param>
            <param name="jobSpecification">Details of the jobs to be created on
            this schedule.</param>
            <param name="metadata">A list of name-value pairs associated with
            the job schedule as metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.Schedule">
            <summary>
            Gets or sets the schedule according to which jobs will be created.
            </summary>
            <remarks>
            If you do not specify this element, it is equivalent to passing the
            default schedule: that is, a single job scheduled to run
            immediately.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.JobSpecification">
            <summary>
            Gets or sets details of the jobs to be created on this schedule.
            </summary>
            <remarks>
            Updates affect only jobs that are started after the update has
            taken place. Any currently active job continues with the older
            specification.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job
            schedule as metadata.
            </summary>
            <remarks>
            If you do not specify this element, it takes the default value of
            an empty list; in effect, any existing metadata is deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError">
            <summary>
            An error encountered by the Batch service when scheduling a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulingError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.#ctor(Microsoft.Azure.Batch.Protocol.Models.ErrorCategory,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the JobSchedulingError class.
            </summary>
            <param name="category">The category of the job scheduling
            error.</param>
            <param name="code">An identifier for the job scheduling error.
            Codes are invariant and are intended to be consumed
            programmatically.</param>
            <param name="message">A message describing the job scheduling
            error, intended to be suitable for display in a user
            interface.</param>
            <param name="details">A list of additional error details related to
            the scheduling error.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Category">
            <summary>
            Gets or sets the category of the job scheduling error.
            </summary>
            <remarks>
            Possible values include: 'userError', 'serverError'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Code">
            <summary>
            Gets or sets an identifier for the job scheduling error. Codes are
            invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Message">
            <summary>
            Gets or sets a message describing the job scheduling error,
            intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Details">
            <summary>
            Gets or sets a list of additional error details related to the
            scheduling error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSpecification">
            <summary>
            Specifies details of the jobs to be created on a schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.#ctor">
            <summary>
            Initializes a new instance of the JobSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobSpecification class.
            </summary>
            <param name="poolInfo">The pool on which the Batch service runs the
            tasks of jobs created under this schedule.</param>
            <param name="priority">The priority of jobs created under this
            schedule.</param>
            <param name="displayName">The display name for jobs created under
            this schedule.</param>
            <param name="usesTaskDependencies">The flag that determines if this
            job will use tasks with dependencies.</param>
            <param name="onAllTasksComplete">The action the Batch service
            should take when all tasks in a job created under this schedule are
            in the completed state.</param>
            <param name="onTaskFailure">The action the Batch service should
            take when any task fails in a job created under this schedule. A
            task is considered to have failed if it completes with a non-zero
            exit code and has exhausted its retry count, or if it had a
            scheduling error.</param>
            <param name="constraints">The execution constraints for jobs
            created under this schedule.</param>
            <param name="jobManagerTask">The details of a Job Manager task to
            be launched when a job is started under this schedule.</param>
            <param name="jobPreparationTask">The Job Preparation task for jobs
            created under this schedule.</param>
            <param name="jobReleaseTask">The Job Release task for jobs created
            under this schedule.</param>
            <param name="commonEnvironmentSettings">A list of common
            environment variable settings. These environment variables are set
            for all tasks in jobs created under this schedule (including the
            Job Manager, Job Preparation and Job Release tasks).</param>
            <param name="metadata">A list of name-value pairs associated with
            each job created under this schedule as metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Priority">
            <summary>
            Gets or sets the priority of jobs created under this schedule.
            </summary>
            <remarks>
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. The default
            value is 0. This priority is used as the default for all jobs under
            the job schedule. You can update a job's priority after it has been
            created using by using the update job API.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.DisplayName">
            <summary>
            Gets or sets the display name for jobs created under this schedule.
            </summary>
            <remarks>
            The name need not be unique and can contain any Unicode characters
            up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.UsesTaskDependencies">
            <summary>
            Gets or sets the flag that determines if this job will use tasks
            with dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.OnAllTasksComplete">
            <summary>
            Gets or sets the action the Batch service should take when all
            tasks in a job created under this schedule are in the completed
            state.
            </summary>
            <remarks>
            Note that if a job contains no tasks, then all tasks are considered
            complete. This option is therefore most commonly used with a Job
            Manager task; if you want to use automatic job termination without
            a Job Manager, you should initially set onAllTasksComplete to
            noAction and update the job properties to set onAllTasksComplete to
            terminateJob once you have finished adding tasks. The default is
            noAction. Possible values include: 'noAction', 'terminateJob'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.OnTaskFailure">
            <summary>
            Gets or sets the action the Batch service should take when any task
            fails in a job created under this schedule. A task is considered to
            have failed if it completes with a non-zero exit code and has
            exhausted its retry count, or if it had a scheduling error.
            </summary>
            <remarks>
            The default is noAction. Possible values include: 'noAction',
            'performExitOptionsJobAction'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Constraints">
            <summary>
            Gets or sets the execution constraints for jobs created under this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobManagerTask">
            <summary>
            Gets or sets the details of a Job Manager task to be launched when
            a job is started under this schedule.
            </summary>
            <remarks>
            If the job does not specify a Job Manager task, the user must
            explicitly add tasks to the job using the Task API. If the job does
            specify a Job Manager task, the Batch service creates the Job
            Manager task when the job is created, and will try to schedule the
            Job Manager task before scheduling other tasks in the job.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task for jobs created under this
            schedule.
            </summary>
            <remarks>
            If a job has a Job Preparation task, the Batch service will run the
            Job Preparation task on a compute node before starting any tasks of
            that job on that compute node.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task for jobs created under this
            schedule.
            </summary>
            <remarks>
            The primary purpose of the Job Release task is to undo changes to
            compute nodes made by the Job Preparation task. Example activities
            include deleting local files, or shutting down services that were
            started as part of job preparation. A Job Release task cannot be
            specified without also specifying a Job Preparation task for the
            job. The Batch service runs the Job Release task on the compute
            nodes that have run the Job Preparation task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.CommonEnvironmentSettings">
            <summary>
            Gets or sets a list of common environment variable settings. These
            environment variables are set for all tasks in jobs created under
            this schedule (including the Job Manager, Job Preparation and Job
            Release tasks).
            </summary>
            <remarks>
            Individual tasks can override an environment setting specified here
            by specifying the same setting name with a different value.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.PoolInfo">
            <summary>
            Gets or sets the pool on which the Batch service runs the tasks of
            jobs created under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with each job
            created under this schedule as metadata.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobState">
            <summary>
            Defines values for JobState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobStatistics">
            <summary>
            Resource usage statistics for a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.#ctor">
            <summary>
            Initializes a new instance of the JobStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.#ctor(System.String,System.DateTime,System.DateTime,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int64,System.Int64,System.Double,System.Double,System.Int64,System.Int64,System.Int64,System.TimeSpan)">
            <summary>
            Initializes a new instance of the JobStatistics class.
            </summary>
            <param name="url">The URL of the statistics.</param>
            <param name="startTime">The start time of the time range covered by
            the statistics.</param>
            <param name="lastUpdateTime">The time at which the statistics were
            last updated. All statistics are limited to the range between
            startTime and lastUpdateTime.</param>
            <param name="userCPUTime">The total user mode CPU time (summed
            across all cores and all compute nodes) consumed by all tasks in
            the job.</param>
            <param name="kernelCPUTime">The total kernel mode CPU time (summed
            across all cores and all compute nodes) consumed by all tasks in
            the job.</param>
            <param name="wallClockTime">The total wall clock time of all tasks
            in the job.</param>
            <param name="readIOps">The total number of disk read operations
            made by all tasks in the job.</param>
            <param name="writeIOps">The total number of disk write operations
            made by all tasks in the job.</param>
            <param name="readIOGiB">The total amount of data in GiB read from
            disk by all tasks in the job.</param>
            <param name="writeIOGiB">The total amount of data in GiB written to
            disk by all tasks in the job.</param>
            <param name="numSucceededTasks">The total number of tasks
            successfully completed in the job during the given time
            range.</param>
            <param name="numFailedTasks">The total number of tasks in the job
            that failed during the given time range.</param>
            <param name="numTaskRetries">The total number of retries on all the
            tasks in the job during the given time range.</param>
            <param name="waitTime">The total wait time of all tasks in the
            job.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.Url">
            <summary>
            Gets or sets the URL of the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.UserCPUTime">
            <summary>
            Gets or sets the total user mode CPU time (summed across all cores
            and all compute nodes) consumed by all tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.KernelCPUTime">
            <summary>
            Gets or sets the total kernel mode CPU time (summed across all
            cores and all compute nodes) consumed by all tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WallClockTime">
            <summary>
            Gets or sets the total wall clock time of all tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.ReadIOps">
            <summary>
            Gets or sets the total number of disk read operations made by all
            tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WriteIOps">
            <summary>
            Gets or sets the total number of disk write operations made by all
            tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.ReadIOGiB">
            <summary>
            Gets or sets the total amount of data in GiB read from disk by all
            tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WriteIOGiB">
            <summary>
            Gets or sets the total amount of data in GiB written to disk by all
            tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.NumSucceededTasks">
            <summary>
            Gets or sets the total number of tasks successfully completed in
            the job during the given time range.
            </summary>
            <remarks>
            A task completes successfully if it returns exit code 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.NumFailedTasks">
            <summary>
            Gets or sets the total number of tasks in the job that failed
            during the given time range.
            </summary>
            <remarks>
            A task fails if it exhausts its maximum retry count without
            returning exit code 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.NumTaskRetries">
            <summary>
            Gets or sets the total number of retries on all the tasks in the
            job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WaitTime">
            <summary>
            Gets or sets the total wait time of all tasks in the job.
            </summary>
            <remarks>
            The wait time for a task is defined as the elapsed time between the
            creation of the task and the start of task execution. (If the task
            is retried due to failures, the wait time is the time to the most
            recent task execution.) This value is only reported in the account
            lifetime statistics; it is not included in the job statistics.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders">
            <summary>
            Defines headers for Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobTerminateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobTerminateHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions">
            <summary>
            Additional parameters for the Job_Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.#ctor">
            <summary>
            Initializes a new instance of the JobTerminateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobTerminateOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobTerminateParameter">
            <summary>
            Options when terminating a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateParameter.#ctor">
            <summary>
            Initializes a new instance of the JobTerminateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the JobTerminateParameter class.
            </summary>
            <param name="terminateReason">The text you want to appear as the
            job's TerminateReason. The default is 'UserTerminate'.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateParameter.TerminateReason">
            <summary>
            Gets or sets the text you want to appear as the job's
            TerminateReason. The default is 'UserTerminate'.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders">
            <summary>
            Defines headers for Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobUpdateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobUpdateHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions">
            <summary>
            Additional parameters for the Job_Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the JobUpdateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobUpdateOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter">
            <summary>
            The set of changes to be made to a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor">
            <summary>
            Initializes a new instance of the JobUpdateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete})">
            <summary>
            Initializes a new instance of the JobUpdateParameter class.
            </summary>
            <param name="poolInfo">The pool on which the Batch service runs the
            job's tasks.</param>
            <param name="priority">The priority of the job.</param>
            <param name="constraints">The execution constraints for the
            job.</param>
            <param name="metadata">A list of name-value pairs associated with
            the job as metadata.</param>
            <param name="onAllTasksComplete">The action the Batch service
            should take when all tasks in the job are in the completed
            state.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority">
            <summary>
            Gets or sets the priority of the job.
            </summary>
            <remarks>
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. If omitted, it
            is set to the default value 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
            <remarks>
            If omitted, the constraints are cleared.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo">
            <summary>
            Gets or sets the pool on which the Batch service runs the job's
            tasks.
            </summary>
            <remarks>
            You may change the pool for a job only when the job is disabled.
            The Update Job call will fail if you include the poolInfo element
            and the job is not disabled. If you specify an
            autoPoolSpecification specification in the poolInfo, only the
            keepAlive property can be updated, and then only if the auto pool
            has a poolLifetimeOption of job.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as
            metadata.
            </summary>
            <remarks>
            If omitted, it takes the default value of an empty list; in effect,
            any existing metadata is deleted.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete">
            <summary>
            Gets or sets the action the Batch service should take when all
            tasks in the job are in the completed state.
            </summary>
            <remarks>
            If omitted, the completion behavior is set to noAction. If the
            current value is terminateJob, this is an error because a job's
            completion behavior may not be changed from terminateJob to
            noAction. Possible values include: 'noAction', 'terminateJob'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.LinuxUserConfiguration">
            <summary>
            Properties used to create a user account on a Linux node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.LinuxUserConfiguration.#ctor">
            <summary>
            Initializes a new instance of the LinuxUserConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.LinuxUserConfiguration.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the LinuxUserConfiguration class.
            </summary>
            <param name="uid">The user ID of the user account.</param>
            <param name="gid">The group ID for the user account.</param>
            <param name="sshPrivateKey">The SSH private key for the user
            account.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.LinuxUserConfiguration.Uid">
            <summary>
            Gets or sets the user ID of the user account.
            </summary>
            <remarks>
            The uid and gid properties must be specified together or not at
            all. If not specified the underlying operating system picks the
            uid.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.LinuxUserConfiguration.Gid">
            <summary>
            Gets or sets the group ID for the user account.
            </summary>
            <remarks>
            The uid and gid properties must be specified together or not at
            all. If not specified the underlying operating system picks the
            gid.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.LinuxUserConfiguration.SshPrivateKey">
            <summary>
            Gets or sets the SSH private key for the user account.
            </summary>
            <remarks>
            The private key must not be password protected. The private key is
            used to automatically configure asymmetric-key based authentication
            for SSH between nodes in a Linux pool when the pool's
            enableInterNodeCommunication property is true (it is ignored if
            enableInterNodeCommunication is false). It does this by placing the
            key pair into the user's .ssh directory. If not specified,
            password-less SSH is not configured between nodes (no modification
            of the user's .ssh directory is done).
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.MetadataItem">
            <summary>
            A name-value pair associated with a Batch service resource.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to this metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.#ctor">
            <summary>
            Initializes a new instance of the MetadataItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the MetadataItem class.
            </summary>
            <param name="name">The name of the metadata item.</param>
            <param name="value">The value of the metadata item.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.Name">
            <summary>
            Gets or sets the name of the metadata item.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.Value">
            <summary>
            Gets or sets the value of the metadata item.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings">
            <summary>
            Settings which specify how to run a multi-instance task.
            </summary>
            <remarks>
            Multi-instance tasks are commonly used to support MPI tasks.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.#ctor">
            <summary>
            Initializes a new instance of the MultiInstanceSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.#ctor(System.Int32,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile})">
            <summary>
            Initializes a new instance of the MultiInstanceSettings class.
            </summary>
            <param name="numberOfInstances">The number of compute nodes
            required by the task.</param>
            <param name="coordinationCommandLine">The command line to run on
            all the compute nodes to enable them to coordinate when the primary
            runs the main task command.</param>
            <param name="commonResourceFiles">A list of files that the Batch
            service will download before running the coordination command
            line.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.NumberOfInstances">
            <summary>
            Gets or sets the number of compute nodes required by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.CoordinationCommandLine">
            <summary>
            Gets or sets the command line to run on all the compute nodes to
            enable them to coordinate when the primary runs the main task
            command.
            </summary>
            <remarks>
            A typical coordination command line launches a background service
            and verifies that the service is ready to process inter-node
            messages.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.CommonResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download
            before running the coordination command line.
            </summary>
            <remarks>
            The difference between common resource files and task resource
            files is that common resource files are downloaded for all subtasks
            including the primary, whereas task resource files are downloaded
            only for the primary.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NameValuePair">
            <summary>
            Represents a name-value pair.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.#ctor">
            <summary>
            Initializes a new instance of the NameValuePair class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the NameValuePair class.
            </summary>
            <param name="name">The name in the name-value pair.</param>
            <param name="value">The value in the name-value pair.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.Name">
            <summary>
            Gets or sets the name in the name-value pair.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.Value">
            <summary>
            Gets or sets the value in the name-value pair.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration">
            <summary>
            The network configuration for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor">
            <summary>
            Initializes a new instance of the NetworkConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NetworkConfiguration class.
            </summary>
            <param name="subnetId">The ARM resource identifier of the virtual
            network subnet which the compute nodes of the pool will join. This
            is of the form
            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId">
            <summary>
            Gets or sets the ARM resource identifier of the virtual network
            subnet which the compute nodes of the pool will join. This is of
            the form
            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
            </summary>
            <remarks>
            The virtual network must be in the same region and subscription as
            the Azure Batch account. The specified subnet should have enough
            free IP addresses to accommodate the number of nodes in the pool.
            If the subnet doesn't have enough free IP addresses, the pool will
            partially allocate compute nodes, and a resize error will occur.
            The 'MicrosoftAzureBatch' service principal must have the 'Classic
            Virtual Machine Contributor' Role-Based Access Control (RBAC) role
            for the specified VNet. The specified subnet must allow
            communication from the Azure Batch service to be able to schedule
            tasks on the compute nodes. This can be verified by checking if the
            specified VNet has any associated Network Security Groups (NSG). If
            communication to the compute nodes in the specified subnet is
            denied by an NSG, then the Batch service will set the state of the
            compute nodes to unusable. For pools created via
            virtualMachineConfiguration the Batch account must have
            poolAllocationMode userSubscription in order to use a VNet.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku">
            <summary>
            A node agent SKU supported by the Batch service.
            </summary>
            <remarks>
            The Batch node agent is a program that runs on each node in the pool,
            and provides the command-and-control interface between the node and the
            Batch service. There are different implementations of the node agent,
            known as SKUs, for different operating systems.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor">
            <summary>
            Initializes a new instance of the NodeAgentSku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType})">
            <summary>
            Initializes a new instance of the NodeAgentSku class.
            </summary>
            <param name="id">The ID of the node agent SKU.</param>
            <param name="verifiedImageReferences">The list of images verified
            to be compatible with this node agent SKU.</param>
            <param name="osType">The type of operating system (e.g. Windows or
            Linux) compatible with the node agent SKU.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id">
            <summary>
            Gets or sets the ID of the node agent SKU.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences">
            <summary>
            Gets or sets the list of images verified to be compatible with this
            node agent SKU.
            </summary>
            <remarks>
            This collection is not exhaustive (the node agent may be compatible
            with other images).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType">
            <summary>
            Gets or sets the type of operating system (e.g. Windows or Linux)
            compatible with the node agent SKU.
            </summary>
            <remarks>
            Possible values include: 'linux', 'windows'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeDisableSchedulingParameter">
            <summary>
            Options for disabling scheduling on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeDisableSchedulingParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeDisableSchedulingParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeDisableSchedulingParameter.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption})">
            <summary>
            Initializes a new instance of the NodeDisableSchedulingParameter
            class.
            </summary>
            <param name="nodeDisableSchedulingOption">What to do with currently
            running tasks when disabling task scheduling on the compute
            node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeDisableSchedulingParameter.NodeDisableSchedulingOption">
            <summary>
            Gets or sets what to do with currently running tasks when disabling
            task scheduling on the compute node.
            </summary>
            <remarks>
            The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFile">
            <summary>
            Information about a file or directory on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor">
            <summary>
            Initializes a new instance of the NodeFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileProperties)">
            <summary>
            Initializes a new instance of the NodeFile class.
            </summary>
            <param name="name">The file path.</param>
            <param name="url">The URL of the file.</param>
            <param name="isDirectory">Whether the object represents a
            directory.</param>
            <param name="properties">The file properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name">
            <summary>
            Gets or sets the file path.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url">
            <summary>
            Gets or sets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory">
            <summary>
            Gets or sets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties">
            <summary>
            Gets or sets the file properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeRebootParameter">
            <summary>
            Options for rebooting a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRebootParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeRebootParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRebootParameter.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption})">
            <summary>
            Initializes a new instance of the NodeRebootParameter class.
            </summary>
            <param name="nodeRebootOption">When to reboot the compute node and
            what to do with currently running tasks.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeRebootParameter.NodeRebootOption">
            <summary>
            Gets or sets when to reboot the compute node and what to do with
            currently running tasks.
            </summary>
            <remarks>
            The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter">
            <summary>
            Options for reimaging a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeReimageParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption})">
            <summary>
            Initializes a new instance of the NodeReimageParameter class.
            </summary>
            <param name="nodeReimageOption">When to reimage the compute node
            and what to do with currently running tasks.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.NodeReimageOption">
            <summary>
            Gets or sets when to reimage the compute node and what to do with
            currently running tasks.
            </summary>
            <remarks>
            The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter">
            <summary>
            Options for removing compute nodes from a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeRemoveParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeallocationOption})">
            <summary>
            Initializes a new instance of the NodeRemoveParameter class.
            </summary>
            <param name="nodeList">A list containing the ids of the compute
            nodes to be removed from the specified pool.</param>
            <param name="resizeTimeout">The timeout for removal of compute
            nodes to the pool.</param>
            <param name="nodeDeallocationOption">Determines what to do with a
            node and its running task(s) after it has been selected for
            deallocation.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.NodeList">
            <summary>
            Gets or sets a list containing the ids of the compute nodes to be
            removed from the specified pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.ResizeTimeout">
            <summary>
            Gets or sets the timeout for removal of compute nodes to the pool.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum value is 5 minutes. If
            you specify a value less than 5 minutes, the Batch service returns
            an error; if you are calling the REST API directly, the HTTP status
            code is 400 (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.NodeDeallocationOption">
            <summary>
            Gets or sets determines what to do with a node and its running
            task(s) after it has been selected for deallocation.
            </summary>
            <remarks>
            The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter">
            <summary>
            The set of changes to be made to a user account on a node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeUpdateUserParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.#ctor(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the NodeUpdateUserParameter class.
            </summary>
            <param name="password">The password of the account.</param>
            <param name="expiryTime">The time at which the account should
            expire.</param>
            <param name="sshPublicKey">The SSH public key that can be used for
            remote login to the compute node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.Password">
            <summary>
            Gets or sets the password of the account.
            </summary>
            <remarks>
            The password is required for Windows nodes (those created with
            'cloudServiceConfiguration', or created with
            'virtualMachineConfiguration' using a Windows image reference). For
            Linux compute nodes, the password can optionally be specified along
            with the sshPublicKey property. If omitted, any existing password
            is removed.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.ExpiryTime">
            <summary>
            Gets or sets the time at which the account should expire.
            </summary>
            <remarks>
            If omitted, the default is 1 day from the current time. For Linux
            compute nodes, the expiryTime has a precision up to a day.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.SshPublicKey">
            <summary>
            Gets or sets the SSH public key that can be used for remote login
            to the compute node.
            </summary>
            <remarks>
            The public key should be compatible with OpenSSH encoding and
            should be base 64 encoded. This property can be specified only for
            Linux nodes. If this is specified for a Windows node, then the
            Batch service rejects the request; if you are calling the REST API
            directly, the HTTP status code is 400 (Bad Request). If omitted,
            any existing SSH public key is removed.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete">
            <summary>
            Defines values for OnAllTasksComplete.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure">
            <summary>
            Defines values for OnTaskFailure.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OSDisk">
            <summary>
            A reference to an OS disk image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor">
            <summary>
            Initializes a new instance of the OSDisk class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType})">
            <summary>
            Initializes a new instance of the OSDisk class.
            </summary>
            <param name="imageUris">The collection of Virtual Hard Disk (VHD)
            URIs.</param>
            <param name="caching">The type of caching to enable for the OS
            disk.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris">
            <summary>
            Gets or sets the collection of Virtual Hard Disk (VHD) URIs.
            </summary>
            <remarks>
            All the VHDs must be identical and must reside in an Azure Storage
            account within the same subscription and same region as the Batch
            account. For best performance, it is recommended that each VHD
            resides in a separate Azure Storage account. Each VHD can serve
            upto 20 Windows compute nodes or 40 Linux compute nodes. You must
            supply enough VHD URIs to satisfy the 'targetDedicated' property of
            the pool. If you do not supply enough VHD URIs, the pool will
            partially allocate compute nodes, and a resize error will occur.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching">
            <summary>
            Gets or sets the type of caching to enable for the OS disk.
            </summary>
            <remarks>
            none - The caching mode for the disk is not enabled. readOnly - The
            caching mode for the disk is read only. readWrite - The caching
            mode for the disk is read and write. The default value for caching
            is none. For information about the caching options see:
            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
            Possible values include: 'none', 'readOnly', 'readWrite'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OSType">
            <summary>
            Defines values for OSType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OutputFile">
            <summary>
            A specification for uploading files from an Azure Batch node to another
            location after the Batch service has finished executing the task
            process.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFile.#ctor">
            <summary>
            Initializes a new instance of the OutputFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFile.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.OutputFileDestination,Microsoft.Azure.Batch.Protocol.Models.OutputFileUploadOptions)">
            <summary>
            Initializes a new instance of the OutputFile class.
            </summary>
            <param name="filePattern">A pattern indicating which file(s) to
            upload.</param>
            <param name="destination">The destination for the output
            file(s).</param>
            <param name="uploadOptions">Additional options for the upload
            operation, including under what conditions to perform the
            upload.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OutputFile.FilePattern">
            <summary>
            Gets or sets a pattern indicating which file(s) to upload.
            </summary>
            <remarks>
            Both relative and absolute paths are supported. Relative paths are
            relative to the task working directory. For wildcards, use * to
            match any character and ** to match any directory. For example,
            **\*.txt matches any file ending in .txt in the task working
            directory or any subdirectory. Note that \ and / are treated
            interchangeably and mapped to the correct directory separator on
            the compute node operating system.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OutputFile.Destination">
            <summary>
            Gets or sets the destination for the output file(s).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OutputFile.UploadOptions">
            <summary>
            Gets or sets additional options for the upload operation, including
            under what conditions to perform the upload.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFile.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OutputFileBlobContainerDestination">
            <summary>
            Specifies a file upload destination within an Azure blob storage
            container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileBlobContainerDestination.#ctor">
            <summary>
            Initializes a new instance of the
            OutputFileBlobContainerDestination class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileBlobContainerDestination.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            OutputFileBlobContainerDestination class.
            </summary>
            <param name="containerUrl">The URL of the container within Azure
            Blob Storage to which to upload the file(s).</param>
            <param name="path">The destination blob or virtual directory within
            the Azure Storage container.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OutputFileBlobContainerDestination.Path">
            <summary>
            Gets or sets the destination blob or virtual directory within the
            Azure Storage container.
            </summary>
            <remarks>
            If filePattern refers to a specific file (i.e. contains no
            wildcards), then path is the name of the blob to which to upload
            that file. If filePattern contains one or more wildcards (and
            therefore may match multiple files), then path is the name of the
            blob virtual directory (which is prepended to each blob name) to
            which to upload the file(s). If omitted, file(s) are uploaded to
            the root of the container with a blob name matching their file
            name.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OutputFileBlobContainerDestination.ContainerUrl">
            <summary>
            Gets or sets the URL of the container within Azure Blob Storage to
            which to upload the file(s).
            </summary>
            <remarks>
            The URL must include a Shared Access Signature (SAS) granting write
            permissions to the container.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileBlobContainerDestination.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OutputFileDestination">
            <summary>
            The destination to which a file should be uploaded.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileDestination.#ctor">
            <summary>
            Initializes a new instance of the OutputFileDestination class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileDestination.#ctor(Microsoft.Azure.Batch.Protocol.Models.OutputFileBlobContainerDestination)">
            <summary>
            Initializes a new instance of the OutputFileDestination class.
            </summary>
            <param name="container">A location in Azure blob storage to which
            files are uploaded.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OutputFileDestination.Container">
            <summary>
            Gets or sets a location in Azure blob storage to which files are
            uploaded.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileDestination.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OutputFileUploadCondition">
            <summary>
            Defines values for OutputFileUploadCondition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OutputFileUploadOptions">
            <summary>
            Details about an output file upload operation, including under what
            conditions to perform the upload.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileUploadOptions.#ctor">
            <summary>
            Initializes a new instance of the OutputFileUploadOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileUploadOptions.#ctor(Microsoft.Azure.Batch.Protocol.Models.OutputFileUploadCondition)">
            <summary>
            Initializes a new instance of the OutputFileUploadOptions class.
            </summary>
            <param name="uploadCondition">The conditions under which the task
            output file or set of files should be uploaded.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.OutputFileUploadOptions.UploadCondition">
            <summary>
            Gets or sets the conditions under which the task output file or set
            of files should be uploaded.
            </summary>
            <remarks>
            The default is taskCompletion. Possible values include:
            'taskSuccess', 'taskFailure', 'taskCompletion'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.OutputFileUploadOptions.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolAddHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions">
            <summary>
            Additional parameters for the Pool_Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolAddOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter">
            <summary>
            A pool in the Azure Batch service to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration,Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.UserAccount},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the PoolAddParameter class.
            </summary>
            <param name="id">A string that uniquely identifies the pool within
            the account.</param>
            <param name="vmSize">The size of virtual machines in the pool. All
            virtual machines in a pool are the same size.</param>
            <param name="displayName">The display name for the pool.</param>
            <param name="cloudServiceConfiguration">The cloud service
            configuration for the pool.</param>
            <param name="virtualMachineConfiguration">The virtual machine
            configuration for the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute
            nodes to the pool.</param>
            <param name="targetDedicatedNodes">The desired number of dedicated
            compute nodes in the pool.</param>
            <param name="targetLowPriorityNodes">The desired number of
            low-priority compute nodes in the pool.</param>
            <param name="enableAutoScale">Whether the pool size should
            automatically adjust over time.</param>
            <param name="autoScaleFormula">A formula for the desired number of
            compute nodes in the pool.</param>
            <param name="autoScaleEvaluationInterval">The time interval at
            which to automatically adjust the pool size according to the
            autoscale formula.</param>
            <param name="enableInterNodeCommunication">Whether the pool permits
            direct communication between nodes.</param>
            <param name="networkConfiguration">The network configuration for
            the pool.</param>
            <param name="startTask">A task specified to run on each compute
            node as it joins the pool.</param>
            <param name="certificateReferences">The list of certificates to be
            installed on each compute node in the pool.</param>
            <param name="applicationPackageReferences">The list of application
            packages to be installed on each compute node in the pool.</param>
            <param name="applicationLicenses">The list of application licenses
            the Batch service will make available on each compute node in the
            pool.</param>
            <param name="maxTasksPerNode">The maximum number of tasks that can
            run concurrently on a single compute node in the pool.</param>
            <param name="taskSchedulingPolicy">How the Batch service
            distributes tasks between compute nodes in the pool.</param>
            <param name="userAccounts">The list of user accounts to be created
            on each node in the pool.</param>
            <param name="metadata">A list of name-value pairs associated with
            the pool as metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.Id">
            <summary>
            Gets or sets a string that uniquely identifies the pool within the
            account.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. The ID is case-preserving and case-insensitive (that
            is, you may not have two pool IDs within an account that differ
            only by case).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
            <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.VmSize">
            <summary>
            Gets or sets the size of virtual machines in the pool. All virtual
            machines in a pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines for Cloud
            Services pools (pools created with cloudServiceConfiguration), see
            Sizes for Cloud Services
            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
            Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2
            and A2V2. For information about available VM sizes for pools using
            images from the Virtual Machines Marketplace (pools created with
            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
            or Sizes for Virtual Machines (Windows)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.CloudServiceConfiguration">
            <summary>
            Gets or sets the cloud service configuration for the pool.
            </summary>
            <remarks>
            This property and virtualMachineConfiguration are mutually
            exclusive and one of the properties must be specified. This
            property cannot be specified if the Batch account was created with
            its poolAllocationMode property set to 'UserSubscription'.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.VirtualMachineConfiguration">
            <summary>
            Gets or sets the virtual machine configuration for the pool.
            </summary>
            <remarks>
            This property and cloudServiceConfiguration are mutually exclusive
            and one of the properties must be specified.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool.
            </summary>
            <remarks>
            This timeout applies only to manual scaling; it has no effect when
            enableAutoScale is set to true. The default value is 15 minutes.
            The minimum value is 5 minutes. If you specify a value less than 5
            minutes, the Batch service returns an error; if you are calling the
            REST API directly, the HTTP status code is 400 (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.TargetDedicatedNodes">
            <summary>
            Gets or sets the desired number of dedicated compute nodes in the
            pool.
            </summary>
            <remarks>
            This property must not be specified if enableAutoScale is set to
            true. If enableAutoScale is set to false, then you must set either
            targetDedicatedNodes, targetLowPriorityNodes, or both.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.TargetLowPriorityNodes">
            <summary>
            Gets or sets the desired number of low-priority compute nodes in
            the pool.
            </summary>
            <remarks>
            This property must not be specified if enableAutoScale is set to
            true. If enableAutoScale is set to false, then you must set either
            targetDedicatedNodes, targetLowPriorityNodes, or both.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.EnableAutoScale">
            <summary>
            Gets or sets whether the pool size should automatically adjust over
            time.
            </summary>
            <remarks>
            If false, at least one of targetDedicateNodes and
            targetLowPriorityNodes must be specified. If true, the
            autoScaleFormula property is required and the pool automatically
            resizes according to the formula. The default value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in
            the pool.
            </summary>
            <remarks>
            This property must not be specified if enableAutoScale is set to
            false. It is required if enableAutoScale is set to true. The
            formula is checked for validity before the pool is created. If the
            formula is not valid, the Batch service rejects the request with
            detailed error information. For more information about specifying
            this formula, see 'Automatically scale compute nodes in an Azure
            Batch pool'
            (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets the time interval at which to automatically adjust the
            pool size according to the autoscale formula.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum and maximum value are
            5 minutes and 168 hours respectively. If you specify a value less
            than 5 minutes or greater than 168 hours, the Batch service returns
            an error; if you are calling the REST API directly, the HTTP status
            code is 400 (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.EnableInterNodeCommunication">
            <summary>
            Gets or sets whether the pool permits direct communication between
            nodes.
            </summary>
            <remarks>
            Enabling inter-node communication limits the maximum size of the
            pool due to deployment restrictions on the nodes of the pool. This
            may result in the pool not reaching its desired size. The default
            value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.NetworkConfiguration">
            <summary>
            Gets or sets the network configuration for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.StartTask">
            <summary>
            Gets or sets a task specified to run on each compute node as it
            joins the pool.
            </summary>
            <remarks>
            The task runs when the node is added to the pool or when the node
            is restarted.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.CertificateReferences">
            <summary>
            Gets or sets the list of certificates to be installed on each
            compute node in the pool.
            </summary>
            <remarks>
            For Windows compute nodes, the Batch service installs the
            certificates to the specified certificate store and location. For
            Linux compute nodes, the certificates are stored in a directory
            inside the task working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this
            location. For certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and certificates are placed in that
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.ApplicationPackageReferences">
            <summary>
            Gets or sets the list of application packages to be installed on
            each compute node in the pool.
            </summary>
            <remarks>
            This property is currently not supported on pools created using the
            virtualMachineConfiguration (IaaS) property.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.ApplicationLicenses">
            <summary>
            Gets or sets the list of application licenses the Batch service
            will make available on each compute node in the pool.
            </summary>
            <remarks>
            The list of application licenses must be a subset of available
            Batch service application licenses. If a license is requested which
            is not supported, pool creation will fail.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.MaxTasksPerNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently
            on a single compute node in the pool.
            </summary>
            <remarks>
            The default value is 1. The maximum value of this setting depends
            on the size of the compute nodes in the pool (the vmSize setting).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.TaskSchedulingPolicy">
            <summary>
            Gets or sets how the Batch service distributes tasks between
            compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.UserAccounts">
            <summary>
            Gets or sets the list of user accounts to be created on each node
            in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as
            metadata.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the PoolDeleteHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions">
            <summary>
            Additional parameters for the Pool_Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolDeleteOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders">
            <summary>
            Defines headers for DisableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions">
            <summary>
            Additional parameters for the Pool_DisableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders">
            <summary>
            Defines headers for EnableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions">
            <summary>
            Additional parameters for the Pool_EnableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter">
            <summary>
            Options for enabling automatic scaling on a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter.#ctor(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleParameter
            class.
            </summary>
            <param name="autoScaleFormula">The formula for the desired number
            of compute nodes in the pool.</param>
            <param name="autoScaleEvaluationInterval">The time interval at
            which to automatically adjust the pool size according to the
            autoscale formula.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter.AutoScaleFormula">
            <summary>
            Gets or sets the formula for the desired number of compute nodes in
            the pool.
            </summary>
            <remarks>
            The formula is checked for validity before it is applied to the
            pool. If the formula is not valid, the Batch service rejects the
            request with detailed error information. For more information about
            specifying this formula, see Automatically scale compute nodes in
            an Azure Batch pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets the time interval at which to automatically adjust the
            pool size according to the autoscale formula.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum and maximum value are
            5 minutes and 168 hours respectively. If you specify a value less
            than 5 minutes or greater than 168 hours, the Batch service rejects
            the request with an invalid property value error; if you are
            calling the REST API directly, the HTTP status code is 400 (Bad
            Request). If you specify a new interval, then the existing
            autoscale evaluation schedule will be stopped and a new autoscale
            evaluation schedule will be started, with its starting time being
            the time when this request was issued.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders">
            <summary>
            Defines headers for EvaluateAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions">
            <summary>
            Additional parameters for the Pool_EvaluateAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter">
            <summary>
            Options for evaluating an automatic scaling formula on a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleParameter
            class.
            </summary>
            <param name="autoScaleFormula">The formula for the desired number
            of compute nodes in the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter.AutoScaleFormula">
            <summary>
            Gets or sets the formula for the desired number of compute nodes in
            the pool.
            </summary>
            <remarks>
            The formula is validated and its results calculated, but it is not
            applied to the pool. To apply the formula to the pool, 'Enable
            automatic scaling on a pool'. For more information about specifying
            this formula, see Automatically scale compute nodes in an Azure
            Batch pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders">
            <summary>
            Defines headers for Exists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolExistsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolExistsHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions">
            <summary>
            Additional parameters for the Pool_Exists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolExistsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolExistsOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsHeaders">
            <summary>
            Defines headers for GetAllLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            PoolGetAllLifetimeStatisticsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            PoolGetAllLifetimeStatisticsHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions">
            <summary>
            Additional parameters for the Pool_GetAllLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions.#ctor">
            <summary>
            Initializes a new instance of the
            PoolGetAllLifetimeStatisticsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            PoolGetAllLifetimeStatisticsOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolGetHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions">
            <summary>
            Additional parameters for the Pool_Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolGetOptions class.
            </summary>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolInformation">
            <summary>
            Specifies how a job should be assigned to a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.#ctor">
            <summary>
            Initializes a new instance of the PoolInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification)">
            <summary>
            Initializes a new instance of the PoolInformation class.
            </summary>
            <param name="poolId">The ID of an existing pool. All the tasks of
            the job will run on the specified pool.</param>
            <param name="autoPoolSpecification">Characteristics for a temporary
            'auto pool'. The Batch service will create this auto pool when the
            job is submitted.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.PoolId">
            <summary>
            Gets or sets the ID of an existing pool. All the tasks of the job
            will run on the specified pool.
            </summary>
            <remarks>
            You must ensure that the pool referenced by this property exists.
            If the pool does not exist at the time the Batch service tries to
            schedule a job, no tasks for the job will run until you create a
            pool with that id. Note that the Batch service will not reject the
            job request; it will simply not run tasks until the pool exists.
            You must specify either the pool ID or the auto pool specification,
            but not both.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.AutoPoolSpecification">
            <summary>
            Gets or sets characteristics for a temporary 'auto pool'. The Batch
            service will create this auto pool when the job is submitted.
            </summary>
            <remarks>
            If auto pool creation fails, the Batch service moves the job to a
            completed state, and the pool creation error is set in the job's
            scheduling error property. The Batch service manages the lifetime
            (both creation and, unless keepAlive is specified, deletion) of the
            auto pool. Any user actions that affect the lifetime of the auto
            pool while the job is active will result in unexpected behavior.
            You must specify either the pool ID or the auto pool specification,
            but not both.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolLifetimeOption">
            <summary>
            Defines values for PoolLifetimeOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions">
            <summary>
            Additional parameters for the Pool_List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListOptions class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 pools can be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 pools can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsHeaders">
            <summary>
            Defines headers for ListUsageMetrics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolListUsageMetricsHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListUsageMetricsHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions">
            <summary>
            Additional parameters for the ListUsageMetricsNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolListUsageMetricsNextOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListUsageMetricsNextOptions
            class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions">
            <summary>
            Additional parameters for the Pool_ListUsageMetrics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolListUsageMetricsOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListUsageMetricsOptions
            class.
            </summary>
            <param name="startTime">The earliest time from which to include
            metrics. This must be at least two and a half hours before the
            current time. If not specified this defaults to the start time of
            the last aggregation interval currently available.</param>
            <param name="endTime">The latest time from which to include
            metrics. This must be at least two hours before the current time.
            If not specified this defaults to the end time of the last
            aggregation interval currently available.</param>
            <param name="filter">An OData $filter clause. If this is not
            specified the response includes all pools that existed in the
            account in the time range of the returned aggregation
            intervals.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 results will be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.StartTime">
            <summary>
            Gets or sets the earliest time from which to include metrics. This
            must be at least two and a half hours before the current time. If
            not specified this defaults to the start time of the last
            aggregation interval currently available.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.EndTime">
            <summary>
            Gets or sets the latest time from which to include metrics. This
            must be at least two hours before the current time. If not
            specified this defaults to the end time of the last aggregation
            interval currently available.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause. If this is not specified the
            response includes all pools that existed in the account in the time
            range of the returned aggregation intervals.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 results will be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders">
            <summary>
            Defines headers for Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolPatchHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolPatchHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions">
            <summary>
            Additional parameters for the Pool_Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolPatchOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolPatchOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter">
            <summary>
            The set of changes to be made to a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolPatchParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the PoolPatchParameter class.
            </summary>
            <param name="startTask">A task to run on each compute node as it
            joins the pool. The task runs when the node is added to the pool or
            when the node is restarted.</param>
            <param name="certificateReferences">A list of certificates to be
            installed on each compute node in the pool.</param>
            <param name="applicationPackageReferences">A list of application
            packages to be installed on each compute node in the pool.</param>
            <param name="metadata">A list of name-value pairs associated with
            the pool as metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the
            pool. The task runs when the node is added to the pool or when the
            node is restarted.
            </summary>
            <remarks>
            If omitted, any existing start task is left unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute
            node in the pool.
            </summary>
            <remarks>
            If omitted, any existing certificate references are left unchanged.
            For Windows compute nodes, the Batch service installs the
            certificates to the specified certificate store and location. For
            Linux compute nodes, the certificates are stored in a directory
            inside the task working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this
            location. For certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and certificates are placed in that
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages to be installed on each
            compute node in the pool.
            </summary>
            <remarks>
            Changes to application package references affect all new compute
            nodes joining the pool, but do not affect compute nodes that are
            already in the pool until they are rebooted or reimaged. If this
            element is present, it replaces any existing application package
            references. If you specify an empty collection, then all
            application package references are removed from the pool. If
            omitted, any existing application package references are left
            unchanged.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as
            metadata.
            </summary>
            <remarks>
            If this element is present, it replaces any existing metadata
            configured on the pool. If you specify an empty collection, any
            metadata is removed from the pool. If omitted, any existing
            metadata is left unchanged.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders">
            <summary>
            Defines headers for RemoveNodes operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolRemoveNodesHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolRemoveNodesHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions">
            <summary>
            Additional parameters for the Pool_RemoveNodes operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolRemoveNodesOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolRemoveNodesOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders">
            <summary>
            Defines headers for Resize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolResizeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolResizeHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions">
            <summary>
            Additional parameters for the Pool_Resize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolResizeOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolResizeOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter">
            <summary>
            Options for changing the size of a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolResizeParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeallocationOption})">
            <summary>
            Initializes a new instance of the PoolResizeParameter class.
            </summary>
            <param name="targetDedicatedNodes">The desired number of dedicated
            compute nodes in the pool.</param>
            <param name="targetLowPriorityNodes">The desired number of
            low-priority compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute
            nodes to the pool or removal of compute nodes from the
            pool.</param>
            <param name="nodeDeallocationOption">Determines what to do with a
            node and its running task(s) if the pool size is
            decreasing.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.TargetDedicatedNodes">
            <summary>
            Gets or sets the desired number of dedicated compute nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.TargetLowPriorityNodes">
            <summary>
            Gets or sets the desired number of low-priority compute nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool or removal of compute nodes from the pool.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum value is 5 minutes. If
            you specify a value less than 5 minutes, the Batch service returns
            an error; if you are calling the REST API directly, the HTTP status
            code is 400 (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.NodeDeallocationOption">
            <summary>
            Gets or sets determines what to do with a node and its running
            task(s) if the pool size is decreasing.
            </summary>
            <remarks>
            The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification">
            <summary>
            Specification for creating a new pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the PoolSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.#ctor(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration,Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.UserAccount},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the PoolSpecification class.
            </summary>
            <param name="vmSize">The size of the virtual machines in the pool.
            All virtual machines in a pool are the same size.</param>
            <param name="displayName">The display name for the pool.</param>
            <param name="cloudServiceConfiguration">The cloud service
            configuration for the pool.</param>
            <param name="virtualMachineConfiguration">The virtual machine
            configuration for the pool.</param>
            <param name="maxTasksPerNode">The maximum number of tasks that can
            run concurrently on a single compute node in the pool.</param>
            <param name="taskSchedulingPolicy">How tasks are distributed among
            compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute
            nodes to the pool.</param>
            <param name="targetDedicatedNodes">The desired number of dedicated
            compute nodes in the pool.</param>
            <param name="targetLowPriorityNodes">The desired number of
            low-priority compute nodes in the pool.</param>
            <param name="enableAutoScale">Whether the pool size should
            automatically adjust over time.</param>
            <param name="autoScaleFormula">The formula for the desired number
            of compute nodes in the pool.</param>
            <param name="autoScaleEvaluationInterval">The time interval at
            which to automatically adjust the pool size according to the
            autoscale formula.</param>
            <param name="enableInterNodeCommunication">Whether the pool permits
            direct communication between nodes.</param>
            <param name="networkConfiguration">The network configuration for
            the pool.</param>
            <param name="startTask">A task to run on each compute node as it
            joins the pool. The task runs when the node is added to the pool or
            when the node is restarted.</param>
            <param name="certificateReferences">A list of certificates to be
            installed on each compute node in the pool.</param>
            <param name="applicationPackageReferences">The list of application
            packages to be installed on each compute node in the pool.</param>
            <param name="applicationLicenses">The list of application licenses
            the Batch service will make available on each compute node in the
            pool.</param>
            <param name="userAccounts">The list of user accounts to be created
            on each node in the pool.</param>
            <param name="metadata">A list of name-value pairs associated with
            the pool as metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
            <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.VmSize">
            <summary>
            Gets or sets the size of the virtual machines in the pool. All
            virtual machines in a pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines for Cloud
            Services pools (pools created with cloudServiceConfiguration), see
            Sizes for Cloud Services
            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
            Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2
            and A2V2. For information about available VM sizes for pools using
            images from the Virtual Machines Marketplace (pools created with
            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
            or Sizes for Virtual Machines (Windows)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.CloudServiceConfiguration">
            <summary>
            Gets or sets the cloud service configuration for the pool.
            </summary>
            <remarks>
            This property must be specified if the pool needs to be created
            with Azure PaaS VMs. This property and virtualMachineConfiguration
            are mutually exclusive and one of the properties must be specified.
            If neither is specified then the Batch service returns an error; if
            you are calling the REST API directly, the HTTP status code is 400
            (Bad Request). This property cannot be specified if the Batch
            account was created with its poolAllocationMode property set to
            'UserSubscription'.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.VirtualMachineConfiguration">
            <summary>
            Gets or sets the virtual machine configuration for the pool.
            </summary>
            <remarks>
            This property must be specified if the pool needs to be created
            with Azure IaaS VMs. This property and cloudServiceConfiguration
            are mutually exclusive and one of the properties must be specified.
            If neither is specified then the Batch service returns an error; if
            you are calling the REST API directly, the HTTP status code is 400
            (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.MaxTasksPerNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently
            on a single compute node in the pool.
            </summary>
            <remarks>
            The default value is 1. The maximum value of this setting depends
            on the size of the compute nodes in the pool (the vmSize setting).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed among compute nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool.
            </summary>
            <remarks>
            This timeout applies only to manual scaling; it has no effect when
            enableAutoScale is set to true. The default value is 15 minutes.
            The minimum value is 5 minutes. If you specify a value less than 5
            minutes, the Batch service rejects the request with an error; if
            you are calling the REST API directly, the HTTP status code is 400
            (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.TargetDedicatedNodes">
            <summary>
            Gets or sets the desired number of dedicated compute nodes in the
            pool.
            </summary>
            <remarks>
            This property must not be specified if enableAutoScale is set to
            true. If enableAutoScale is set to false, then you must set either
            targetDedicatedNodes, targetLowPriorityNodes, or both.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.TargetLowPriorityNodes">
            <summary>
            Gets or sets the desired number of low-priority compute nodes in
            the pool.
            </summary>
            <remarks>
            This property must not be specified if enableAutoScale is set to
            true. If enableAutoScale is set to false, then you must set either
            targetDedicatedNodes, targetLowPriorityNodes, or both.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.EnableAutoScale">
            <summary>
            Gets or sets whether the pool size should automatically adjust over
            time.
            </summary>
            <remarks>
            If false, at least one of targetDedicateNodes and
            targetLowPriorityNodes must be specified. If true, the
            autoScaleFormula element is required. The pool automatically
            resizes according to the formula. The default value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.AutoScaleFormula">
            <summary>
            Gets or sets the formula for the desired number of compute nodes in
            the pool.
            </summary>
            <remarks>
            This property must not be specified if enableAutoScale is set to
            false. It is required if enableAutoScale is set to true. The
            formula is checked for validity before the pool is created. If the
            formula is not valid, the Batch service rejects the request with
            detailed error information.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets the time interval at which to automatically adjust the
            pool size according to the autoscale formula.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum and maximum value are
            5 minutes and 168 hours respectively. If you specify a value less
            than 5 minutes or greater than 168 hours, the Batch service rejects
            the request with an invalid property value error; if you are
            calling the REST API directly, the HTTP status code is 400 (Bad
            Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.EnableInterNodeCommunication">
            <summary>
            Gets or sets whether the pool permits direct communication between
            nodes.
            </summary>
            <remarks>
            Enabling inter-node communication limits the maximum size of the
            pool due to deployment restrictions on the nodes of the pool. This
            may result in the pool not reaching its desired size. The default
            value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.NetworkConfiguration">
            <summary>
            Gets or sets the network configuration for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the
            pool. The task runs when the node is added to the pool or when the
            node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute
            node in the pool.
            </summary>
            <remarks>
            For Windows compute nodes, the Batch service installs the
            certificates to the specified certificate store and location. For
            Linux compute nodes, the certificates are stored in a directory
            inside the task working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this
            location. For certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and certificates are placed in that
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.ApplicationPackageReferences">
            <summary>
            Gets or sets the list of application packages to be installed on
            each compute node in the pool.
            </summary>
            <remarks>
            This property is currently not supported on auto pools created with
            the virtualMachineConfiguration (IaaS) property.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.ApplicationLicenses">
            <summary>
            Gets or sets the list of application licenses the Batch service
            will make available on each compute node in the pool.
            </summary>
            <remarks>
            The list of application licenses must be a subset of available
            Batch service application licenses. If a license is requested which
            is not supported, pool creation will fail.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.UserAccounts">
            <summary>
            Gets or sets the list of user accounts to be created on each node
            in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as
            metadata.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolState">
            <summary>
            Defines values for PoolState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics">
            <summary>
            Contains utilization and resource usage statistics for the lifetime of
            a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.#ctor">
            <summary>
            Initializes a new instance of the PoolStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.#ctor(System.String,System.DateTime,System.DateTime,Microsoft.Azure.Batch.Protocol.Models.UsageStatistics,Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics)">
            <summary>
            Initializes a new instance of the PoolStatistics class.
            </summary>
            <param name="url">The URL for the statistics.</param>
            <param name="startTime">The start time of the time range covered by
            the statistics.</param>
            <param name="lastUpdateTime">The time at which the statistics were
            last updated. All statistics are limited to the range between
            startTime and lastUpdateTime.</param>
            <param name="usageStats">Statistics related to pool usage, such as
            the amount of core-time used.</param>
            <param name="resourceStats">Statistics related to resource
            consumption by compute nodes in the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.Url">
            <summary>
            Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.UsageStats">
            <summary>
            Gets or sets statistics related to pool usage, such as the amount
            of core-time used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.ResourceStats">
            <summary>
            Gets or sets statistics related to resource consumption by compute
            nodes in the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders">
            <summary>
            Defines headers for StopResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolStopResizeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolStopResizeHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions">
            <summary>
            Additional parameters for the Pool_StopResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolStopResizeOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolStopResizeOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders">
            <summary>
            Defines headers for UpdateProperties operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesHeaders
            class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions">
            <summary>
            Additional parameters for the Pool_UpdateProperties operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesOptions
            class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter">
            <summary>
            The set of changes to be made to a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.StartTask)">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesParameter
            class.
            </summary>
            <param name="certificateReferences">A list of certificates to be
            installed on each compute node in the pool.</param>
            <param name="applicationPackageReferences">A list of application
            packages to be installed on each compute node in the pool.</param>
            <param name="metadata">A list of name-value pairs associated with
            the pool as metadata.</param>
            <param name="startTask">A task to run on each compute node as it
            joins the pool. The task runs when the node is added to the pool or
            when the node is restarted.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the
            pool. The task runs when the node is added to the pool or when the
            node is restarted.
            </summary>
            <remarks>
            If this element is present, it overwrites any existing start task.
            If omitted, any existing start task is removed from the pool.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute
            node in the pool.
            </summary>
            <remarks>
            If you specify an empty collection, any existing certificate
            references are removed from the pool. For Windows compute nodes,
            the Batch service installs the certificates to the specified
            certificate store and location. For Linux compute nodes, the
            certificates are stored in a directory inside the task working
            directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
            supplied to the task to query for this location. For certificates
            with visibility of 'remoteUser', a 'certs' directory is created in
            the user's home directory (e.g., /home/{user-name}/certs) and
            certificates are placed in that directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages to be installed on each
            compute node in the pool.
            </summary>
            <remarks>
            Changes to application package references affect all new compute
            nodes joining the pool, but do not affect compute nodes that are
            already in the pool until they are rebooted or reimaged. The list
            replaces any existing application package references. If omitted,
            or if you specify an empty collection, any existing application
            packages references are removed from the pool.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as
            metadata.
            </summary>
            <remarks>
            This list replaces any existing metadata configured on the pool. If
            omitted, or if you specify an empty collection, any existing
            metadata is removed from the pool.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders">
            <summary>
            Defines headers for UpgradeOS operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolUpgradeOSHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolUpgradeOSHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions">
            <summary>
            Additional parameters for the Pool_UpgradeOS operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolUpgradeOSOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolUpgradeOSOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter">
            <summary>
            Options for upgrading the operating system of compute nodes in a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolUpgradeOSParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolUpgradeOSParameter class.
            </summary>
            <param name="targetOSVersion">The Azure Guest OS version to be
            installed on the virtual machines in the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter.TargetOSVersion">
            <summary>
            Gets or sets the Azure Guest OS version to be installed on the
            virtual machines in the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics">
            <summary>
            Usage metrics for a pool across an aggregation interval.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor">
            <summary>
            Initializes a new instance of the PoolUsageMetrics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor(System.String,System.DateTime,System.DateTime,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the PoolUsageMetrics class.
            </summary>
            <param name="poolId">The ID of the pool whose metrics are
            aggregated in this entry.</param>
            <param name="startTime">The start time of the aggregation interval
            covered by this entry.</param>
            <param name="endTime">The end time of the aggregation interval
            covered by this entry.</param>
            <param name="vmSize">The size of virtual machines in the pool. All
            VMs in a pool are the same size.</param>
            <param name="totalCoreHours">The total core hours used in the pool
            during this aggregation interval.</param>
            <param name="dataIngressGiB">The cross data center network ingress
            to the pool during this interval, in GiB.</param>
            <param name="dataEgressGiB">The cross data center network egress
            from the pool during this interval, in GiB.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId">
            <summary>
            Gets or sets the ID of the pool whose metrics are aggregated in
            this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime">
            <summary>
            Gets or sets the start time of the aggregation interval covered by
            this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime">
            <summary>
            Gets or sets the end time of the aggregation interval covered by
            this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize">
            <summary>
            Gets or sets the size of virtual machines in the pool. All VMs in a
            pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines for Cloud
            Services pools (pools created with cloudServiceConfiguration), see
            Sizes for Cloud Services
            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
            Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2
            and A2V2. For information about available VM sizes for pools using
            images from the Virtual Machines Marketplace (pools created with
            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
            or Sizes for Virtual Machines (Windows)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours">
            <summary>
            Gets or sets the total core hours used in the pool during this
            aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB">
            <summary>
            Gets or sets the cross data center network ingress to the pool
            during this interval, in GiB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB">
            <summary>
            Gets or sets the cross data center network egress from the pool
            during this interval, in GiB.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.RecentJob">
            <summary>
            Information about the most recent job to run under the job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.RecentJob.#ctor">
            <summary>
            Initializes a new instance of the RecentJob class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.RecentJob.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RecentJob class.
            </summary>
            <param name="id">The ID of the job.</param>
            <param name="url">The URL of the job.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.RecentJob.Id">
            <summary>
            Gets or sets the ID of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.RecentJob.Url">
            <summary>
            Gets or sets the URL of the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResizeError">
            <summary>
            An error that occurred when resizing a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResizeError.#ctor">
            <summary>
            Initializes a new instance of the ResizeError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResizeError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the ResizeError class.
            </summary>
            <param name="code">An identifier for the pool resize error. Codes
            are invariant and are intended to be consumed
            programmatically.</param>
            <param name="message">A message describing the pool resize error,
            intended to be suitable for display in a user interface.</param>
            <param name="values">A list of additional error details related to
            the pool resize error.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Code">
            <summary>
            Gets or sets an identifier for the pool resize error. Codes are
            invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Message">
            <summary>
            Gets or sets a message describing the pool resize error, intended
            to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Values">
            <summary>
            Gets or sets a list of additional error details related to the pool
            resize error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResourceFile">
            <summary>
            A file to be downloaded from Azure blob storage to a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor">
            <summary>
            Initializes a new instance of the ResourceFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceFile class.
            </summary>
            <param name="blobSource">The URL of the file within Azure Blob
            Storage.</param>
            <param name="filePath">The location on the compute node to which to
            download the file, relative to the task's working
            directory.</param>
            <param name="fileMode">The file permission mode attribute in octal
            format.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource">
            <summary>
            Gets or sets the URL of the file within Azure Blob Storage.
            </summary>
            <remarks>
            This URL must be readable using anonymous access; that is, the
            Batch service does not present any credentials when downloading the
            blob. There are two ways to get such a URL for a blob in Azure
            storage: include a Shared Access Signature (SAS) granting read
            permissions on the blob, or set the ACL for the blob or its
            container to allow public access.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath">
            <summary>
            Gets or sets the location on the compute node to which to download
            the file, relative to the task's working directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode">
            <summary>
            Gets or sets the file permission mode attribute in octal format.
            </summary>
            <remarks>
            This property applies only to files being downloaded to Linux
            compute nodes. It will be ignored if it is specified for a
            resourceFile which will be downloaded to a Windows node. If this
            property is not specified for a Linux node, then a default value of
            0770 is applied to the file.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics">
            <summary>
            Statistics related to resource consumption by compute nodes in a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.#ctor">
            <summary>
            Initializes a new instance of the ResourceStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.#ctor(System.DateTime,System.DateTime,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the ResourceStatistics class.
            </summary>
            <param name="startTime">The start time of the time range covered by
            the statistics.</param>
            <param name="lastUpdateTime">The time at which the statistics were
            last updated. All statistics are limited to the range between
            startTime and lastUpdateTime.</param>
            <param name="avgCPUPercentage">The average CPU usage across all
            nodes in the pool (percentage per node).</param>
            <param name="avgMemoryGiB">The average memory usage in GiB across
            all nodes in the pool.</param>
            <param name="peakMemoryGiB">The peak memory usage in GiB across all
            nodes in the pool.</param>
            <param name="avgDiskGiB">The average used disk space in GiB across
            all nodes in the pool.</param>
            <param name="peakDiskGiB">The peak used disk space in GiB across
            all nodes in the pool.</param>
            <param name="diskReadIOps">The total number of disk read operations
            across all nodes in the pool.</param>
            <param name="diskWriteIOps">The total number of disk write
            operations across all nodes in the pool.</param>
            <param name="diskReadGiB">The total amount of data in GiB of disk
            reads across all nodes in the pool.</param>
            <param name="diskWriteGiB">The total amount of data in GiB of disk
            writes across all nodes in the pool.</param>
            <param name="networkReadGiB">The total amount of data in GiB of
            network reads across all nodes in the pool.</param>
            <param name="networkWriteGiB">The total amount of data in GiB of
            network writes across all nodes in the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AvgCPUPercentage">
            <summary>
            Gets or sets the average CPU usage across all nodes in the pool
            (percentage per node).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AvgMemoryGiB">
            <summary>
            Gets or sets the average memory usage in GiB across all nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.PeakMemoryGiB">
            <summary>
            Gets or sets the peak memory usage in GiB across all nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AvgDiskGiB">
            <summary>
            Gets or sets the average used disk space in GiB across all nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.PeakDiskGiB">
            <summary>
            Gets or sets the peak used disk space in GiB across all nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskReadIOps">
            <summary>
            Gets or sets the total number of disk read operations across all
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskWriteIOps">
            <summary>
            Gets or sets the total number of disk write operations across all
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskReadGiB">
            <summary>
            Gets or sets the total amount of data in GiB of disk reads across
            all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskWriteGiB">
            <summary>
            Gets or sets the total amount of data in GiB of disk writes across
            all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.NetworkReadGiB">
            <summary>
            Gets or sets the total amount of data in GiB of network reads
            across all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.NetworkWriteGiB">
            <summary>
            Gets or sets the total amount of data in GiB of network writes
            across all nodes in the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.Schedule">
            <summary>
            The schedule according to which jobs will be created
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Schedule.#ctor">
            <summary>
            Initializes a new instance of the Schedule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Schedule.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the Schedule class.
            </summary>
            <param name="doNotRunUntil">The earliest time at which any job may
            be created under this job schedule.</param>
            <param name="doNotRunAfter">A time after which no job will be
            created under this job schedule. The schedule will move to the
            completed state as soon as this deadline is past and there is no
            active job under this job schedule.</param>
            <param name="startWindow">The time interval, starting from the time
            at which the schedule indicates a job should be created, within
            which a job must be created.</param>
            <param name="recurrenceInterval">The time interval between the
            start times of two successive jobs under the job schedule. A job
            schedule can have at most one active job under it at any given
            time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.DoNotRunUntil">
            <summary>
            Gets or sets the earliest time at which any job may be created
            under this job schedule.
            </summary>
            <remarks>
            If you do not specify a doNotRunUntil time, the schedule becomes
            ready to create jobs immediately.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.DoNotRunAfter">
            <summary>
            Gets or sets a time after which no job will be created under this
            job schedule. The schedule will move to the completed state as soon
            as this deadline is past and there is no active job under this job
            schedule.
            </summary>
            <remarks>
            If you do not specify a doNotRunAfter time, and you are creating a
            recurring job schedule, the job schedule will remain active until
            you explicitly terminate it.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.StartWindow">
            <summary>
            Gets or sets the time interval, starting from the time at which the
            schedule indicates a job should be created, within which a job must
            be created.
            </summary>
            <remarks>
            If a job is not created within the startWindow interval, then the
            'opportunity' is lost; no job will be created until the next
            recurrence of the schedule. If the schedule is recurring, and the
            startWindow is longer than the recurrence interval, then this is
            equivalent to an infinite startWindow, because the job that is
            'due' in one recurrenceInterval is not carried forward into the
            next recurrence interval. The default is infinite. The minimum
            value is 1 minute. If you specify a lower value, the Batch service
            rejects the schedule with an error; if you are calling the REST API
            directly, the HTTP status code is 400 (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.RecurrenceInterval">
            <summary>
            Gets or sets the time interval between the start times of two
            successive jobs under the job schedule. A job schedule can have at
            most one active job under it at any given time.
            </summary>
            <remarks>
            Because a job schedule can have at most one active job under it at
            any given time, if it is time to create a new job under a job
            schedule, but the previous job is still running, the Batch service
            will not create the new job until the previous job finishes. If the
            previous job does not finish within the startWindow period of the
            new recurrenceInterval, then no new job will be scheduled for that
            interval. For recurring jobs, you should normally specify a
            jobManagerTask in the jobSpecification. If you do not use
            jobManagerTask, you will need an external process to monitor when
            jobs are created, add tasks to the jobs and terminate the jobs
            ready for the next recurrence. The default is that the schedule
            does not recur: one job is created, within the startWindow after
            the doNotRunUntil time, and the schedule is complete as soon as
            that job finishes. The minimum value is 1 minute. If you specify a
            lower value, the Batch service rejects the schedule with an error;
            if you are calling the REST API directly, the HTTP status code is
            400 (Bad Request).
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.SchedulingState">
            <summary>
            Defines values for SchedulingState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.StartTask">
            <summary>
            A task which is run when a compute node joins a pool in the Azure Batch
            service, or when the compute node is rebooted or reimaged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor">
            <summary>
            Initializes a new instance of the StartTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the StartTask class.
            </summary>
            <param name="commandLine">The command line of the start
            task.</param>
            <param name="resourceFiles">A list of files that the Batch service
            will download to the compute node before running the command
            line.</param>
            <param name="environmentSettings">A list of environment variable
            settings for the start task.</param>
            <param name="userIdentity">The user identity under which the start
            task runs.</param>
            <param name="maxTaskRetryCount">The maximum number of times the
            task may be retried.</param>
            <param name="waitForSuccess">Whether the Batch service should wait
            for the start task to complete successfully (that is, to exit with
            exit code 0) before scheduling any tasks on the compute
            node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine">
            <summary>
            Gets or sets the command line of the start task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download
            to the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the start
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the start task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to
            the task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of times the task may be retried.
            </summary>
            <remarks>
            The Batch service retries a task if its exit code is nonzero. Note
            that this value specifically controls the number of retries. The
            Batch service will try the task once, and may then retry up to this
            limit. For example, if the maximum retry count is 3, Batch tries
            the task up to 4 times (one initial try and 3 retries). If the
            maximum retry count is 0, the Batch service does not retry the
            task. If the maximum retry count is -1, the Batch service retries
            the task without limit.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess">
            <summary>
            Gets or sets whether the Batch service should wait for the start
            task to complete successfully (that is, to exit with exit code 0)
            before scheduling any tasks on the compute node.
            </summary>
            <remarks>
            If true and the start task fails on a compute node, the Batch
            service retries the start task up to its maximum retry count
            (maxTaskRetryCount). If the task has still not completed
            successfully after all retries, then the Batch service marks the
            compute node unusable, and will not schedule tasks to it. This
            condition can be detected via the node state and scheduling error
            detail. If false, the Batch service will not wait for the start
            task to complete. In this case, other tasks can start executing on
            the compute node while the start task is still running; and even if
            the start task fails, new tasks will continue to be scheduled on
            the node. The default is false.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation">
            <summary>
            Information about a start task running on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.#ctor">
            <summary>
            Initializes a new instance of the StartTaskInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTaskState,System.DateTime,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation,System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskExecutionResult})">
            <summary>
            Initializes a new instance of the StartTaskInformation class.
            </summary>
            <param name="state">The state of the start task on the compute
            node.</param>
            <param name="startTime">The time at which the start task started
            running.</param>
            <param name="retryCount">The number of times the task has been
            retried by the Batch service.</param>
            <param name="endTime">The time at which the start task stopped
            running.</param>
            <param name="exitCode">The exit code of the program specified on
            the start task command line.</param>
            <param name="failureInfo">Information describing the task failure,
            if any.</param>
            <param name="lastRetryTime">The most recent time at which a retry
            of the task started running.</param>
            <param name="result">The result of the task execution.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.State">
            <summary>
            Gets or sets the state of the start task on the compute node.
            </summary>
            <remarks>
            running - The start task is currently running. completed - The
            start task has exited with exit code 0, or the start task has
            failed and the retry limit has reached, or the start task process
            did not run due to scheduling errors. Possible values include:
            'running', 'completed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.StartTime">
            <summary>
            Gets or sets the time at which the start task started running.
            </summary>
            <remarks>
            This value is reset every time the task is restarted or retried
            (that is, this is the most recent time at which the start task
            started running).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.EndTime">
            <summary>
            Gets or sets the time at which the start task stopped running.
            </summary>
            <remarks>
            This is the end time of the most recent run of the start task, if
            that run has completed (even if that run failed and a retry is
            pending). This element is not present if the start task is
            currently running.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the program specified on the start
            task command line.
            </summary>
            <remarks>
            This property is set only if the start task is in the completed
            state. In general, the exit code for a process reflects the
            specific convention implemented by the application developer for
            that process. If you use the exit code value to make decisions in
            your code, be sure that you know the exit code convention used by
            the application process. However, if the Batch service terminates
            the start task (due to timeout, or user termination via the API)
            you may see an operating system-defined exit code.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.FailureInfo">
            <summary>
            Gets or sets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the completed state and
            encountered a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.RetryCount">
            <summary>
            Gets or sets the number of times the task has been retried by the
            Batch service.
            </summary>
            <remarks>
            The number of times the task has been retried by the Batch service.
            Task application failures (non-zero exit code) are retried,
            pre-processing errors (the task could not be run) and file upload
            errors are not retried. The Batch service will retry the task up to
            the limit specified by the constraints.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.LastRetryTime">
            <summary>
            Gets or sets the most recent time at which a retry of the task
            started running.
            </summary>
            <remarks>
            This element is present only if the task was retried (i.e.
            retryCount is nonzero). If present, this is typically the same as
            startTime, but may be different if the task has been restarted for
            reasons other than retry; for example, if the compute node was
            rebooted during a retry, then the startTime is updated but the
            lastRetryTime is not.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.Result">
            <summary>
            Gets or sets the result of the task execution.
            </summary>
            <remarks>
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property. Possible values include:
            'success', 'failure'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.StartTaskState">
            <summary>
            Defines values for StartTaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation">
            <summary>
            Information about an Azure Batch subtask.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor">
            <summary>
            Initializes a new instance of the SubtaskInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor(System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.SubtaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.SubtaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskExecutionResult})">
            <summary>
            Initializes a new instance of the SubtaskInformation class.
            </summary>
            <param name="id">The ID of the subtask.</param>
            <param name="nodeInfo">Information about the compute node on which
            the subtask ran.</param>
            <param name="startTime">The time at which the subtask started
            running. If the subtask has been restarted or retried, this is the
            most recent time at which the subtask started running.</param>
            <param name="endTime">The time at which the subtask
            completed.</param>
            <param name="exitCode">The exit code of the program specified on
            the subtask command line.</param>
            <param name="failureInfo">Information describing the task failure,
            if any.</param>
            <param name="state">The current state of the subtask.</param>
            <param name="stateTransitionTime">The time at which the subtask
            entered its current state.</param>
            <param name="previousState">The previous state of the
            subtask.</param>
            <param name="previousStateTransitionTime">The time at which the
            subtask entered its previous state.</param>
            <param name="result">The result of the task execution.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id">
            <summary>
            Gets or sets the ID of the subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo">
            <summary>
            Gets or sets information about the compute node on which the
            subtask ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime">
            <summary>
            Gets or sets the time at which the subtask started running. If the
            subtask has been restarted or retried, this is the most recent time
            at which the subtask started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime">
            <summary>
            Gets or sets the time at which the subtask completed.
            </summary>
            <remarks>
            This property is set only if the subtask is in the Completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the program specified on the subtask
            command line.
            </summary>
            <remarks>
            This property is set only if the subtask is in the completed state.
            In general, the exit code for a process reflects the specific
            convention implemented by the application developer for that
            process. If you use the exit code value to make decisions in your
            code, be sure that you know the exit code convention used by the
            application process. However, if the Batch service terminates the
            subtask (due to timeout, or user termination via the API) you may
            see an operating system-defined exit code.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.FailureInfo">
            <summary>
            Gets or sets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the completed state and
            encountered a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State">
            <summary>
            Gets or sets the current state of the subtask.
            </summary>
            <remarks>
            Possible values include: 'preparing', 'running', 'completed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime">
            <summary>
            Gets or sets the time at which the subtask entered its current
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState">
            <summary>
            Gets or sets the previous state of the subtask.
            </summary>
            <remarks>
            This property is not set if the subtask is in its initial running
            state. Possible values include: 'preparing', 'running', 'completed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the subtask entered its previous
            state.
            </summary>
            <remarks>
            This property is not set if the subtask is in its initial running
            state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Result">
            <summary>
            Gets or sets the result of the task execution.
            </summary>
            <remarks>
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property. Possible values include:
            'success', 'failure'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.SubtaskState">
            <summary>
            Defines values for SubtaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders">
            <summary>
            Defines headers for AddCollection operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskAddCollectionHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TaskAddCollectionHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions">
            <summary>
            Additional parameters for the Task_AddCollection operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskAddCollectionOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskAddCollectionOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter">
            <summary>
            A collection of Azure Batch tasks to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter.#ctor">
            <summary>
            Initializes a new instance of the TaskAddCollectionParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter})">
            <summary>
            Initializes a new instance of the TaskAddCollectionParameter class.
            </summary>
            <param name="value">The collection of tasks to add.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter.Value">
            <summary>
            Gets or sets the collection of tasks to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult">
            <summary>
            The result of adding a collection of tasks to a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult.#ctor">
            <summary>
            Initializes a new instance of the TaskAddCollectionResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddResult})">
            <summary>
            Initializes a new instance of the TaskAddCollectionResult class.
            </summary>
            <param name="value">The results of the add task collection
            operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult.Value">
            <summary>
            Gets or sets the results of the add task collection operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskAddHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions">
            <summary>
            Additional parameters for the Task_Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskAddOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter">
            <summary>
            An Azure Batch task to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor">
            <summary>
            Initializes a new instance of the TaskAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.OutputFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.UserIdentity,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)">
            <summary>
            Initializes a new instance of the TaskAddParameter class.
            </summary>
            <param name="id">A string that uniquely identifies the task within
            the job.</param>
            <param name="commandLine">The command line of the task.</param>
            <param name="displayName">A display name for the task.</param>
            <param name="exitConditions">How the Batch service should respond
            when the task completes.</param>
            <param name="resourceFiles">A list of files that the Batch service
            will download to the compute node before running the command
            line.</param>
            <param name="outputFiles">A list of files that the Batch service
            will upload from the compute node after running the command
            line.</param>
            <param name="environmentSettings">A list of environment variable
            settings for the task.</param>
            <param name="affinityInfo">A locality hint that can be used by the
            Batch service to select a compute node on which to start the new
            task.</param>
            <param name="constraints">The execution constraints that apply to
            this task.</param>
            <param name="userIdentity">The user identity under which the task
            runs.</param>
            <param name="multiInstanceSettings">An object that indicates that
            the task is a multi-instance task, and contains information about
            how to run the multi-instance task.</param>
            <param name="dependsOn">The tasks that this task depends
            on.</param>
            <param name="applicationPackageReferences">A list of application
            packages that the Batch service will deploy to the compute node
            before running the command line.</param>
            <param name="authenticationTokenSettings">The settings for an
            authentication token that the task can use to perform Batch service
            operations.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id">
            <summary>
            Gets or sets a string that uniquely identifies the task within the
            job.
            </summary>
            <remarks>
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. The ID is case-preserving and case-insensitive (that
            is, you may not have two IDs within a job that differ only by
            case).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName">
            <summary>
            Gets or sets a display name for the task.
            </summary>
            <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
            <remarks>
            For multi-instance tasks, the command line is executed as the
            primary task, after the primary task and all subtasks have finished
            executing the coordination command line. The command line does not
            run under a shell, and therefore cannot take advantage of shell
            features such as environment variable expansion. If you want to
            take advantage of such features, you should invoke the shell in the
            command line, for example using "cmd /c MyCommand" in Windows or
            "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions">
            <summary>
            Gets or sets how the Batch service should respond when the task
            completes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download
            to the compute node before running the command line.
            </summary>
            <remarks>
            For multi-instance tasks, the resource files will only be
            downloaded to the compute node on which the primary task is
            executed.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.OutputFiles">
            <summary>
            Gets or sets a list of files that the Batch service will upload
            from the compute node after running the command line.
            </summary>
            <remarks>
            For multi-instance tasks, the files will only be uploaded from the
            compute node on which the primary task is executed.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo">
            <summary>
            Gets or sets a locality hint that can be used by the Batch service
            to select a compute node on which to start the new task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints">
            <summary>
            Gets or sets the execution constraints that apply to this task.
            </summary>
            <remarks>
            If you do not specify constraints, the maxTaskRetryCount is the
            maxTaskRetryCount specified for the job, and the maxWallClockTime
            and retentionTime are infinite.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity">
            <summary>
            Gets or sets the user identity under which the task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to
            the task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings">
            <summary>
            Gets or sets an object that indicates that the task is a
            multi-instance task, and contains information about how to run the
            multi-instance task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn">
            <summary>
            Gets or sets the tasks that this task depends on.
            </summary>
            <remarks>
            This task will not be scheduled until all tasks that it depends on
            have completed successfully. If any of those tasks fail and exhaust
            their retry counts, this task will never be scheduled. If the job
            does not have usesTaskDependencies set to true, and this element is
            present, the request fails with error code
            TaskDependenciesNotSpecifiedOnJob.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages that the Batch service
            will deploy to the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings">
            <summary>
            Gets or sets the settings for an authentication token that the task
            can use to perform Batch service operations.
            </summary>
            <remarks>
            If this property is set, the Batch service provides the task with
            an authentication token which can be used to authenticate Batch
            service operations without requiring an account access key. The
            token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment
            variable. The operations that the task can carry out using the
            token depend on the settings. For example, a task can request job
            permissions in order to add other tasks to the job, or check the
            status of the job or of other tasks under the job.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult">
            <summary>
            Result for a single task added as part of an add task collection
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor">
            <summary>
            Initializes a new instance of the TaskAddResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus,System.String,System.String,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.BatchError)">
            <summary>
            Initializes a new instance of the TaskAddResult class.
            </summary>
            <param name="status">The status of the add task request.</param>
            <param name="taskId">The ID of the task for which this is the
            result.</param>
            <param name="eTag">The ETag of the task, if the task was
            successfully added.</param>
            <param name="lastModified">The last modified time of the
            task.</param>
            <param name="location">The URL of the task, if the task was
            successfully added.</param>
            <param name="error">The error encountered while attempting to add
            the task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status">
            <summary>
            Gets or sets the status of the add task request.
            </summary>
            <remarks>
            Possible values include: 'success', 'clientError', 'serverError'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId">
            <summary>
            Gets or sets the ID of the task for which this is the result.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag">
            <summary>
            Gets or sets the ETag of the task, if the task was successfully
            added.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified">
            <summary>
            Gets or sets the last modified time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location">
            <summary>
            Gets or sets the URL of the task, if the task was successfully
            added.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error">
            <summary>
            Gets or sets the error encountered while attempting to add the
            task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus">
            <summary>
            Defines values for TaskAddStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints">
            <summary>
            Execution constraints to apply to a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.#ctor">
            <summary>
            Initializes a new instance of the TaskConstraints class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the TaskConstraints class.
            </summary>
            <param name="maxWallClockTime">The maximum elapsed time that the
            task may run, measured from the time the task starts. If the task
            does not complete within the time limit, the Batch service
            terminates it.</param>
            <param name="retentionTime">The minimum time to retain the task
            directory on the compute node where it ran, from the time it
            completes execution. After this time, the Batch service may delete
            the task directory and all its contents.</param>
            <param name="maxTaskRetryCount">The maximum number of times the
            task may be retried. The Batch service retries a task if its exit
            code is nonzero.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum elapsed time that the task may run,
            measured from the time the task starts. If the task does not
            complete within the time limit, the Batch service terminates it.
            </summary>
            <remarks>
            If this is not specified, there is no time limit on how long the
            task may run.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.RetentionTime">
            <summary>
            Gets or sets the minimum time to retain the task directory on the
            compute node where it ran, from the time it completes execution.
            After this time, the Batch service may delete the task directory
            and all its contents.
            </summary>
            <remarks>
            The default is infinite, i.e. the task directory will be retained
            until the compute node is removed or reimaged.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of times the task may be retried.
            The Batch service retries a task if its exit code is nonzero.
            </summary>
            <remarks>
            Note that this value specifically controls the number of retries.
            The Batch service will try the task once, and may then retry up to
            this limit. For example, if the maximum retry count is 3, Batch
            tries the task up to 4 times (one initial try and 3 retries). If
            the maximum retry count is 0, the Batch service does not retry the
            task. If the maximum retry count is -1, the Batch service retries
            the task without limit.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TaskDeleteHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions">
            <summary>
            Additional parameters for the Task_Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskDeleteOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies">
            <summary>
            Specifies any dependencies of a task. Any task that is explicitly
            specified or within a dependency range must complete before the
            dependant task will be scheduled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies.#ctor">
            <summary>
            Initializes a new instance of the TaskDependencies class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskIdRange})">
            <summary>
            Initializes a new instance of the TaskDependencies class.
            </summary>
            <param name="taskIds">The list of task IDs that this task depends
            on. All tasks in this list must complete successfully before the
            dependent task can be scheduled.</param>
            <param name="taskIdRanges">The list of task ID ranges that this
            task depends on. All tasks in all ranges must complete successfully
            before the dependent task can be scheduled.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies.TaskIds">
            <summary>
            Gets or sets the list of task IDs that this task depends on. All
            tasks in this list must complete successfully before the dependent
            task can be scheduled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies.TaskIdRanges">
            <summary>
            Gets or sets the list of task ID ranges that this task depends on.
            All tasks in all ranges must complete successfully before the
            dependent task can be scheduled.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation">
            <summary>
            Information about the execution of a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the TaskExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskExecutionResult})">
            <summary>
            Initializes a new instance of the TaskExecutionInformation class.
            </summary>
            <param name="retryCount">The number of times the task has been
            retried by the Batch service.</param>
            <param name="requeueCount">The number of times the task has been
            requeued by the Batch service as the result of a user
            request.</param>
            <param name="startTime">The time at which the task started
            running.</param>
            <param name="endTime">The time at which the task completed.</param>
            <param name="exitCode">The exit code of the program specified on
            the task command line.</param>
            <param name="failureInfo">Information describing the task failure,
            if any.</param>
            <param name="lastRetryTime">The most recent time at which a retry
            of the task started running.</param>
            <param name="lastRequeueTime">The most recent time at which the
            task has been requeued by the Batch service as the result of a user
            request.</param>
            <param name="result">The result of the task execution.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime">
            <summary>
            Gets or sets the time at which the task started running.
            </summary>
            <remarks>
            'Running' corresponds to the running state, so if the task
            specifies resource files or application packages, then the start
            time reflects the time at which the task started downloading or
            deploying these. If the task has been restarted or retried, this is
            the most recent time at which the task started running. This
            property is present only for tasks that are in the running or
            completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime">
            <summary>
            Gets or sets the time at which the task completed.
            </summary>
            <remarks>
            This property is set only if the task is in the Completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the program specified on the task
            command line.
            </summary>
            <remarks>
            This property is set only if the task is in the completed state. In
            general, the exit code for a process reflects the specific
            convention implemented by the application developer for that
            process. If you use the exit code value to make decisions in your
            code, be sure that you know the exit code convention used by the
            application process. However, if the Batch service terminates the
            task (due to timeout, or user termination via the API) you may see
            an operating system-defined exit code.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.FailureInfo">
            <summary>
            Gets or sets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the completed state and
            encountered a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount">
            <summary>
            Gets or sets the number of times the task has been retried by the
            Batch service.
            </summary>
            <remarks>
            The number of times the task has been retried by the Batch service.
            Task application failures (non-zero exit code) are retried,
            pre-processing errors (the task could not be run) and file upload
            errors are not retried. The Batch service will retry the task up to
            the limit specified by the constraints.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime">
            <summary>
            Gets or sets the most recent time at which a retry of the task
            started running.
            </summary>
            <remarks>
            This element is present only if the task was retried (i.e.
            retryCount is nonzero). If present, this is typically the same as
            startTime, but may be different if the task has been restarted for
            reasons other than retry; for example, if the compute node was
            rebooted during a retry, then the startTime is updated but the
            lastRetryTime is not.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount">
            <summary>
            Gets or sets the number of times the task has been requeued by the
            Batch service as the result of a user request.
            </summary>
            <remarks>
            When the user removes nodes from a pool (by resizing/shrinking the
            pool) or when the job is being disabled, the user can specify that
            running tasks on the nodes be requeued for execution. This count
            tracks how many times the task has been requeued for these reasons.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime">
            <summary>
            Gets or sets the most recent time at which the task has been
            requeued by the Batch service as the result of a user request.
            </summary>
            <remarks>
            This property is set only if the requeueCount is nonzero.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Result">
            <summary>
            Gets or sets the result of the task execution.
            </summary>
            <remarks>
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property. Possible values include:
            'success', 'failure'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionResult">
            <summary>
            Defines values for TaskExecutionResult.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation">
            <summary>
            Information about a task failure.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation.#ctor">
            <summary>
            Initializes a new instance of the TaskFailureInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.ErrorCategory,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the TaskFailureInformation class.
            </summary>
            <param name="category">The category of the task error.</param>
            <param name="code">An identifier for the task error. Codes are
            invariant and are intended to be consumed programmatically.</param>
            <param name="message">A message describing the task error, intended
            to be suitable for display in a user interface.</param>
            <param name="details">A list of additional details related to the
            error.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation.Category">
            <summary>
            Gets or sets the category of the task error.
            </summary>
            <remarks>
            Possible values include: 'userError', 'serverError'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation.Code">
            <summary>
            Gets or sets an identifier for the task error. Codes are invariant
            and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation.Message">
            <summary>
            Gets or sets a message describing the task error, intended to be
            suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation.Details">
            <summary>
            Gets or sets a list of additional details related to the error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskFailureInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskGetHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions">
            <summary>
            Additional parameters for the Task_Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskGetOptions class.
            </summary>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange">
            <summary>
            A range of task IDs that a task can depend on. All tasks with IDs in
            the range must complete successfully before the dependent task can be
            scheduled.
            </summary>
            <remarks>
            The start and end of the range are inclusive. For example, if a range
            has start 9 and end 12, then it represents tasks '9', '10', '11' and
            '12'.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.#ctor">
            <summary>
            Initializes a new instance of the TaskIdRange class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TaskIdRange class.
            </summary>
            <param name="start">The first task ID in the range.</param>
            <param name="end">The last task ID in the range.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.Start">
            <summary>
            Gets or sets the first task ID in the range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.End">
            <summary>
            Gets or sets the last task ID in the range.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskInformation">
            <summary>
            Information about a task running on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor">
            <summary>
            Initializes a new instance of the TaskInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskState,System.String,System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation)">
            <summary>
            Initializes a new instance of the TaskInformation class.
            </summary>
            <param name="taskState">The current state of the task.</param>
            <param name="taskUrl">The URL of the task.</param>
            <param name="jobId">The ID of the job to which the task
            belongs.</param>
            <param name="taskId">The ID of the task.</param>
            <param name="subtaskId">The ID of the subtask if the task is a
            multi-instance task.</param>
            <param name="executionInfo">Information about the execution of the
            task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl">
            <summary>
            Gets or sets the URL of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId">
            <summary>
            Gets or sets the ID of the job to which the task belongs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId">
            <summary>
            Gets or sets the ID of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId">
            <summary>
            Gets or sets the ID of the subtask if the task is a multi-instance
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState">
            <summary>
            Gets or sets the current state of the task.
            </summary>
            <remarks>
            Possible values include: 'active', 'preparing', 'running',
            'completed'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo">
            <summary>
            Gets or sets information about the execution of the task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.#ctor(System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListNextOptions class.
            </summary>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions">
            <summary>
            Additional parameters for the Task_List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListOptions class.
            </summary>
            <param name="filter">An OData $filter clause.</param>
            <param name="select">An OData $select clause.</param>
            <param name="expand">An OData $expand clause.</param>
            <param name="maxResults">The maximum number of items to return in
            the response. A maximum of 1000 tasks can be returned.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.Filter">
            <summary>
            Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.Expand">
            <summary>
            Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.MaxResults">
            <summary>
            Gets or sets the maximum number of items to return in the response.
            A maximum of 1000 tasks can be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders">
            <summary>
            Defines headers for ListSubtasks operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskListSubtasksHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListSubtasksHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions">
            <summary>
            Additional parameters for the Task_ListSubtasks operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskListSubtasksOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListSubtasksOptions class.
            </summary>
            <param name="select">An OData $select clause.</param>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.Select">
            <summary>
            Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders">
            <summary>
            Defines headers for Reactivate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskReactivateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskReactivateHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions">
            <summary>
            Additional parameters for the Task_Reactivate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskReactivateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskReactivateOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy">
            <summary>
            Specifies how tasks should be distributed across compute nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.#ctor">
            <summary>
            Initializes a new instance of the TaskSchedulingPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.#ctor(Microsoft.Azure.Batch.Protocol.Models.ComputeNodeFillType)">
            <summary>
            Initializes a new instance of the TaskSchedulingPolicy class.
            </summary>
            <param name="nodeFillType">How tasks should be distributed across
            compute nodes.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.NodeFillType">
            <summary>
            Gets or sets how tasks should be distributed across compute nodes.
            </summary>
            <remarks>
            Possible values include: 'spread', 'pack'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskState">
            <summary>
            Defines values for TaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics">
            <summary>
            Resource usage statistics for a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.#ctor">
            <summary>
            Initializes a new instance of the TaskStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.#ctor(System.String,System.DateTime,System.DateTime,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int64,System.Int64,System.Double,System.Double,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TaskStatistics class.
            </summary>
            <param name="url">The URL of the statistics.</param>
            <param name="startTime">The start time of the time range covered by
            the statistics.</param>
            <param name="lastUpdateTime">The time at which the statistics were
            last updated. All statistics are limited to the range between
            startTime and lastUpdateTime.</param>
            <param name="userCPUTime">The total user mode CPU time (summed
            across all cores and all compute nodes) consumed by the
            task.</param>
            <param name="kernelCPUTime">The total kernel mode CPU time (summed
            across all cores and all compute nodes) consumed by the
            task.</param>
            <param name="wallClockTime">The total wall clock time of the
            task.</param>
            <param name="readIOps">The total number of disk read operations
            made by the task.</param>
            <param name="writeIOps">The total number of disk write operations
            made by the task.</param>
            <param name="readIOGiB">The total gibibytes read from disk by the
            task.</param>
            <param name="writeIOGiB">The total gibibytes written to disk by the
            task.</param>
            <param name="waitTime">The total wait time of the task. The wait
            time for a task is defined as the elapsed time between the creation
            of the task and the start of task execution. (If the task is
            retried due to failures, the wait time is the time to the most
            recent task execution.)</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.Url">
            <summary>
            Gets or sets the URL of the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.UserCPUTime">
            <summary>
            Gets or sets the total user mode CPU time (summed across all cores
            and all compute nodes) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.KernelCPUTime">
            <summary>
            Gets or sets the total kernel mode CPU time (summed across all
            cores and all compute nodes) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WallClockTime">
            <summary>
            Gets or sets the total wall clock time of the task.
            </summary>
            <remarks>
            The wall clock time is the elapsed time from when the task started
            running on a compute node to when it finished (or to the last time
            the statistics were updated, if the task had not finished by then).
            If the task was retried, this includes the wall clock time of all
            the task retries.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.ReadIOps">
            <summary>
            Gets or sets the total number of disk read operations made by the
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WriteIOps">
            <summary>
            Gets or sets the total number of disk write operations made by the
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.ReadIOGiB">
            <summary>
            Gets or sets the total gibibytes read from disk by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WriteIOGiB">
            <summary>
            Gets or sets the total gibibytes written to disk by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WaitTime">
            <summary>
            Gets or sets the total wait time of the task. The wait time for a
            task is defined as the elapsed time between the creation of the
            task and the start of task execution. (If the task is retried due
            to failures, the wait time is the time to the most recent task
            execution.)
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders">
            <summary>
            Defines headers for Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskTerminateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskTerminateHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions">
            <summary>
            Additional parameters for the Task_Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskTerminateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskTerminateOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders">
            <summary>
            Defines headers for Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskUpdateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskUpdateHeaders class.
            </summary>
            <param name="clientRequestId">The client-request-id provided by the
            client during the request. This will be returned only if the
            return-client-request-id parameter was set to true.</param>
            <param name="requestId">A unique identifier for the request that
            was made to the Batch service. If a request is consistently failing
            and you have verified that the request is properly formulated, you
            may use this value to report the error to Microsoft. In your
            report, include the value of this request ID, the approximate time
            that the request was made, the Batch account against which the
            request was made, and the region that account resides in.</param>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.</param>
            <param name="lastModified">The time at which the resource was last
            modified.</param>
            <param name="dataServiceId">The OData ID of the resource to which
            the request applied.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.ClientRequestId">
            <summary>
            Gets or sets the client-request-id provided by the client during
            the request. This will be returned only if the
            return-client-request-id parameter was set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.RequestId">
            <summary>
            Gets or sets a unique identifier for the request that was made to
            the Batch service. If a request is consistently failing and you
            have verified that the request is properly formulated, you may use
            this value to report the error to Microsoft. In your report,
            include the value of this request ID, the approximate time that the
            request was made, the Batch account against which the request was
            made, and the region that account resides in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Modified-Since, If-Unmodified-Since, If-Match or
            If-None-Match headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.LastModified">
            <summary>
            Gets or sets the time at which the resource was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.DataServiceId">
            <summary>
            Gets or sets the OData ID of the resource to which the request
            applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions">
            <summary>
            Additional parameters for the Task_Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskUpdateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskUpdateOptions class.
            </summary>
            <param name="timeout">The maximum time that the server can spend
            processing the request, in seconds. The default is 30
            seconds.</param>
            <param name="clientRequestId">The caller-generated request
            identity, in the form of a GUID with no decoration such as curly
            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
            <param name="returnClientRequestId">Whether the server should
            return the client-request-id in the response.</param>
            <param name="ocpDate">The time the request was issued. Client
            libraries typically set this to the current system clock time; set
            it explicitly if you are calling the REST API directly.</param>
            <param name="ifMatch">An ETag value associated with the version of
            the resource known to the client. The operation will be performed
            only if the resource's current ETag on the service exactly matches
            the value specified by the client.</param>
            <param name="ifNoneMatch">An ETag value associated with the version
            of the resource known to the client. The operation will be
            performed only if the resource's current ETag on the service does
            not match the value specified by the client.</param>
            <param name="ifModifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has been
            modified since the specified time.</param>
            <param name="ifUnmodifiedSince">A timestamp indicating the last
            modified time of the resource known to the client. The operation
            will be performed only if the resource on the service has not been
            modified since the specified time.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.Timeout">
            <summary>
            Gets or sets the maximum time that the server can spend processing
            the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.ClientRequestId">
            <summary>
            Gets or sets the caller-generated request identity, in the form of
            a GUID with no decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.ReturnClientRequestId">
            <summary>
            Gets or sets whether the server should return the client-request-id
            in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.OcpDate">
            <summary>
            Gets or sets the time the request was issued. Client libraries
            typically set this to the current system clock time; set it
            explicitly if you are calling the REST API directly.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.IfMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service exactly matches the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.IfNoneMatch">
            <summary>
            Gets or sets an ETag value associated with the version of the
            resource known to the client. The operation will be performed only
            if the resource's current ETag on the service does not match the
            value specified by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.IfModifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has been modified since the
            specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.IfUnmodifiedSince">
            <summary>
            Gets or sets a timestamp indicating the last modified time of the
            resource known to the client. The operation will be performed only
            if the resource on the service has not been modified since the
            specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateParameter">
            <summary>
            The set of changes to be made to a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateParameter.#ctor">
            <summary>
            Initializes a new instance of the TaskUpdateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskConstraints)">
            <summary>
            Initializes a new instance of the TaskUpdateParameter class.
            </summary>
            <param name="constraints">Constraints that apply to this
            task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateParameter.Constraints">
            <summary>
            Gets or sets constraints that apply to this task.
            </summary>
            <remarks>
            If omitted, the task is given the default constraints.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics">
            <summary>
            Statistics related to pool usage information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.#ctor">
            <summary>
            Initializes a new instance of the UsageStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.#ctor(System.DateTime,System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the UsageStatistics class.
            </summary>
            <param name="startTime">The start time of the time range covered by
            the statistics.</param>
            <param name="lastUpdateTime">The time at which the statistics were
            last updated. All statistics are limited to the range between
            startTime and lastUpdateTime.</param>
            <param name="dedicatedCoreTime">The aggregated wall-clock time of
            the dedicated compute node cores being part of the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.DedicatedCoreTime">
            <summary>
            Gets or sets the aggregated wall-clock time of the dedicated
            compute node cores being part of the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.UserAccount">
            <summary>
            Properties used to create a user used to execute tasks on an Azure
            Batch node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor">
            <summary>
            Initializes a new instance of the UserAccount class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel},Microsoft.Azure.Batch.Protocol.Models.LinuxUserConfiguration)">
            <summary>
            Initializes a new instance of the UserAccount class.
            </summary>
            <param name="name">The name of the user account.</param>
            <param name="password">The password for the user account.</param>
            <param name="elevationLevel">The elevation level of the user
            account.</param>
            <param name="linuxUserConfiguration">The Linux-specific user
            configuration for the user account.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name">
            <summary>
            Gets or sets the name of the user account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password">
            <summary>
            Gets or sets the password for the user account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel">
            <summary>
            Gets or sets the elevation level of the user account.
            </summary>
            <remarks>
            nonAdmin - The auto user is a standard user without elevated
            access. admin - The auto user is a user with elevated access and
            operates with full Administrator permissions. The default value is
            nonAdmin. Possible values include: 'nonAdmin', 'admin'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UserAccount.LinuxUserConfiguration">
            <summary>
            Gets or sets the Linux-specific user configuration for the user
            account.
            </summary>
            <remarks>
            This property is ignored if specified on a Windows pool. If not
            specified, the user is created with the default options.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.UserIdentity">
            <summary>
            The definition of the user identity under which the task is run.
            </summary>
            <remarks>
            Specify either the userName or autoUser property, but not both.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UserIdentity.#ctor">
            <summary>
            Initializes a new instance of the UserIdentity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UserIdentity.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification)">
            <summary>
            Initializes a new instance of the UserIdentity class.
            </summary>
            <param name="userName">The name of the user identity under which
            the task is run.</param>
            <param name="autoUser">The auto user under which the task is
            run.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UserIdentity.UserName">
            <summary>
            Gets or sets the name of the user identity under which the task is
            run.
            </summary>
            <remarks>
            The userName and autoUser properties are mutually exclusive; you
            must specify one but not both.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UserIdentity.AutoUser">
            <summary>
            Gets or sets the auto user under which the task is run.
            </summary>
            <remarks>
            The userName and autoUser properties are mutually exclusive; you
            must specify one but not both.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration">
            <summary>
            The configuration for compute nodes in a pool based on the Azure
            Virtual Machines infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor">
            <summary>
            Initializes a new instance of the VirtualMachineConfiguration
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.ImageReference,Microsoft.Azure.Batch.Protocol.Models.OSDisk,Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration)">
            <summary>
            Initializes a new instance of the VirtualMachineConfiguration
            class.
            </summary>
            <param name="nodeAgentSKUId">The SKU of the Batch node agent to be
            provisioned on compute nodes in the pool.</param>
            <param name="imageReference">A reference to the Azure Virtual
            Machines Marketplace image to use.</param>
            <param name="osDisk">A reference to the OS disk image to
            use.</param>
            <param name="windowsConfiguration">Windows operating system
            settings on the virtual machine.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference">
            <summary>
            Gets or sets a reference to the Azure Virtual Machines Marketplace
            image to use.
            </summary>
            <remarks>
            This property and osDisk are mutually exclusive and one of the
            properties must be specified.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.OsDisk">
            <summary>
            Gets or sets a reference to the OS disk image to use.
            </summary>
            <remarks>
            This property can be specified only if the Batch account was
            created with its poolAllocationMode property set to
            'UserSubscription'. This property and imageReference are mutually
            exclusive and one of the properties must be specified.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId">
            <summary>
            Gets or sets the SKU of the Batch node agent to be provisioned on
            compute nodes in the pool.
            </summary>
            <remarks>
            The Batch node agent is a program that runs on each node in the
            pool, and provides the command-and-control interface between the
            node and the Batch service. There are different implementations of
            the node agent, known as SKUs, for different operating systems. You
            must specify a node agent SKU which matches the selected image
            reference. To get the list of supported node agent SKUs along with
            their list of verified image references, see the 'List supported
            node agent SKUs' operation.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration">
            <summary>
            Gets or sets windows operating system settings on the virtual
            machine.
            </summary>
            <remarks>
            This property must not be specified if the imageReference or osDisk
            property specifies a Linux OS image.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration">
            <summary>
            Windows operating system settings to apply to the virtual machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration.#ctor">
            <summary>
            Initializes a new instance of the WindowsConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the WindowsConfiguration class.
            </summary>
            <param name="enableAutomaticUpdates">Whether automatic updates are
            enabled on the virtual machine.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration.EnableAutomaticUpdates">
            <summary>
            Gets or sets whether automatic updates are enabled on the virtual
            machine.
            </summary>
            <remarks>
            If omitted, the default value is true.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.IOptions">
            <summary>
            Optional arguments applicable to all service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ITimeoutOptions">
            <summary>
            Optional arguments for service requests which support timeouts.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ITimeoutOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.IODataFilter">
            <summary>
            Represents an options object supporting the OData $filter parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IODataFilter.Filter">
            <summary>
            Gets or sets the OData $filter clause.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.IODataSelect">
            <summary>
            Represents an options object supporting the OData $select parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IODataSelect.Select">
            <summary>
            Gets or sets the OData $select clause.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.IODataExpand">
            <summary>
            Represents an options object supporting the OData $expand parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IODataExpand.Expand">
            <summary>
            Gets or sets the OData $expand clause.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.PoolOperations">
            <summary>
            PoolOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the PoolOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.PoolOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ListUsageMetricsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <remarks>
            If you do not specify a $filter clause including a poolId, the response
            includes all pools that existed in the account in the time range of the
            returned aggregation intervals.
            </remarks>
            <param name='poolListUsageMetricsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.GetAllLifetimeStatisticsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the specified
            account.
            </summary>
            <remarks>
            Statistics are aggregated across all pools that have ever existed in the
            account, from account creation to the last update time of the statistics.
            </remarks>
            <param name='poolGetAllLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <remarks>
            When naming pools, avoid including sensitive information such as user names
            or secret project names. This information may appear in telemetry logs
            accessible to Microsoft Support engineers.
            </remarks>
            <param name='pool'>
            The pool to be added.
            </param>
            <param name='poolAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='poolListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <remarks>
            When you request that a pool be deleted, the following actions occur: the
            pool state is set to deleting; any ongoing resize operation on the pool are
            stopped; the Batch service starts resizing the pool to zero nodes; any
            tasks running on existing nodes are terminated and requeued (as if a resize
            pool operation had been requested with the default requeue option);
            finally, the pool is removed from the system. Because running tasks are
            requeued, the user can rerun these tasks by updating their job to target a
            different pool. The tasks can then run on the new pool. If you want to
            override the requeue behavior, then you should call resize pool explicitly
            to shrink the pool to zero size before deleting the pool. If you call an
            Update, Patch or Delete API on a pool in the deleting state, it will fail
            with HTTP status code 409 with error code PoolBeingDeleted.
            </remarks>
            <param name='poolId'>
            The ID of the pool to delete.
            </param>
            <param name='poolDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ExistsWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='poolId'>
            The ID of the pool to get.
            </param>
            <param name='poolExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='poolId'>
            The ID of the pool to get.
            </param>
            <param name='poolGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified pool.
            </summary>
            <remarks>
            This only replaces the pool properties specified in the request. For
            example, if the pool has a start task associated with it, and a request
            does not specify a start task element, then the pool keeps the existing
            start task.
            </remarks>
            <param name='poolId'>
            The ID of the pool to update.
            </param>
            <param name='poolPatchParameter'>
            The parameters for the request.
            </param>
            <param name='poolPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.DisableAutoScaleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            The ID of the pool on which to disable automatic scaling.
            </param>
            <param name='poolDisableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.EnableAutoScaleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <remarks>
            You cannot enable automatic scaling on a pool if a resize operation is in
            progress on the pool. If automatic scaling of the pool is currently
            disabled, you must specify a valid autoscale formula as part of the
            request. If automatic scaling of the pool is already enabled, you may
            specify a new autoscale formula and/or a new evaluation interval. You
            cannot call this API for the same pool more than once every 30 seconds.
            </remarks>
            <param name='poolId'>
            The ID of the pool on which to enable automatic scaling.
            </param>
            <param name='poolEnableAutoScaleParameter'>
            The parameters for the request.
            </param>
            <param name='poolEnableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.EvaluateAutoScaleWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the pool.
            </summary>
            <remarks>
            This API is primarily for validating an autoscale formula, as it simply
            returns the result without applying the formula to the pool.
            </remarks>
            <param name='poolId'>
            The ID of the pool on which to evaluate the automatic scaling formula.
            </param>
            <param name='autoScaleFormula'>
            The formula for the desired number of compute nodes in the pool. The
            formula is validated and its results calculated, but it is not applied to
            the pool. To apply the formula to the pool, 'Enable automatic scaling on a
            pool'. For more information about specifying this formula, see
            Automatically scale compute nodes in an Azure Batch pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
            </param>
            <param name='poolEvaluateAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ResizeWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <remarks>
            You can only resize a pool when its allocation state is steady. If the pool
            is already resizing, the request fails with status code 409. When you
            resize a pool, the pool's allocation state changes from steady to resizing.
            You cannot resize pools which are configured for automatic scaling. If you
            try to do this, the Batch service returns an error 409. If you resize a
            pool downwards, the Batch service chooses which nodes to remove. To remove
            specific nodes, use the pool remove nodes API instead.
            </remarks>
            <param name='poolId'>
            The ID of the pool to resize.
            </param>
            <param name='poolResizeParameter'>
            The parameters for the request.
            </param>
            <param name='poolResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.StopResizeWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
            <remarks>
            This does not restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the pool
            maintains its current state. A resize operation need not be an explicit
            resize pool request; this API can also be used to halt the initial sizing
            of the pool when it is created.
            </remarks>
            <param name='poolId'>
            The ID of the pool whose resizing you want to stop.
            </param>
            <param name='poolStopResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.UpdatePropertiesWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified pool.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the pool. For example,
            if the pool has a start task associated with it and if start task is not
            specified with this request, then the Batch service will remove the
            existing start task.
            </remarks>
            <param name='poolId'>
            The ID of the pool to update.
            </param>
            <param name='poolUpdatePropertiesParameter'>
            The parameters for the request.
            </param>
            <param name='poolUpdatePropertiesOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.UpgradeOSWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <remarks>
            During an upgrade, the Batch service upgrades each compute node in the
            pool. When a compute node is chosen for upgrade, any tasks running on that
            node are removed from the node and returned to the queue to be rerun later
            (or on a different compute node). The node will be unavailable until the
            upgrade is complete. This operation results in temporarily reduced pool
            capacity as nodes are taken out of service to be upgraded. Although the
            Batch service tries to avoid upgrading all compute nodes at the same time,
            it does not guarantee to do this (particularly on small pools); therefore,
            the pool may be temporarily unavailable to run tasks. When this operation
            runs, the pool state changes to upgrading. When all compute nodes have
            finished upgrading, the pool state returns to active.
            </remarks>
            <param name='poolId'>
            The ID of the pool to upgrade.
            </param>
            <param name='targetOSVersion'>
            The Azure Guest OS version to be installed on the virtual machines in the
            pool.
            </param>
            <param name='poolUpgradeOSOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.RemoveNodesWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <remarks>
            This operation can only run when the allocation state of the pool is
            steady. When this operation runs, the allocation state changes from steady
            to resizing.
            </remarks>
            <param name='poolId'>
            The ID of the pool from which you want to remove nodes.
            </param>
            <param name='nodeRemoveParameter'>
            The parameters for the request.
            </param>
            <param name='poolRemoveNodesOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ListUsageMetricsNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <remarks>
            If you do not specify a $filter clause including a poolId, the response
            includes all pools that existed in the account in the time range of the
            returned aggregation intervals.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListUsageMetricsNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions">
            <summary>
            Extension methods for PoolOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <remarks>
            If you do not specify a $filter clause including a poolId, the response
            includes all pools that existed in the account in the time range of the
            returned aggregation intervals.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolListUsageMetricsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <remarks>
            If you do not specify a $filter clause including a poolId, the response
            includes all pools that existed in the account in the time range of the
            returned aggregation intervals.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolListUsageMetricsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the specified
            account.
            </summary>
            <remarks>
            Statistics are aggregated across all pools that have ever existed in the
            account, from account creation to the last update time of the statistics.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolGetAllLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the specified
            account.
            </summary>
            <remarks>
            Statistics are aggregated across all pools that have ever existed in the
            account, from account creation to the last update time of the statistics.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolGetAllLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <remarks>
            When naming pools, avoid including sensitive information such as user names
            or secret project names. This information may appear in telemetry logs
            accessible to Microsoft Support engineers.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='pool'>
            The pool to be added.
            </param>
            <param name='poolAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <remarks>
            When naming pools, avoid including sensitive information such as user names
            or secret project names. This information may appear in telemetry logs
            accessible to Microsoft Support engineers.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='pool'>
            The pool to be added.
            </param>
            <param name='poolAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <remarks>
            When you request that a pool be deleted, the following actions occur: the
            pool state is set to deleting; any ongoing resize operation on the pool are
            stopped; the Batch service starts resizing the pool to zero nodes; any
            tasks running on existing nodes are terminated and requeued (as if a resize
            pool operation had been requested with the default requeue option);
            finally, the pool is removed from the system. Because running tasks are
            requeued, the user can rerun these tasks by updating their job to target a
            different pool. The tasks can then run on the new pool. If you want to
            override the requeue behavior, then you should call resize pool explicitly
            to shrink the pool to zero size before deleting the pool. If you call an
            Update, Patch or Delete API on a pool in the deleting state, it will fail
            with HTTP status code 409 with error code PoolBeingDeleted.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to delete.
            </param>
            <param name='poolDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <remarks>
            When you request that a pool be deleted, the following actions occur: the
            pool state is set to deleting; any ongoing resize operation on the pool are
            stopped; the Batch service starts resizing the pool to zero nodes; any
            tasks running on existing nodes are terminated and requeued (as if a resize
            pool operation had been requested with the default requeue option);
            finally, the pool is removed from the system. Because running tasks are
            requeued, the user can rerun these tasks by updating their job to target a
            different pool. The tasks can then run on the new pool. If you want to
            override the requeue behavior, then you should call resize pool explicitly
            to shrink the pool to zero size before deleting the pool. If you call an
            Update, Patch or Delete API on a pool in the deleting state, it will fail
            with HTTP status code 409 with error code PoolBeingDeleted.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to delete.
            </param>
            <param name='poolDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to get.
            </param>
            <param name='poolExistsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Threading.CancellationToken)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to get.
            </param>
            <param name='poolExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to get.
            </param>
            <param name='poolGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to get.
            </param>
            <param name='poolGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)">
            <summary>
            Updates the properties of the specified pool.
            </summary>
            <remarks>
            This only replaces the pool properties specified in the request. For
            example, if the pool has a start task associated with it, and a request
            does not specify a start task element, then the pool keeps the existing
            start task.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to update.
            </param>
            <param name='poolPatchParameter'>
            The parameters for the request.
            </param>
            <param name='poolPatchOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified pool.
            </summary>
            <remarks>
            This only replaces the pool properties specified in the request. For
            example, if the pool has a start task associated with it, and a request
            does not specify a start task element, then the pool keeps the existing
            start task.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to update.
            </param>
            <param name='poolPatchParameter'>
            The parameters for the request.
            </param>
            <param name='poolPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool on which to disable automatic scaling.
            </param>
            <param name='poolDisableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool on which to disable automatic scaling.
            </param>
            <param name='poolDisableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <remarks>
            You cannot enable automatic scaling on a pool if a resize operation is in
            progress on the pool. If automatic scaling of the pool is currently
            disabled, you must specify a valid autoscale formula as part of the
            request. If automatic scaling of the pool is already enabled, you may
            specify a new autoscale formula and/or a new evaluation interval. You
            cannot call this API for the same pool more than once every 30 seconds.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool on which to enable automatic scaling.
            </param>
            <param name='poolEnableAutoScaleParameter'>
            The parameters for the request.
            </param>
            <param name='poolEnableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <remarks>
            You cannot enable automatic scaling on a pool if a resize operation is in
            progress on the pool. If automatic scaling of the pool is currently
            disabled, you must specify a valid autoscale formula as part of the
            request. If automatic scaling of the pool is already enabled, you may
            specify a new autoscale formula and/or a new evaluation interval. You
            cannot call this API for the same pool more than once every 30 seconds.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool on which to enable automatic scaling.
            </param>
            <param name='poolEnableAutoScaleParameter'>
            The parameters for the request.
            </param>
            <param name='poolEnableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the pool.
            </summary>
            <remarks>
            This API is primarily for validating an autoscale formula, as it simply
            returns the result without applying the formula to the pool.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool on which to evaluate the automatic scaling formula.
            </param>
            <param name='autoScaleFormula'>
            The formula for the desired number of compute nodes in the pool. The
            formula is validated and its results calculated, but it is not applied to
            the pool. To apply the formula to the pool, 'Enable automatic scaling on a
            pool'. For more information about specifying this formula, see
            Automatically scale compute nodes in an Azure Batch pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
            </param>
            <param name='poolEvaluateAutoScaleOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the pool.
            </summary>
            <remarks>
            This API is primarily for validating an autoscale formula, as it simply
            returns the result without applying the formula to the pool.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool on which to evaluate the automatic scaling formula.
            </param>
            <param name='autoScaleFormula'>
            The formula for the desired number of compute nodes in the pool. The
            formula is validated and its results calculated, but it is not applied to
            the pool. To apply the formula to the pool, 'Enable automatic scaling on a
            pool'. For more information about specifying this formula, see
            Automatically scale compute nodes in an Azure Batch pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
            </param>
            <param name='poolEvaluateAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <remarks>
            You can only resize a pool when its allocation state is steady. If the pool
            is already resizing, the request fails with status code 409. When you
            resize a pool, the pool's allocation state changes from steady to resizing.
            You cannot resize pools which are configured for automatic scaling. If you
            try to do this, the Batch service returns an error 409. If you resize a
            pool downwards, the Batch service chooses which nodes to remove. To remove
            specific nodes, use the pool remove nodes API instead.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to resize.
            </param>
            <param name='poolResizeParameter'>
            The parameters for the request.
            </param>
            <param name='poolResizeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Threading.CancellationToken)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <remarks>
            You can only resize a pool when its allocation state is steady. If the pool
            is already resizing, the request fails with status code 409. When you
            resize a pool, the pool's allocation state changes from steady to resizing.
            You cannot resize pools which are configured for automatic scaling. If you
            try to do this, the Batch service returns an error 409. If you resize a
            pool downwards, the Batch service chooses which nodes to remove. To remove
            specific nodes, use the pool remove nodes API instead.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to resize.
            </param>
            <param name='poolResizeParameter'>
            The parameters for the request.
            </param>
            <param name='poolResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)">
            <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
            <remarks>
            This does not restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the pool
            maintains its current state. A resize operation need not be an explicit
            resize pool request; this API can also be used to halt the initial sizing
            of the pool when it is created.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool whose resizing you want to stop.
            </param>
            <param name='poolStopResizeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
            <remarks>
            This does not restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the pool
            maintains its current state. A resize operation need not be an explicit
            resize pool request; this API can also be used to halt the initial sizing
            of the pool when it is created.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool whose resizing you want to stop.
            </param>
            <param name='poolStopResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)">
            <summary>
            Updates the properties of the specified pool.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the pool. For example,
            if the pool has a start task associated with it and if start task is not
            specified with this request, then the Batch service will remove the
            existing start task.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to update.
            </param>
            <param name='poolUpdatePropertiesParameter'>
            The parameters for the request.
            </param>
            <param name='poolUpdatePropertiesOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified pool.
            </summary>
            <remarks>
            This fully replaces all the updateable properties of the pool. For example,
            if the pool has a start task associated with it and if start task is not
            specified with this request, then the Batch service will remove the
            existing start task.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to update.
            </param>
            <param name='poolUpdatePropertiesParameter'>
            The parameters for the request.
            </param>
            <param name='poolUpdatePropertiesOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <remarks>
            During an upgrade, the Batch service upgrades each compute node in the
            pool. When a compute node is chosen for upgrade, any tasks running on that
            node are removed from the node and returned to the queue to be rerun later
            (or on a different compute node). The node will be unavailable until the
            upgrade is complete. This operation results in temporarily reduced pool
            capacity as nodes are taken out of service to be upgraded. Although the
            Batch service tries to avoid upgrading all compute nodes at the same time,
            it does not guarantee to do this (particularly on small pools); therefore,
            the pool may be temporarily unavailable to run tasks. When this operation
            runs, the pool state changes to upgrading. When all compute nodes have
            finished upgrading, the pool state returns to active.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to upgrade.
            </param>
            <param name='targetOSVersion'>
            The Azure Guest OS version to be installed on the virtual machines in the
            pool.
            </param>
            <param name='poolUpgradeOSOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Threading.CancellationToken)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <remarks>
            During an upgrade, the Batch service upgrades each compute node in the
            pool. When a compute node is chosen for upgrade, any tasks running on that
            node are removed from the node and returned to the queue to be rerun later
            (or on a different compute node). The node will be unavailable until the
            upgrade is complete. This operation results in temporarily reduced pool
            capacity as nodes are taken out of service to be upgraded. Although the
            Batch service tries to avoid upgrading all compute nodes at the same time,
            it does not guarantee to do this (particularly on small pools); therefore,
            the pool may be temporarily unavailable to run tasks. When this operation
            runs, the pool state changes to upgrading. When all compute nodes have
            finished upgrading, the pool state returns to active.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool to upgrade.
            </param>
            <param name='targetOSVersion'>
            The Azure Guest OS version to be installed on the virtual machines in the
            pool.
            </param>
            <param name='poolUpgradeOSOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <remarks>
            This operation can only run when the allocation state of the pool is
            steady. When this operation runs, the allocation state changes from steady
            to resizing.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool from which you want to remove nodes.
            </param>
            <param name='nodeRemoveParameter'>
            The parameters for the request.
            </param>
            <param name='poolRemoveNodesOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Threading.CancellationToken)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <remarks>
            This operation can only run when the allocation state of the pool is
            steady. When this operation runs, the allocation state changes from steady
            to resizing.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The ID of the pool from which you want to remove nodes.
            </param>
            <param name='nodeRemoveParameter'>
            The parameters for the request.
            </param>
            <param name='poolRemoveNodesOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <remarks>
            If you do not specify a $filter clause including a poolId, the response
            includes all pools that existed in the account in the time range of the
            returned aggregation intervals.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListUsageMetricsNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <remarks>
            If you do not specify a $filter clause including a poolId, the response
            includes all pools that existed in the account in the time range of the
            returned aggregation intervals.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListUsageMetricsNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.TaskOperations">
            <summary>
            TaskOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the TaskOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.TaskOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.AddWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='jobId'>
            The ID of the job to which the task is to be added.
            </param>
            <param name='task'>
            The task to be added.
            </param>
            <param name='taskAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.ListWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='taskListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.AddCollectionWithHttpMessagesAsync(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <remarks>
            Note that each task must have a unique ID. The Batch service may not return
            the results for each task in the same order the tasks were submitted in
            this request. If the server times out or the connection is closed during
            the request, the request may have been partially or fully processed, or not
            at all. In such cases, the user should re-issue the request. Note that it
            is up to the user to correctly handle failures when re-issuing a request.
            For example, you should use the same task ids during a retry so that if the
            prior operation succeeded, the retry will not create extra tasks
            unexpectedly.
            </remarks>
            <param name='jobId'>
            The ID of the job to which the task collection is to be added.
            </param>
            <param name='value'>
            The collection of tasks to add.
            </param>
            <param name='taskAddCollectionOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.DeleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <remarks>
            When a task is deleted, all of the files in its directory on the compute
            node where it ran are also deleted (regardless of the retention time). For
            multi-instance tasks, the delete task operation applies synchronously to
            the primary task; subtasks and their files are then deleted asynchronously
            in the background.
            </remarks>
            <param name='jobId'>
            The ID of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The ID of the task to delete.
            </param>
            <param name='taskDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified task.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task to get information about.
            </param>
            <param name='taskGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to update.
            </param>
            <param name='constraints'>
            Constraints that apply to this task. If omitted, the task is given the
            default constraints.
            </param>
            <param name='taskUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.ListSubtasksWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
            <remarks>
            If the task is not a multi-instance task then this returns an empty
            collection.
            </remarks>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='taskId'>
            The ID of the task.
            </param>
            <param name='taskListSubtasksOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.TerminateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <remarks>
            When the task has been terminated, it moves to the completed state. For
            multi-instance tasks, the terminate task operation applies synchronously to
            the primary task; subtasks are then terminated asynchronously in the
            background.
            </remarks>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to terminate.
            </param>
            <param name='taskTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.ReactivateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reactivates the specified task.
            </summary>
            <remarks>
            Reactivation makes a task eligible to be retried again up to its maximum
            retry count. The task's state is changed to active. As the task is no
            longer in the completed state, any previous exit code or scheduling error
            is no longer available after reactivation. This will fail for tasks that
            are not completed or that previously completed successfully (with an exit
            code of 0). Additionally, this will fail if the job has completed (or is
            terminating or deleting).
            </remarks>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to reactivate.
            </param>
            <param name='taskReactivateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='taskListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions">
            <summary>
            Extension methods for TaskOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to which the task is to be added.
            </param>
            <param name='task'>
            The task to be added.
            </param>
            <param name='taskAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to which the task is to be added.
            </param>
            <param name='task'>
            The task to be added.
            </param>
            <param name='taskAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='taskListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='taskListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <remarks>
            Note that each task must have a unique ID. The Batch service may not return
            the results for each task in the same order the tasks were submitted in
            this request. If the server times out or the connection is closed during
            the request, the request may have been partially or fully processed, or not
            at all. In such cases, the user should re-issue the request. Note that it
            is up to the user to correctly handle failures when re-issuing a request.
            For example, you should use the same task ids during a retry so that if the
            prior operation succeeded, the retry will not create extra tasks
            unexpectedly.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to which the task collection is to be added.
            </param>
            <param name='value'>
            The collection of tasks to add.
            </param>
            <param name='taskAddCollectionOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <remarks>
            Note that each task must have a unique ID. The Batch service may not return
            the results for each task in the same order the tasks were submitted in
            this request. If the server times out or the connection is closed during
            the request, the request may have been partially or fully processed, or not
            at all. In such cases, the user should re-issue the request. Note that it
            is up to the user to correctly handle failures when re-issuing a request.
            For example, you should use the same task ids during a retry so that if the
            prior operation succeeded, the retry will not create extra tasks
            unexpectedly.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job to which the task collection is to be added.
            </param>
            <param name='value'>
            The collection of tasks to add.
            </param>
            <param name='taskAddCollectionOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <remarks>
            When a task is deleted, all of the files in its directory on the compute
            node where it ran are also deleted (regardless of the retention time). For
            multi-instance tasks, the delete task operation applies synchronously to
            the primary task; subtasks and their files are then deleted asynchronously
            in the background.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The ID of the task to delete.
            </param>
            <param name='taskDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <remarks>
            When a task is deleted, all of the files in its directory on the compute
            node where it ran are also deleted (regardless of the retention time). For
            multi-instance tasks, the delete task operation applies synchronously to
            the primary task; subtasks and their files are then deleted asynchronously
            in the background.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The ID of the task to delete.
            </param>
            <param name='taskDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)">
            <summary>
            Gets information about the specified task.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task to get information about.
            </param>
            <param name='taskGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified task.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job that contains the task.
            </param>
            <param name='taskId'>
            The ID of the task to get information about.
            </param>
            <param name='taskGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to update.
            </param>
            <param name='constraints'>
            Constraints that apply to this task. If omitted, the task is given the
            default constraints.
            </param>
            <param name='taskUpdateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to update.
            </param>
            <param name='constraints'>
            Constraints that apply to this task. If omitted, the task is given the
            default constraints.
            </param>
            <param name='taskUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)">
            <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
            <remarks>
            If the task is not a multi-instance task then this returns an empty
            collection.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='taskId'>
            The ID of the task.
            </param>
            <param name='taskListSubtasksOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
            <remarks>
            If the task is not a multi-instance task then this returns an empty
            collection.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job.
            </param>
            <param name='taskId'>
            The ID of the task.
            </param>
            <param name='taskListSubtasksOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)">
            <summary>
            Terminates the specified task.
            </summary>
            <remarks>
            When the task has been terminated, it moves to the completed state. For
            multi-instance tasks, the terminate task operation applies synchronously to
            the primary task; subtasks are then terminated asynchronously in the
            background.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to terminate.
            </param>
            <param name='taskTerminateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <remarks>
            When the task has been terminated, it moves to the completed state. For
            multi-instance tasks, the terminate task operation applies synchronously to
            the primary task; subtasks are then terminated asynchronously in the
            background.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to terminate.
            </param>
            <param name='taskTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions)">
            <summary>
            Reactivates the specified task.
            </summary>
            <remarks>
            Reactivation makes a task eligible to be retried again up to its maximum
            retry count. The task's state is changed to active. As the task is no
            longer in the completed state, any previous exit code or scheduling error
            is no longer available after reactivation. This will fail for tasks that
            are not completed or that previously completed successfully (with an exit
            code of 0). Additionally, this will fail if the job has completed (or is
            terminating or deleting).
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to reactivate.
            </param>
            <param name='taskReactivateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Threading.CancellationToken)">
            <summary>
            Reactivates the specified task.
            </summary>
            <remarks>
            Reactivation makes a task eligible to be retried again up to its maximum
            retry count. The task's state is changed to active. As the task is no
            longer in the completed state, any previous exit code or scheduling error
            is no longer available after reactivation. This will fail for tasks that
            are not completed or that previously completed successfully (with an exit
            code of 0). Additionally, this will fail if the job has completed (or is
            terminating or deleting).
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The ID of the job containing the task.
            </param>
            <param name='taskId'>
            The ID of the task to reactivate.
            </param>
            <param name='taskReactivateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='taskListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <remarks>
            For multi-instance tasks, information such as affinityId, executionInfo and
            nodeInfo refer to the primary task. Use the list subtasks API to retrieve
            information about subtasks.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='taskListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchConstants">
            <summary>
            Constants defined in batch client.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.GroupVersionStringFormat">
            <summary>
            String format for Batch API group version.
            [YYYY-MM-DD]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MajorMinorVersionStringFormat">
            <summary>
            String format for Batch API major minor version.
            [Major.Minor]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.ApiVersionStringFormat">
            <summary>
            String format for Batch API version.
            [GroupVersion.MajorMinorVersion]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.UTF8CharSet">
            <summary>
            utf-8 char set.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MetadataStringInUri">
            <summary>
            metadata string in url.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceMaxResults">
            <summary>
            The maximum results the Batch service can return.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.KB">
            <summary>
            A constant representing a kilo-byte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MB">
            <summary>
            A constant representing a megabyte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.GB">
            <summary>
            A constant representing a megabyte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceRequestMaxPayload">
            <summary>
            The maximum size of a string property for the Batch service in bytes, 4MB is the limit.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceResponseMaxPayload">
            <summary>
            The maximum payload the Batch service can return (1000 * 4MB).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.ForwardSlash">
            <summary>
            Forward slash.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.PropertySeparator">
            <summary>
            Property separator.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.LogSourceName">
            <summary>
            Common name to be used for all loggers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.DefaultCertificateAlgorithm">
            <summary>
            The default certificate algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.CertificateAlgorithmAndThumbprintDelimiter">
            <summary>
            Delimiter for the composition of certificate's algorithm and thumbprint.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.EntityNameSpace">
            <summary>
            The namespace for all entity types defined in the EdmModel.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.EntityNameSpaceDot">
            <summary>
            The entity namespace plus dot in the end.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.BatchCustomHeaderNamePrefix">
            <summary>
            The prefix for a Batch custom header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.AzureCustomHeaderNamePrefix">
            <summary>
            The prefix for an Azure custom header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Date">
            <summary>
            The date.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.KeyNameHeader">
            <summary>
            The key-name.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.RequestId">
            <summary>
            A unique id for the current operation which is generated by the Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no decoration such as curly braces 
            e.g. client-request-id: 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ReturnClientRequestId">
            <summary>
            The request header instructs whether the server to include the client-request-id in the response.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.DataServiceVersion">
            <summary>
            The OData service version header.
            If specified by a client it means the client can interpret a message with the indicated version of the OData protocol. 
            The Batch service returns the OData version of the response.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.MinDataServiceVersion">
            <summary>
            The minimum OData service version header.
            If specified it means that the response can be interpreted by a client that
            knows at least the indicated version (or later). 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.MaxDataServiceVersion">
            <summary>
            The maximum OData service version header.
            If specified it means that the response can be interpreted by a client 
            that only knows up to the version indicated in this header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentType">
            <summary>
            Request: Mime type of request body (PUT/POST/PATCH) 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentLength">
            <summary>
            Content length header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentId">
            <summary>
            Content-ID header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Disabled">
            <summary>
            Disable header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.IsDirectory">
            <summary>
            IsDirectory header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.FileUrl">
            <summary>
            FileUrl Header
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CreationTime">
            <summary>
            Creation time (file).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CustomRange">
            <summary>
            file range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CustomRangeFormat">
            <summary>
            File range format in the header.
            {0} the file beginning position to read.
            {1} the file end position to read.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.DataServiceId">
            <summary>
            The Batch service returns this header if responding with no body to POST, PUT, PATCH.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Location">
            <summary>
            Location header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ETag">
            <summary>
            ETag.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.LastModified">
            <summary>
            The last-modified header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2">
            <summary>
            A base class for all Batch service requests. Represents the information required to make a particular call with no request body to the Batch service REST API.
            </summary>
            <typeparam name="TOptions">The type of the parameters passed outside the request body associated with the request.</typeparam>
            <typeparam name="TResponse">The response type expected from the request.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.CustomHeaders">
            <summary>
            Gets the headers used for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ServiceRequestFunc">
            <summary>
            Gets or sets the function which will create a <see cref="T:System.Threading.Tasks.Task"/> calling the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.Options">
            <summary>
            Gets or sets the options used for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.Microsoft#Azure#Batch#Protocol#IBatchRequest#Options">
            <summary>
            Gets the options needed by the REST proxy for the current request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.RestClient">
            <summary>
            Gets the REST client that will be used for this request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.RetryPolicy">
            <summary>
            Gets or sets the retry policy to be applied.
            Null means no retries will be attempted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.OperationContext">
            <summary>
            Gets the operation context associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.Timeout">
            <summary>
            Gets or sets the client side timeout for a request to the Batch service.
            </summary>
            <remarks>
            <para>
            This timeout applies to a single Batch service request; if a retry policy is specified, then each retry will be granted the
            full duration of this value.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.CancellationToken">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.CancellationToken"/> associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
            <remarks>
            <para>
            Cancelling this token will cancel the currently ongoing request. This applies to the initial request as well
            as any subsequent requests created due to <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.RetryPolicy"/>. Cancelling this token also forbids all
            future retries of this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ClientRequestIdProvider">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ClientRequestIdProvider"/> used by this request to generate client request ids.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2"/> class.
            </summary>
            <param name="restClient">The REST client to use.</param>
            <param name="cancellationToken">The cancellationToken to use.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ExecuteRequestAsync">
            <summary>
            Executes the request.
            </summary>
            <returns>An asynchronous operation of return type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ThrowIfRequestExecutionHasStarted">
            <summary>
            Throws an exception if request execution has started.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ExecuteRequestWithCancellationAsync(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`1}})">
            <summary>
            Executes the specified function with a cancellation token which is a composite token for the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.Timeout"/>
            and the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.CancellationToken"/>.
            </summary>
            <param name="func">The function defining what work to be called in a cancellable way</param>
            <returns>A task with the async state of the func</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequest`2">
            <summary>
            Represents the information required to make a particular call with no request body to the Batch service REST API.
            </summary>
            <typeparam name="TOptions">The type of the parameters passed outside the request body associated with the request.</typeparam>
            <typeparam name="TResponse">The response type expected from the request.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequest`2.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequest`2"/> class.
            </summary>
            <param name="restClient">The REST client to use.</param>
            <param name="cancellationToken">The cancellationToken to use.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequest`3">
            <summary>
            Represents the information required to make a particular call with a request body of type <typeparamref name="TBody"/> to the Batch service REST API.
            </summary>
            <typeparam name="TBody">The type of the body parameters associated with the request.</typeparam>
            <typeparam name="TOptions">The type of the parameters passed outside the request body associated with the request.</typeparam>
            <typeparam name="TResponse">The response type expected from the request.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest`3.Parameters">
            <summary>
            Gets or sets the parameters passed in the REST API request body.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequest`3.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,`0,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequest`3"/> class.
            </summary>
            <param name="restClient">The REST client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">The cancellationToken to use.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the AccountListNodeAgentSkus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the AccountListNodeAgentSkusNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ApplicationList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ApplicationGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ApplicationListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateCancelDeletionBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateCancelDeletion operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateCancelDeletionBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateCancelDeletionBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeAddUserBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeAddUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeAddUserBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeAddUserBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDeleteUserBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeDeleteUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDeleteUserBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDeleteUserBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeUpdateUserBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeUpdateUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeUpdateUserBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeUpdateUserBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeRebootBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeReboot operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeRebootBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeRebootBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeReimageBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeReimage operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeReimageBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeReimageBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDisableSchedulingBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeDisableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDisableSchedulingBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDisableSchedulingBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeEnableSchedulingBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeEnableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeEnableSchedulingBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeEnableSchedulingBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteLoginSettingsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeGetRemoteLoginSettings operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteLoginSettingsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteLoginSettingsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteDesktopBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeGetRemoteDesktop operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteDesktopBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteDesktopBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromTaskBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileDeleteFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromTaskBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromTaskBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromTaskBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileGetFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromTaskBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromTaskBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromTaskBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileGetNodeFilePropertiesFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromTaskBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromTaskBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromComputeNodeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileDeleteFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromComputeNodeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromComputeNodeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromComputeNodeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileGetFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromComputeNodeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromComputeNodeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromComputeNodeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileGetNodeFilePropertiesFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromComputeNodeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromComputeNodeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileListFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileListFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileListFromTaskNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileListFromComputeNodeNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetAllJobsLifetimeStatisticsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobGetAllJobsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetAllJobsLifetimeStatisticsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetAllJobsLifetimeStatisticsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobPatchBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobPatch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobPatchBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobPatchBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobUpdateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobUpdate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobUpdateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobUpdateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDisableBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobDisable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDisableBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDisableBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobEnableBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobEnable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobEnableBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobEnableBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobTerminateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobTerminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobTerminateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobTerminateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListFromJobSchedule operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListPreparationAndReleaseTaskStatus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListFromJobScheduleNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListPreparationAndReleaseTaskStatusNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleExistsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleExists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleExistsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleExistsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobSchedulePatchBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobSchedulePatch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobSchedulePatchBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobSchedulePatchBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleUpdateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleUpdate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleUpdateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleUpdateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDisableBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleDisable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDisableBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDisableBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleEnableBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleEnable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleEnableBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleEnableBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleTerminateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleTerminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleTerminateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleTerminateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolListPoolUsageMetrics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetAllPoolsLifetimeStatisticsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolGetAllPoolsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetAllPoolsLifetimeStatisticsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetAllPoolsLifetimeStatisticsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolExistsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolExists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolExistsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolExistsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolPatchBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolPatch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolPatchBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolPatchBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDisableAutoScaleBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolDisableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDisableAutoScaleBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDisableAutoScaleBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEnableAutoScaleBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolEnableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEnableAutoScaleBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEnableAutoScaleBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEvaluateAutoScaleBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolEvaluateAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEvaluateAutoScaleBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEvaluateAutoScaleBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolResizeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolResizeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolResizeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolStopResizeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolStopResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolStopResizeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolStopResizeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpdatePropertiesBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolUpdateProperties operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpdatePropertiesBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpdatePropertiesBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpgradeOSBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolUpgradeOS operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpgradeOSBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpgradeOSBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolRemoveNodesBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolRemoveNodes operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolRemoveNodesBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolRemoveNodesBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolListPoolUsageMetricsNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddCollectionBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskAddCollection operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddCollectionBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddCollectionBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskUpdateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskUpdate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskUpdateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskUpdateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListSubtasksBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskListSubtasks operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListSubtasksBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListSubtasksBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskTerminateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskTerminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskTerminateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskTerminateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskReactivateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskReactivate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskReactivateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskReactivateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential">
            <summary>
            Shared key credentials for an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.AccountName">
            <summary>
            Gets the Batch account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.KeyValue">
            <summary>
            Gets the account access key, as a Base64-encoded string.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential"/> class.
            </summary>
            <param name="accountName">The name of the Batch account.</param>
            <param name="keyValue">The access key of the Batch account, as a Base64-encoded string.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Signs a HTTP request with the current credentials.
            </summary>
            <param name="httpRequest">The HTTP request</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous signing operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IBatchRequest">
            <summary>
            Represents a request to the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.RestClient">
            <summary>
            Gets the REST client that will be used for this request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.Options">
            <summary>
            Gets the options needed by the REST proxy for the current request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.RetryPolicy">
            <summary>
            Gets or sets the retry policy to be applied.
            Null means no retries will be attempted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.OperationContext">
            <summary>
            Gets the operation context associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.Timeout">
            <summary>
            Gets or sets the client side timeout for a request to the Batch service.
            </summary>
            <remarks>
            <para>
            This timeout applies to a single Batch service request; if a retry policy is specified, then each retry will be granted the
            full duration of this value.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.CancellationToken">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.CancellationToken"/> associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
            <remarks>
            <para>
            Cancelling this token will cancel the currently ongoing request. This applies to the initial request as well
            as any subsequent requests created due to <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.RetryPolicy"/>. Cancelling this token also forbids all
            future retries of this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.ClientRequestIdProvider">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.ClientRequestIdProvider"/> used by this request to generate client request ids.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IBatchRequest`1">
            <summary>
            Represents a request to the Batch Service with a particular response type.
            </summary>
            <typeparam name="TResponse">The type of the response returned by the Batch service.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IBatchRequest`1.ExecuteRequestAsync">
            <summary>
            Executes the request.
            </summary>
            <returns>An asynchronous operation of return type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequestModificationInterceptHandler">
            <summary>
            Represents a method that intercepts a request to the Batch service in order
            to modify the parameters.
            </summary>
            <param name="request">The parameters of the request being intercepted.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler">
            <summary>
            Represents a method that intercepts a request to the Batch service in order
            to replace the parameters and/or operation context.
            </summary>
            <param name="request">The parameters of the request being intercepted.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor">
            <summary>
            Derived classes can inspect, replace or modify a BatchRequest.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor">
            <summary>
            Initializes a new instance of RequestReplacementInterceptor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler)">
            <summary>
            Initializes a new instance of RequestReplacementInterceptor
            </summary>
            <param name="replacementInterceptor"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.NOOP(Microsoft.Azure.Batch.Protocol.IBatchRequest@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler">
            <summary>
            Gets or sets a method that will be called just before a <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> is executed.
            The request can be inspected, replaced, modified or ignored.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.RequestInterceptor">
            <summary>
            This class enables an interceptor to inspect, modify or ignore a <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.#ctor">
            <summary>
            Initializes a new instance of RequestInterceptor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestModificationInterceptHandler)">
            <summary>
            Initializes a new instance of RequestInterceptor that calls a given BatchRequestModificationInterceptHandler.
            </summary>
            <param name="interceptor">A delegate that will be allowed to inspect, modify or ignore a BatchRequest.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.RequestInterceptor.ModificationInterceptHandler">
            <summary>
            Gets or sets the BatchRequestModificationInterceptHandler.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.NOOP(System.Object)">
            <summary>
            An interceptor that does nothing.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.ReplacementInterceptHandler(Microsoft.Azure.Batch.Protocol.IBatchRequest@)">
            <summary>
            A replacment interceptor that calls our modification interceptor.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.LogLevel">
            <summary>
            Specifies what messages to output to the log.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Off">
            <summary>
            Output no tracing and debugging messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Error">
            <summary>
            Output error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Warning">
            <summary>
            Output warnings and error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Informational">
            <summary>
            Output informational messages, warnings, and error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Verbose">
            <summary>
            Output all debugging and tracing messages.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor">
            <summary>
            A BatchClientBehavior that enables inspection and modification of the BatchResponse.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler">
            <summary>
            A callback that can inspect and modify a BatchResponse.
            </summary>
            <param name="response">The response to be inspected and optionally modified.</param>
            <param name="request">The request to which the <paramref name="response"/> is a response.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor"/> class.
            </summary>
            <param name="responseInterceptHandler">The method to invoke on the intercepted response.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler">
            <summary>
            Gets or sets the method to invoke on the intercepted response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AffinityInformation">
            <summary>
            A locality hint that can be used by the Batch service to select a compute node on which to start a new task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AffinityInformation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AffinityInformation"/> class.
            </summary>
            <param name='affinityId'>An opaque string that represents a previously run task or compute node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.AffinityInformation.AffinityId">
            <summary>
            Gets an opaque string that represents a previously run task or compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AffinityInformation.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#AffinityInformation}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ApplicationPackageReference">
            <summary>
            A reference to an application package to be deployed to compute nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ApplicationPackageReference"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationPackageReference.ApplicationId">
            <summary>
            Gets or sets the id of the application to be deployed on compute nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationPackageReference.Version">
            <summary>
            Gets or sets the version of the application to be deployed on compute nodes.
            </summary>
            <remarks>
            If not specified, the default version of the application, as defined in the application settings, is deployed. 
            If no default version is defined in the application settings, you must specify a version in the <see cref="T:Microsoft.Azure.Batch.ApplicationPackageReference"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ApplicationPackageReference}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ApplicationSummary">
            <summary>
            Contains information about an application in an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationSummary.DisplayName">
            <summary>
            Gets the display name of the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationSummary.Id">
            <summary>
            Gets the id of the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationSummary.Versions">
            <summary>
            Gets a readonly list of available versions of the application.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AuthenticationTokenSettings">
            <summary>
            The settings for an authentication token that the task can use to perform Batch service operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AuthenticationTokenSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AuthenticationTokenSettings"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AuthenticationTokenSettings.Access">
            <summary>
            Gets or sets the Batch resources to which the token grants access.
            </summary>
            <remarks>
            The authentication token grants access only to a limited set of Batch service operations. Currently the only 
            supported value for the Access property is <see cref="F:Microsoft.Azure.Batch.Common.AccessScope.Job"/>, which grants access to all operations 
            related to the job which contains the task.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.AuthenticationTokenSettings.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#AuthenticationTokenSettings}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoPoolSpecification">
            <summary>
            Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool, run all the 
            tasks for the job on it, and by default delete the pool once the job has completed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoPoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AutoPoolSpecification"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.AutoPoolIdPrefix">
            <summary>
            Gets or sets a prefix to be added to the unique identifier when a pool is automatically created.
            </summary>
            <remarks>
            The prefix is optional. If present, it can be up to 20 characters long and must adhere to the usual rules for 
            ids (alphanumeric characters, hyphens and underscores only).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.KeepAlive">
            <summary>
            Gets or sets whether to keep the auto pool alive after its <see cref="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolLifetimeOption"/> expires.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolLifetimeOption">
            <summary>
            Gets or sets the minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to 
            pools.
            </summary>
            <remarks>
            An auto pool may live longer than its PoolLifetimeOption if <see cref="P:Microsoft.Azure.Batch.AutoPoolSpecification.KeepAlive"/> is set.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolSpecification">
            <summary>
            Gets or sets the pool specification for the auto pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoPoolSpecification.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#AutoPoolSpecification}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoScaleRun">
            <summary>
            The results and errors from an evaluation or execution of a pool autoscale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Error">
            <summary>
            Gets details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Results">
            <summary>
            Gets the final values of all variables used in the evaluation of the autoscale formula. Each variable value is 
            returned in the form $variable=value, and variables are separated by semicolons.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Timestamp">
            <summary>
            Gets the time at which the autoscale formula was last evaluated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoScaleRunError">
            <summary>
            An error that occurred when executing or evaluating a pool autoscale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Code">
            <summary>
            Gets a code for the autoscale error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Message">
            <summary>
            Gets a message describing the autoscale error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Values">
            <summary>
            Gets a list of additional error details related to the autoscale error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoUserSpecification">
            <summary>
            Specifies the parameters for the auto user that runs a task on the Batch service
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoUserSpecification.#ctor(System.Nullable{Microsoft.Azure.Batch.Common.AutoUserScope},System.Nullable{Microsoft.Azure.Batch.Common.ElevationLevel})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AutoUserSpecification"/> class.
            </summary>
            <param name='scope'>The scope for the auto user. If omitted, the default is <see cref="F:Microsoft.Azure.Batch.Common.AutoUserScope.Task"/>.</param>
            <param name='elevationLevel'>The elevation level of the auto user. If omitted, the default is <see cref="F:Microsoft.Azure.Batch.Common.ElevationLevel.NonAdmin"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoUserSpecification.ElevationLevel">
            <summary>
            Gets the elevation level of the auto user. If omitted, the default is <see cref="F:Microsoft.Azure.Batch.Common.ElevationLevel.NonAdmin"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoUserSpecification.Scope">
            <summary>
            Gets the scope for the auto user. If omitted, the default is <see cref="F:Microsoft.Azure.Batch.Common.AutoUserScope.Task"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoUserSpecification.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#AutoUserSpecification}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchError">
            <summary>
            An error received from the Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchError.Code">
            <summary>
            Gets a code for the error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchError.Message">
            <summary>
            Gets a message describing the error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchError.Values">
            <summary>
            Gets a collection of key-value pairs containing additional details about the error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchErrorDetail">
            <summary>
            An item of additional information included in a <see cref="T:Microsoft.Azure.Batch.BatchError"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorDetail.Key">
            <summary>
            Gets an identifier specifying the meaning of the <see cref="P:Microsoft.Azure.Batch.BatchErrorDetail.Value"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorDetail.Value">
            <summary>
            Gets the additional information included with the <see cref="T:Microsoft.Azure.Batch.BatchError"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchErrorDetail.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchErrorDetail.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchErrorDetail.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudServiceConfiguration">
            <summary>
            The configuration for compute nodes in a pool based on the Azure Cloud Services platform.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudServiceConfiguration.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration"/> class.
            </summary>
            <param name='osFamily'>The Azure Guest OS family to be installed on the virtual machines in the pool.</param>
            <param name='targetOSVersion'>The Azure Guest OS version to be installed on the virtual machines in the pool. If no value is provided, the 
            Batch service will default to "'*", which specifies the latest operating system version for the <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion">
            <summary>
            Gets the Azure Guest OS version currently installed on the virtual machines in the pool. This may differ from 
            <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> if the pool state is <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily">
            <summary>
            Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
            </summary>
            <remarks>
            For more information about Guest OS families, see https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion">
            <summary>
            Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. If no value is provided, 
            the Batch service will default to "'*", which specifies the latest operating system version for the <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudServiceConfiguration.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#CloudServiceConfiguration}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeError">
            <summary>
            An error encountered by an Azure Batch compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.Code">
            <summary>
            Gets a code for the compute node error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.ErrorDetails">
            <summary>
            Gets a list of additional error details related to the compute node error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.Message">
            <summary>
            Gets a message describing the compute node error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeError.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeError.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeError.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeInformation">
            <summary>
            The compute node information class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.AffinityId">
            <summary>
            Gets an opaque string that contains information about the location of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.ComputeNodeId">
            <summary>
            Gets the compute node id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.ComputeNodeUrl">
            <summary>
            Gets the URL of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.PoolId">
            <summary>
            Gets the pool id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.TaskRootDirectory">
            <summary>
            Gets the root directory of the current task on the compute node. You can use this path to retrieve files created 
            by the task such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.TaskRootDirectoryUrl">
            <summary>
            Gets the URL to the root directory of the current task on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.DeleteCertificateError">
            <summary>
            An error encountered by the Batch service when deleting a certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Code">
            <summary>
            Gets a code for the certificate deletion error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Message">
            <summary>
            Gets a message describing the certificagte deletion error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Values">
            <summary>
            Gets a list of additional error details related to the certificate deletion error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.EnvironmentSetting">
            <summary>
            An environment variable to be set on a task process, such as a job task, start task, job manager task, or job preparation 
            or release task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.EnvironmentSetting"/> class.
            </summary>
            <param name='name'>The name of the environment variable.</param>
            <param name='value'>The value of the environment variable.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.EnvironmentSetting.Name">
            <summary>
            Gets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.EnvironmentSetting.Value">
            <summary>
            Gets the value of the environment variable.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#EnvironmentSetting}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ErrorMessage">
            <summary>
            An error message received in an Azure Batch error response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ErrorMessage.Language">
            <summary>
            Gets the language code of the error message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ErrorMessage.Value">
            <summary>
            Gets the text of the message.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ExitCodeMapping">
            <summary>
            A process exit code and how the Batch service should respond if a task exits with that exit code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeMapping.#ctor(System.Int32,Microsoft.Azure.Batch.ExitOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ExitCodeMapping"/> class.
            </summary>
            <param name='code'>The process exit code.</param>
            <param name='exitOptions'>How the Batch service should respond if the task exits with this exit code.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitCodeMapping.Code">
            <summary>
            Gets the process exit code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitCodeMapping.ExitOptions">
            <summary>
            Gets how the Batch service should respond if the task exits with this exit code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeMapping.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ExitCodeMapping}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeMapping.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeMapping.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeMapping.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitCodeMapping})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ExitCodeRangeMapping">
            <summary>
            A range of exit codes and how the Batch service should respond if a task exits with an exit code within that range.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeRangeMapping.#ctor(System.Int32,System.Int32,Microsoft.Azure.Batch.ExitOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ExitCodeRangeMapping"/> class.
            </summary>
            <param name='start'>The first exit code in the range.</param>
            <param name='end'>The last exit code in the range.</param>
            <param name='exitOptions'>An <see cref="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.ExitOptions" /> specifying how the Batch service should respond if the task exits with an exit 
            code in the range <see cref="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.Start"/> to <see cref="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.End"/> inclusive.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.End">
            <summary>
            Gets the last exit code in the range.
            </summary>
            <remarks>
            Ranges are inclusive. For example, if an <see cref="T:Microsoft.Azure.Batch.ExitCodeRangeMapping" /> specifies Start 8 and End 10, then 
            it matches exit codes 8, 9 and 10.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.ExitOptions">
            <summary>
            Gets an <see cref="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.ExitOptions" /> specifying how the Batch service should respond if the task exits with an 
            exit code in the range <see cref="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.Start"/> to <see cref="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.End"/> inclusive.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitCodeRangeMapping.Start">
            <summary>
            Gets the first exit code in the range.
            </summary>
            <remarks>
            Ranges are inclusive. For example, if an <see cref="T:Microsoft.Azure.Batch.ExitCodeRangeMapping" /> specifies Start 8 and End 10, then 
            it matches exit codes 8, 9 and 10.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeRangeMapping.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ExitCodeRangeMapping}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeRangeMapping.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeRangeMapping.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitCodeRangeMapping.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitCodeRangeMapping})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ExitConditions">
            <summary>
            How the Batch service should respond when a task completes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitConditions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ExitConditions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitConditions.Default">
            <summary>
            Gets or sets how the Batch service should respond if the task fails with an exit condition not covered by any 
            of the other properties.
            </summary>
            <remarks>
            This value is used if the task exits with any nonzero exit code not listed in the <see cref="P:Microsoft.Azure.Batch.ExitConditions.ExitCodes"/> or 
            <see cref="P:Microsoft.Azure.Batch.ExitConditions.ExitCodeRanges"/> collection, with a preprocessing error if the <see cref="P:Microsoft.Azure.Batch.ExitConditions.PreProcessingError"/> property 
            is not present, or with a file upload failure if the <see cref="P:Microsoft.Azure.Batch.ExitConditions.FileUploadError"/> property is not present.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitConditions.ExitCodeRanges">
            <summary>
            Gets or sets a list of task exit code ranges and how the Batch service should respond to them.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitConditions.ExitCodes">
            <summary>
            Gets or sets a list of task exit codes and how the Batch service should respond to them.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitConditions.FileUploadError">
            <summary>
            Gets or sets how the Batch service should respond if a file upload error occurs.
            </summary>
            <remarks>
            If the task exited with an exit code that was specified via <see cref="P:Microsoft.Azure.Batch.ExitConditions.ExitCodes" /> or <see cref="P:Microsoft.Azure.Batch.ExitConditions.ExitCodeRanges" 
            />, and then encountered a file upload error, then the action specified by the exit code takes precedence.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitConditions.PreProcessingError">
            <summary>
            Gets or sets how the Batch service should respond if the task fails to start due to an error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitConditions.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ExitConditions}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitConditions.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitConditions})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitConditions.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitConditions})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitConditions.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitConditions})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ExitOptions">
            <summary>
            How the Batch service should respond to a particular exit condition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ExitOptions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitOptions.DependencyAction">
            <summary>
            Gets or sets an action that the Batch service should take on tasks that depend on this task.
            </summary>
            <remarks>
            The default is <see cref="F:Microsoft.Azure.Batch.Common.DependencyAction.Satisfy"/> for exit code 0, and <see cref="F:Microsoft.Azure.Batch.Common.DependencyAction.Block"/> 
            for all other exit conditions. If the job's <see cref="P:Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies"/> is false, you cannot 
            add a task with this property set.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ExitOptions.JobAction">
            <summary>
            Gets or sets an action to take on the job containing the task, if the task completes with the given exit condition 
            and the job's <see cref="P:Microsoft.Azure.Batch.CloudJob.OnTaskFailure"/> property is <see cref="F:Microsoft.Azure.Batch.Common.OnTaskFailure.PerformExitOptionsJobAction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitOptions.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ExitOptions}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitOptions.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitOptions})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitOptions.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitOptions})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ExitOptions.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ExitOptions})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileProperties">
            <summary>
            The properties of a file on a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.ContentLength">
            <summary>
            Gets the length of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.ContentType">
            <summary>
            Gets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.CreationTime">
            <summary>
            Gets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.FileMode">
            <summary>
            Gets the permission attribute for the file.
            </summary>
            <remarks>
            This property will be returned only for Linux nodes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.LastModified">
            <summary>
            Gets the time at which the file was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ImageReference">
            <summary>
            A reference to an Azure Virtual Machines Marketplace image. To retrieve a list of images supported by the Batch service, 
            see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListNodeAgentSkus(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> and <see cref="P:Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ImageReference"/> class.
            </summary>
            <param name='offer'>The offer type of the Azure Virtual Machines Marketplace image.</param>
            <param name='publisher'>The publisher of the Azure Virtual Machines Marketplace image.</param>
            <param name='sku'>The SKU of the Azure Virtual Machines Marketplace image.</param>
            <param name='version'>The version of the Azure Virtual Machines Marketplace image.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ImageReference.Offer">
            <summary>
            Gets the offer type of the Azure Virtual Machines Marketplace image.
            </summary>
            <remarks>
            For example, UbuntuServer or WindowsServer.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ImageReference.Publisher">
            <summary>
            Gets the publisher of the Azure Virtual Machines Marketplace image.
            </summary>
            <remarks>
            For example, Canonical or MicrosoftWindowsServer.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ImageReference.Sku">
            <summary>
            Gets the SKU of the Azure Virtual Machines Marketplace image.
            </summary>
            <remarks>
            For example, 14.04.0-LTS or 2012-R2-Datacenter.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ImageReference.Version">
            <summary>
            Gets the version of the Azure Virtual Machines Marketplace image.
            </summary>
            <remarks>
            If this property is not specified, it defaults to 'latest', which is the latest version of the image.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ImageReference}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ImageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ImageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ImageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobConstraints">
            <summary>
            Specifies the execution constraints for a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobConstraints"/> class.
            </summary>
            <param name='maxWallClockTime'>The maximum elapsed time that the job may run, measured from the time the job is created.</param>
            <param name='maxTaskRetryCount'>The maximum number of times each task may be retried.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of times each task may be retried.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum elapsed time that the job may run, measured from the time the job is created.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobConstraints.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobConstraints}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobExecutionInformation">
            <summary>
            Information about the execution of an Azure Batch job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.EndTime">
            <summary>
            Gets the completion time of this job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.PoolId">
            <summary>
            Gets the pool Id of this job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.SchedulingError">
            <summary>
            Gets the error encountered by the Batch service in scheduling the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.StartTime">
            <summary>
            Gets the creation time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason">
            <summary>
            Gets the reason for job moving to completed state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobManagerTask">
            <summary>
            Represents an Azure Batch JobManager task. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobManagerTask.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobManagerTask"/> class.
            </summary>
            <param name='id'>The id of the task.</param>
            <param name='commandLine'>The command line of the task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.AllowLowPriorityNode">
            <summary>
            Gets or sets whether the Job Manager task may run on a low-priority compute node. If omitted, the default is 
            false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages that the Batch service will deploy to the compute node before running 
            the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.AuthenticationTokenSettings">
            <summary>
            Gets or sets the settings for an authentication token that the task can use to perform Batch service operations.
            </summary>
            <remarks>
            If this property is set, the Batch service provides the task with an authentication token which can be used to 
            authenticate Batch service operations without requiring an account access key. The token is provided via the 
            AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the task can carry out using the token 
            depend on the settings. For example, a task can request job permissions in order to add other tasks to the job, 
            or check the status of the job or of other tasks.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment 
            variable expansion. If you want to take advantage of such features, you should invoke the shell in the command 
            line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.Constraints">
            <summary>
            Gets or sets the execution constraints for this JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.DisplayName">
            <summary>
            Gets or sets the display name of the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.EnvironmentSettings">
            <summary>
            Gets or sets a set of environment settings for the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.Id">
            <summary>
            Gets or sets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.KillJobOnCompletion">
            <summary>
            Gets or sets a value that indicates whether to terminate all tasks in the job and complete the job when the job 
            manager task completes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.OutputFiles">
            <summary>
            Gets or sets a list of files that the Batch service will upload from the compute node after running the command 
            line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download to the compute node before running the command 
            line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.RunExclusive">
            <summary>
            Gets or sets whether the Job Manager task requires exclusive use of the compute node where it runs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to the task.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobManagerTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobManagerTask}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation">
            <summary>
            The status of the Job Preparation task and Job Release task on a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.ComputeNodeId">
            <summary>
            Gets the id of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.ComputeNodeUrl">
            <summary>
            Gets the URL of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInformation">
            <summary>
            Gets details of the <see cref="P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask">Job Preparation task</see> on this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation">
            <summary>
            Gets details of the <see cref="P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask">Job Release task</see> on this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.PoolId">
            <summary>
            Gets the id of the pool containing the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationTask">
            <summary>
            A Job Preparation task to run before any tasks of the job on any given compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobPreparationTask"/> class.
            </summary>
            <param name='commandLine'>The command line of the task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment 
            variable expansion. If you want to take advantage of such features, you should invoke the shell in the command 
            line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.Constraints">
            <summary>
            Gets or sets the execution constraints provided by the user for this Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.EnvironmentSettings">
            <summary>
            Gets or sets the collection of EnvironmentSetting instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.Id">
            <summary>
            Gets or sets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.RerunOnComputeNodeRebootAfterSuccess">
            <summary>
            Gets or sets whether the Batch service should rerun the Job Preparation task after a compute node reboots.
            </summary>
            <remarks>
            The Job Preparation task is always rerun if a compute node is reimaged, or if the Job Preparation task did not 
            complete (e.g. because the reboot occurred while the task was running). Therefore, you should always write a 
            Job Preparation task to be idempotent and to behave correctly if run multiple times. If this property is not 
            specified, a default value of true is assigned by the Batch service.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download to the compute node before running the command 
            line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to the task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.WaitForSuccess">
            <summary>
            Gets or sets whether the Batch service should wait for the successful completion of the Job Preparation task 
            before scheduling any tasks on the compute node.
            </summary>
            <remarks>
            A Job Preparation task execution is considered successful if its ExitCode is 0. If this property is not specified, 
            a default value of true is assigned by the Batch service.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobPreparationTask}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation">
            <summary>
            Details about the execution of a <see cref="P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask">Job Preparation task</see> on a compute 
            node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
            <remarks>
            This property is only returned if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed"/> state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the program specified on the task command line.
            </summary>
            <remarks>
            This property is only returned if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed"/> state. 
            The exit code for a process reflects the specific convention implemented by the application developer for that 
            process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention 
            used by the application process. Note that the exit code may also be generated by the compute node operating 
            system, such as when a process is forcibly terminated.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.FailureInformation">
            <summary>
            Gets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed"/> state 
            and encountered a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime">
            <summary>
            Gets the most recent time at which this task's execution was retried by the Batch service.
            </summary>
            <remarks>
            This is only returned if the <see cref="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount"/> is not 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.Result">
            <summary>
            Gets the result of the task execution.
            </summary>
            <remarks>
            If the value is <see cref="F:Microsoft.Azure.Batch.Common.TaskExecutionResult.Failure" />, then the details of the failure can be found 
            in the <see cref="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.FailureInformation" /> property.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount">
            <summary>
            Gets the number of times the task has been retried by the Batch service. Every time the task exits with a non-zero 
            exit code, it is deemed a task failure. The Batch service will retry the task up to the limit specified by the 
            <see cref="P:Microsoft.Azure.Batch.JobPreparationTask.Constraints"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running. Note that every time the task is restarted, this value is updated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State">
            <summary>
            Gets the current state of the task.
            </summary>
            <remarks>
            Running means the task is currently running. Completed means the task has completed. The Completed state includes 
            the case where the task exits successfully with exit code 0 and the cases where the system fails to start the 
            task process due to scheduling errors or the retry limit has reached after numerous task failures.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory">
            <summary>
            Gets the root directory of the Job Preparation task on the compute node. You can use this path to retrieve files 
            created by the task, such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Gets the URL to the root directory of the Job Preparation task on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobReleaseTask">
            <summary>
            A Job Release task to run on job completion on any compute node where the job has run.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobReleaseTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobReleaseTask"/> class.
            </summary>
            <param name='commandLine'>The command line of the task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment 
            variable expansion. If you want to take advantage of such features, you should invoke the shell in the command 
            line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings">
            <summary>
            Gets or sets the collection of EnvironmentSetting instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.Id">
            <summary>
            Gets or sets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime">
            <summary>
            Gets or sets the maximum duration of time for which a task is allowed to run from the time it is created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download to the compute node before running the command 
            line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.RetentionTime">
            <summary>
            Gets or sets the duration of time for which files in the task's working directory are retained, from the time 
            it completes execution. After this duration, the task's working directory is reclaimed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to the task.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobReleaseTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobReleaseTask}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation">
            <summary>
            Details about the execution of a <see cref="P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask">Job Release task</see> on a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
            <remarks>
            This property is only returned if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Completed"/> state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the program specified on the task command line.
            </summary>
            <remarks>
            This property is only returned if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Completed"/> state. 
            The exit code for a process reflects the specific convention implemented by the application developer for that 
            process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention 
            used by the application process. Note that the exit code may also be generated by the compute node operating 
            system, such as when a process is forcibly terminated.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.FailureInformation">
            <summary>
            Gets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Completed"/> state and 
            encountered a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.Result">
            <summary>
            Gets the result of the task execution.
            </summary>
            <remarks>
            If the value is <see cref="F:Microsoft.Azure.Batch.Common.TaskExecutionResult.Failure" />, then the details of the failure can be found 
            in the <see cref="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.FailureInformation" /> property.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running. Note that every time the task is restarted, this value is updated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.State">
            <summary>
            Gets the current state of the task.
            </summary>
            <remarks>
            Running means the task is currently running. Completed means the task has completed. The Completed state includes 
            the case where the task exits successfully with exit code 0 and the cases where the system fails to start the 
            task process due to scheduling errors or the retry limit has reached after numerous task failures. 
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.TaskRootDirectory">
            <summary>
            Gets the root directory of the Job Release task on the compute node. You can use this path to retrieve files 
            created by the task, such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Gets the URL to the root directory of the Job Release task on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleExecutionInformation">
            <summary>
            The execution information for a job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime">
            <summary>
            Gets the completion time of the job schedule. This property is only returned for completed job schedules.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime">
            <summary>
            Gets the time at which the next job will be scheduled under this job schedule. This property is only returned 
            for active job schedules.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob">
            <summary>
            Gets the information about the most recent job under the job schedule. Note that this element is only returned 
            if the job schedule contains at least one job under it.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleStatistics">
            <summary>
            Resource usage statistics for a <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.FailedTaskCount">
            <summary>
            Gets the total number of tasks in the job that failed during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.KernelCpuTime">
            <summary>
            Gets the total kernel mode CPU time (per core) consumed by all tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.JobScheduleStatistics.StartTime"/> and this value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.ReadIOGiB">
            <summary>
            Gets the total gibibytes of I/O read from disk by all tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.ReadIOps">
            <summary>
            Gets the total number of disk read operations made by all tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.SucceededTaskCount">
            <summary>
            Gets the total number of tasks successfully completed in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.TaskRetryCount">
            <summary>
            Gets the total number of retries that occurred on all tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.Url">
            <summary>
            Gets the URL of the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.UserCpuTime">
            <summary>
            Gets the total user mode CPU time (per core) consumed by all tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WaitTime">
            <summary>
            Gets the total wait time of all tasks in jobs created under the schedule. The wait time for a task is defined 
            as the elapsed time between the creation of the task and the start of task execution. (If the task is retried 
            due to failures, the wait time is the time to the most recent task execution.)
            </summary>
            <remarks>
            This value is only reported in the account lifetime statistics.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WallClockTime">
            <summary>
            Gets the total wall clock time of all tasks in the job schedule. Note that if any task was retried multiple times, 
            this includes the wall clock time of all the task retries.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WriteIOGiB">
            <summary>
            Gets the total gibibytes of I/O written to disk by all tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WriteIOps">
            <summary>
            Gets the total number of disk write operations made by all tasks in the job schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSchedulingError">
            <summary>
            An error encountered by the Batch service when scheduling a job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Category">
            <summary>
            Gets the category of the job scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Code">
            <summary>
            Gets a code for the job scheduling error. See <see cref="T:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Details">
            <summary>
            Gets a list of additional error details related to the scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Message">
            <summary>
            Gets a message describing the job scheduling error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSpecification">
            <summary>
            The <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification"/> of a <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSpecification.#ctor(Microsoft.Azure.Batch.PoolInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobSpecification"/> class.
            </summary>
            <param name='poolInformation'>The pool on which the Batch service runs the tasks of jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings">
            <summary>
            Gets or sets a list of common environment variable settings.
            </summary>
            <remarks>
            These environment variables are set for all tasks in jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> (including 
            the Job Manager, Job Preparation and Job Release tasks).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Constraints">
            <summary>
            Gets or sets the execution constraints for jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.DisplayName">
            <summary>
            Gets or sets a display name for all jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobManagerTask">
            <summary>
            Gets or sets details of a Job Manager task to be launched when a job is created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task for jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
            <remarks>
            The Batch service will run the Job Preparation task on a compute node before starting any tasks of that job on 
            that compute node.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task for jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>. 
            </summary>
            <remarks>
            The Batch service runs the Job Release task when the job ends, on each compute node where any task of the job 
            has run.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/> 
            as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.OnAllTasksComplete">
            <summary>
            Gets or sets the action the Batch service should take when all tasks in the job are in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Completed"/> 
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.OnTaskFailure">
            <summary>
            Gets or sets the action the Batch service should take when any task in the job fails.
            </summary>
            <remarks>
            A task is considered to have failed if it completes with a non-zero exit code and has exhausted its retry count, 
            or if it had a scheduling error.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.PoolInformation">
            <summary>
            Gets or sets the pool on which the Batch service runs the tasks of jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Priority">
            <summary>
            Gets or sets the priority of jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
            <remarks>
             Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest 
            priority.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies">
            <summary>
            Gets or sets whether tasks in jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> can define dependencies 
            on each other.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSpecification.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobSpecification}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobStatistics">
            <summary>
            Resource usage statistics for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.FailedTaskCount">
            <summary>
            Gets the total number of task failures in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.KernelCpuTime">
            <summary>
            Gets the total kernel mode CPU time (per core) consumed by all tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.JobStatistics.StartTime"/> and this value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.ReadIOGiB">
            <summary>
            Gets the total gibibytes of I/O read from disk by all tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.ReadIOps">
            <summary>
            Gets the total number of disk read operations made by all tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.SucceededTaskCount">
            <summary>
            Gets the total number of tasks successfully completed in the job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.TaskRetryCount">
            <summary>
            Gets the total number of task retries in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.Url">
            <summary>
            Gets the URL of the job statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.UserCpuTime">
            <summary>
            Gets the total user mode CPU time (per core) consumed by all tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WaitTime">
            <summary>
            Gets the total wait time of all tasks in the job. The wait time for a task is defined as the elapsed time between 
            the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time 
            is the time to the most recent task execution.)
            </summary>
            <remarks>
            This value is only reported in the account lifetime statistics.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WallClockTime">
            <summary>
            Gets the total elapsed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WriteIOGiB">
            <summary>
            Gets the total gibibytes of I/O written to disk by all tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WriteIOps">
            <summary>
            Gets the total number of disk write operations made by all tasks in the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.LinuxUserConfiguration">
            <summary>
            Properties used to create a user account on a Linux node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.LinuxUserConfiguration.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.LinuxUserConfiguration"/> class.
            </summary>
            <param name='uid'>The user ID of the user account.</param>
            <param name='gid'>The group ID of the user account.</param>
            <param name='sshPrivateKey'>The SSH private key for the user account.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.LinuxUserConfiguration.Gid">
            <summary>
            Gets or sets the group ID of the user account.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.Azure.Batch.LinuxUserConfiguration.Uid" /> and <see cref="P:Microsoft.Azure.Batch.LinuxUserConfiguration.Gid" /> properties must be specified together or not at all. If not specified, 
            the underlying operating system picks the gid.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.LinuxUserConfiguration.SshPrivateKey">
            <summary>
            Gets or sets the SSH private key for the user account.
            </summary>
            <remarks>
            The private key must not be password protected. The private key is used to automatically configure asymmetric-key 
            based authentication for SSH between nodes in a Linux pool when the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled"/> 
            property is true (it is ignored if <see cref="P:Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled"/> is false). It 
            does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not 
            configured between nodes (no modification of the user's .ssh directory is done)
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.LinuxUserConfiguration.Uid">
            <summary>
            Gets or sets the user ID of the user account.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.Azure.Batch.LinuxUserConfiguration.Uid" /> and <see cref="P:Microsoft.Azure.Batch.LinuxUserConfiguration.Gid" /> properties must be specified together or not at all. If not specified, 
            the underlying operating system picks the uid.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.LinuxUserConfiguration.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#LinuxUserConfiguration}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.MetadataItem">
            <summary>
            A name-value pair associated with a Batch service resource. The Batch service does not assign any meaning to this 
            metadata; it is solely for the use of user code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.MetadataItem"/> class.
            </summary>
            <param name='name'>The name of the <see cref="T:Microsoft.Azure.Batch.MetadataItem"/>.</param>
            <param name='value'>The value of the <see cref="T:Microsoft.Azure.Batch.MetadataItem"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.MetadataItem.Name">
            <summary>
            Gets the name of the <see cref="T:Microsoft.Azure.Batch.MetadataItem"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.MetadataItem.Value">
            <summary>
            Gets the value of the <see cref="T:Microsoft.Azure.Batch.MetadataItem"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#MetadataItem}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.MultiInstanceSettings">
            <summary>
            Settings which specify how to run a multi-instance task. Multi-instance tasks are commonly used to support MPI tasks. 
            For more information see https://azure.microsoft.com/documentation/articles/batch-mpi/.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MultiInstanceSettings.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.MultiInstanceSettings"/> class.
            </summary>
            <param name='numberOfInstances'>The number of compute nodes required by the multi-instance task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download before running the coordination command line.
            </summary>
            <remarks>
            The difference between common resource files and task resource files is that common resource files are downloaded 
            for all subtasks including the primary, whereas task resource files are downloaded only for the primary.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine">
            <summary>
            Gets or sets the command to run on the compute node instances for coordinating among the subtasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances">
            <summary>
            Gets or sets the number of compute nodes required by the multi-instance task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MultiInstanceSettings.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#MultiInstanceSettings}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.NameValuePair">
            <summary>
            Represents a name-value pair.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NameValuePair.Name">
            <summary>
            Gets the name in the name-value pair.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NameValuePair.Value">
            <summary>
            Gets the value in the name-value pair.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NameValuePair.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NameValuePair.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NameValuePair.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.NetworkConfiguration">
            <summary>
            The network configuration for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NetworkConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.NetworkConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NetworkConfiguration.SubnetId">
            <summary>
            Gets or sets the ARM resource identifier of the virtual network subnet which the compute nodes of the pool will 
            join.
            </summary>
            <remarks>
            The virtual network must be in the same region and subscription as the Azure Batch account, and the specified 
            subnet should have enough spare IP addresses to accommodate the number of nodes in the pool. This property can 
            only be specified for pools created with a <see cref="P:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.NetworkConfiguration.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#NetworkConfiguration}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.NodeAgentSku">
            <summary>
            A node agent SKU supported by the Batch service. The Batch node agent is a program that runs on each node in the 
            pool, and provides the command-and-control interface between the node and the Batch service. There are different 
            implementations of the node agent, known as SKUs, for different operating systems.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeAgentSku.Id">
            <summary>
            Gets the id of the node agent SKU.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeAgentSku.OSType">
            <summary>
            Gets the type of operating system compatible with the node agent SKU.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences">
            <summary>
            Gets the list of images verified to be compatible with this node agent SKU. This collection is not exhaustive 
            (the node agent may be compatible with other images).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.OSDisk">
            <summary>
            A reference to an OS disk image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OSDisk.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.CachingType})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.OSDisk"/> class.
            </summary>
            <param name='imageUris'>The collection of Virtual Hard Disk (VHD) URIs.</param>
            <param name='caching'>The type of caching to enable for the OS disk.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.OSDisk.Caching">
            <summary>
            Gets the type of caching to enable for the OS disk.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.OSDisk.ImageUris">
            <summary>
            Gets the collection of Virtual Hard Disk (VHD) URIs.
            </summary>
            <remarks>
            All the VHDs must be identical and must reside in an Azure Storage account within the same subscription and same 
            region as the Batch account. For best performance, it is recommended that each VHD resides in a separate Azure 
            Storage account. Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute nodes. You must supply 
            enough VHD URIs to satisfy the 'targetDedicated' property of the pool. If you do not supply enough VHD URIs, 
            the pool will partially allocate compute nodes, and a resize error will occur.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.OSDisk.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#OSDisk}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.OutputFile">
            <summary>
            A specification for uploading files from an Azure Batch node to another location after the Batch service has finished 
            executing the task process.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFile.#ctor(System.String,Microsoft.Azure.Batch.OutputFileDestination,Microsoft.Azure.Batch.OutputFileUploadOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.OutputFile"/> class.
            </summary>
            <param name='filePattern'>A pattern indicating which file(s) to upload.</param>
            <param name='destination'>The destination for the output file(s).</param>
            <param name='uploadOptions'>Additional options for the upload operation, including under what conditions to perform the upload.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.OutputFile.Destination">
            <summary>
            Gets the destination for the output file(s).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.OutputFile.FilePattern">
            <summary>
            Gets a pattern indicating which file(s) to upload.
            </summary>
            <remarks>
            Both relative and absolute paths are supported. Relative paths are relative to the task working directory. For 
            wildcards, use * to match any character and ** to match any directory. For example, **\*.txt matches any file 
            ending in .txt in the task working directory or any subdirectory. Note that \ and / are treated interchangeably 
            and mapped to the correct directory separator on the compute node operating system.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.OutputFile.UploadOptions">
            <summary>
            Gets additional options for the upload operation, including under what conditions to perform the upload.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFile.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#OutputFile}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFile.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.OutputFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFile.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.OutputFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFile.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.OutputFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.OutputFileBlobContainerDestination">
            <summary>
            Specifies a file upload destination within an Azure blob storage container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFileBlobContainerDestination.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.OutputFileBlobContainerDestination"/> class.
            </summary>
            <param name='containerUrl'>The URL of the container within Azure Blob Storage to which to upload the file(s).</param>
            <param name='path'>The destination blob or virtual directory within the Azure Storage container to which to upload the file(s).</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.OutputFileBlobContainerDestination.ContainerUrl">
            <summary>
            Gets the URL of the container within Azure Blob Storage to which to upload the file(s).
            </summary>
            <remarks>
            The URL must include a Shared Access Signature (SAS) granting write permissions to the container.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.OutputFileBlobContainerDestination.Path">
            <summary>
            Gets the destination blob or virtual directory within the Azure Storage container to which to upload the file(s).
            </summary>
            <remarks>
            <para>If <see cref="P:Microsoft.Azure.Batch.OutputFile.FilePattern"/> refers to a specific file (i.e. it contains no wildcards), then 
            this is the name of the blob to which to upload that file.</para><para>If <see cref="P:Microsoft.Azure.Batch.OutputFile.FilePattern"/> 
            contains wildcards (and may therefore match multiple files), then this then this is the name of the blob virtual 
            directory (which is prepended to each blob name) to which to upload the file(s).</para><para>If omitted, file(s) 
            are uploaded to the root of the container with a blob name matching their file name.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFileBlobContainerDestination.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#OutputFileBlobContainerDestination}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.OutputFileDestination">
            <summary>
            The destination to which a file should be uploaded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.OutputFileDestination.Container">
            <summary>
            Gets a location in Azure blob storage to which files are uploaded.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFileDestination.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#OutputFileDestination}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFileDestination.#ctor(Microsoft.Azure.Batch.OutputFileBlobContainerDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.OutputFileDestination"/> class.
            </summary>
            <param name="container">A location in Azure blob storage to which files are uploaded.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.OutputFileUploadOptions">
            <summary>
            Details about an output file upload operation, including under what conditions to perform the upload.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFileUploadOptions.#ctor(Microsoft.Azure.Batch.Common.OutputFileUploadCondition)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.OutputFileUploadOptions"/> class.
            </summary>
            <param name='uploadCondition'>The conditions under which the file(s) should be uploaded.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.OutputFileUploadOptions.UploadCondition">
            <summary>
            Gets the conditions under which the file(s) should be uploaded.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.OutputFileUploadOptions.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#OutputFileUploadOptions}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolInformation">
            <summary>
            Specifies how a job should be assigned to a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.PoolInformation"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification">
            <summary>
            Gets or sets the properties for the auto pool that will be created.
            </summary>
            <remarks>
            If this property is set, then <see cref="P:Microsoft.Azure.Batch.PoolInformation.PoolId"/> must be left unset.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolInformation.PoolId">
            <summary>
            Gets or sets the name of an existing pool that can be used for running tasks.
            </summary>
            <remarks>
            If this property is set, then <see cref="P:Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification"/> must be left unset.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolInformation.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#PoolInformation}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolSpecification">
            <summary>
            The specification for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.PoolSpecification"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.ApplicationLicenses">
            <summary>
            Gets or sets the list of application licenses the Batch service will make available on each compute node in the 
            pool.
            </summary>
            <remarks>
            The list of application licenses must be a subset of available Batch service application licenses.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application package references to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled">
            <summary>
            Gets or sets whether the pool size should automatically adjust over time.
            </summary>
            <remarks>
            <para>If false, one of the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicatedComputeNodes"/> or <see cref="P:Microsoft.Azure.Batch.PoolSpecification.TargetLowPriorityComputeNodes"/> 
            property is required.</para> <para>If true, the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula"/> property is required. The pool 
            automatically resizes according to the formula.</para> <para>The default value is false.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets a time interval at which to automatically adjust the pool size according to the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula"/>.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum allowed value is 5 minutes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            <para>For how to write autoscale formulas, see https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/. 
            This property is required if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set to true. It must be null if AutoScaleEnabled 
            is false.</para><para>The formula is checked for validity before the pool is created. If the formula is not valid, 
            an exception is thrown when you try to commit the <see cref="T:Microsoft.Azure.Batch.PoolSpecification"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration"/> for the pool.
            </summary>
            <remarks>
            This property is mutually exclusive with <see cref="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled">
            <summary>
            Gets or sets whether the pool permits direct communication between its compute nodes.
            </summary>
            <remarks>
            Enabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes 
            of the pool. This may result in the pool not reaching its desired size.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
            </summary>
            <remarks>
            The default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool 
            (the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize"/> property).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration">
            <summary>
            Gets or sets the network configuration of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the pool.
            </summary>
            <remarks>
            <para>This timeout applies only to manual scaling; it has no effect when <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set 
            to true.</para><para>The default value is 15 minutes. The minimum value is 5 minutes.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to 
            the pool or when the node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicatedComputeNodes">
            <summary>
            Gets or sets the desired number of dedicated compute nodes in the pool.
            </summary>
            <remarks>
            This setting cannot be specified if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set to true. At least one of this property 
            and <see cref="P:Microsoft.Azure.Batch.PoolSpecification.TargetLowPriorityComputeNodes"/> must be specified if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is false. 
            If not specified, the default is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TargetLowPriorityComputeNodes">
            <summary>
            Gets or sets the desired number of low-priority compute nodes in the pool.
            </summary>
            <remarks>
            This setting cannot be specified if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set to true. At least one of <see cref="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicatedComputeNodes"/> 
            and this property must be specified if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is false. If not specified, the default 
            is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed among compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.UserAccounts">
            <summary>
            Gets or sets the list of user accounts to be created on each node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration"/> of the pool.
            </summary>
            <remarks>
            This property is mutually exclusive with <see cref="P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize">
            <summary>
            Gets or sets the size of the virtual machines in the pool.  All virtual machines in a pool are the same size.
            </summary>
            <remarks>
            <para>For information about available sizes of virtual machines for Cloud Services pools (pools created with 
            a <see cref="P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration"/>), see https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/. 
            Batch supports all Cloud Services VM sizes except ExtraSmall.</para><para>For information about available VM 
            sizes for pools using images from the Virtual Machines Marketplace (pools created with a <see cref="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration"/>) 
            see https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/ or https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/. 
            Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (for example STANDARD_GS, 
            STANDARD_DS, and STANDARD_DSV2 series).</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolSpecification.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#PoolSpecification}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicated">
            <summary>
            This property is an alias for <see cref="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicatedComputeNodes"/> and is supported only for backward compatibility.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolStatistics">
            <summary>
            Contains utilization and resource usage statistics for the lifetime of a pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.PoolStatistics.StartTime"/> and this value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.ResourceStatistics">
            <summary>
            Gets statistics related to resource consumption by compute nodes in the pool, such as average CPU utilization.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.Url">
            <summary>
            Gets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.UsageStatistics">
            <summary>
            Gets statistics related to pool usage, such as the amount of core-time used.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolUsageMetrics">
            <summary>
            The usage metrics for a single pool in a certain time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB">
            <summary>
            Gets the cross data center network egress from the pool during this interval, in gibibytes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB">
            <summary>
            Gets the cross data center network ingress to the pool during this interval, in gibibytes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.EndTime">
            <summary>
            Gets the end time of the aggregation interval for this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.PoolId">
            <summary>
            Gets the id of the pool whose metrics are aggregated in this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.StartTime">
            <summary>
            Gets the start time of the aggregation interval covered by this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours">
            <summary>
            Gets the total core hours used in the pool during this aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize">
            <summary>
            Gets the size of virtual machine in the pool. All virtual machines in a pool are the same size. Azure Batch supports 
            all Azure virtual machine sizes except ExtraSmall.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.RecentJob">
            <summary>
            Information about the most recent job under a job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RecentJob.Id">
            <summary>
            Gets the id of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RecentJob.Url">
            <summary>
            Gets the URL of the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.RemoteLoginSettings">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RemoteLoginSettings.IPAddress">
            <summary>
            Gets the IP address used for remote login to the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RemoteLoginSettings.Port">
            <summary>
            Gets the port used for remote login to the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResizeError">
            <summary>
            An error that occurred when resizing a pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Code">
            <summary>
            Gets a code for the pool resize error. See <see cref="T:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Message">
            <summary>
            Gets a message describing the pool resize error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Values">
            <summary>
            Gets a list of additional error details related to the pool resize error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResizeError.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResizeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResizeError.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResizeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResizeError.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResizeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResourceFile">
            <summary>
            A file to be downloaded to a compute node from Azure Blob Storage, such as task executables and task input data files.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ResourceFile"/> class.
            </summary>
            <param name='blobSource'>The URL of the file within Azure Blob Storage.</param>
            <param name='filePath'>The location to which to download the file, relative to the task's working directory.</param>
            <param name='fileMode'>The file permission mode attribute in octal format.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceFile.BlobSource">
            <summary>
            Gets the URL of the file within Azure Blob Storage.
            </summary>
            <remarks>
            This URL should include a shared access signature if the blob is not publicly readable.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceFile.FileMode">
            <summary>
            Gets the file permission mode attribute in octal format.
            </summary>
            <remarks>
            <para>This property is applicable only if the resource file is downloaded to a Linux node. This property will 
            be ignored if it is specified for a <see cref="T:Microsoft.Azure.Batch.ResourceFile"/> which will be downloaded to a Windows node. If 
            this property is not specified for a Linux node, then the default value is 0770.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceFile.FilePath">
            <summary>
            Gets the location to which to download the file, relative to the task's working directory.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ResourceFile}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResourceFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResourceFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResourceFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResourceStatistics">
            <summary>
            The resource statistics data for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageCpuPercentage">
            <summary>
            Gets the average CPU usage across all compute nodes in the pool (percentage per compute node).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageDiskGiB">
            <summary>
            Gets the average used disk space in gibibytes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageMemoryGiB">
            <summary>
            Gets the average memory usage in gibibytes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskReadGiB">
            <summary>
            Gets the total amount of data in gibibytes of disk reads across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskReadIOps">
            <summary>
            Gets the total number of disk read operations across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskWriteGiB">
            <summary>
            Gets the total amount of data in gibibytes of disk writes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskWriteIOps">
            <summary>
            Gets the total number of disk write operations across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.ResourceStatistics.StartTime"/> and this value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.NetworkReadGiB">
            <summary>
            Gets the total amount of data in gibibytes of network reads across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.NetworkWriteGiB">
            <summary>
            Gets the total amount of data in gibibytes of network writes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.PeakDiskGiB">
            <summary>
            Gets the peak used disk space in gibibytes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.PeakMemoryGiB">
            <summary>
            Gets the peak memory usage in gibibytes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Schedule">
            <summary>
            A schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Schedule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Schedule"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.DoNotRunAfter">
            <summary>
            Gets or sets the wall clock time after which no job will be scheduled under this job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.DoNotRunUntil">
            <summary>
            Gets or sets the earliest wall clock time at which to schedule the first job under this job schedule
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.RecurrenceInterval">
            <summary>
            Gets or sets the time interval between the start times of two successive jobs under the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.StartWindow">
            <summary>
            Gets or sets the window of time within which a job must be started from the time the job schedule is ready to 
            be scheduled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Schedule.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#Schedule}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.StartTask">
            <summary>
            A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted 
            or reimaged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.StartTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.StartTask"/> class.
            </summary>
            <param name='commandLine'>The command line of the task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment 
            variable expansion. If you want to take advantage of such features, you should invoke the shell in the command 
            line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.EnvironmentSettings">
            <summary>
            Gets or sets a set of environment settings for the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of retries for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download to the compute node before running the command 
            line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to the task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.WaitForSuccess">
            <summary>
            Gets or sets a value indicating whether the Batch service should wait for the start task to complete before scheduling 
            any tasks on the compute node.
            </summary>
            <remarks>
            If this is not specified, the default is false.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.StartTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#StartTask}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.StartTaskInformation">
            <summary>
            Specifies the detailed runtime information of the start task, including current state, error details, exit code, 
            start time, end time, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.ExitCode">
            <summary>
            Gets the exit code of the program specified on the task command line.
            </summary>
            <remarks>
            This property is only returned if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.StartTaskState.Completed"/> state. The 
            exit code for a process reflects the specific convention implemented by the application developer for that process. 
            If you use the exit code value to make decisions in your code, be sure that you know the exit code convention 
            used by the application process. Note that the exit code may also be generated by the compute node operating 
            system, such as when a process is forcibly terminated.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.FailureInformation">
            <summary>
            Gets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.StartTaskState.Completed"/> state and encountered 
            a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.LastRetryTime">
            <summary>
            Gets the most recent time at which execution of the start task was retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.Result">
            <summary>
            Gets the result of the task execution.
            </summary>
            <remarks>
            If the value is <see cref="F:Microsoft.Azure.Batch.Common.TaskExecutionResult.Failure" />, then the details of the failure can be found 
            in the <see cref="P:Microsoft.Azure.Batch.StartTaskInformation.FailureInformation" /> property.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.RetryCount">
            <summary>
            Gets the number of times the start task has been retried by the Batch system.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.StartTime">
            <summary>
            Gets the time at which the task started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.State">
            <summary>
            Gets the current running state of the start task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.SubtaskInformation">
            <summary>
            Information about an Azure Batch subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation">
            <summary>
            Gets the information about the compute node on which the subtask ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.EndTime">
            <summary>
            Gets the time at which the subtask completed. This property is set only if the subtask is in the <see cref="F:Microsoft.Azure.Batch.Common.SubtaskState.Completed"/> 
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.ExitCode">
            <summary>
            Gets the exit code of the program specified on the subtask command line.
            </summary>
            <remarks>
            This property is only returned if the subtask is in the <see cref="F:Microsoft.Azure.Batch.Common.SubtaskState.Completed"/> state. The 
            exit code for a process reflects the specific convention implemented by the application developer for that process. 
            If you use the exit code value to make decisions in your code, be sure that you know the exit code convention 
            used by the application process. Note that the exit code may also be generated by the compute node operating 
            system, such as when a process is forcibly terminated.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.FailureInformation">
            <summary>
            Gets information describing the task failure, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.Id">
            <summary>
            Gets the id of the subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.PreviousState">
            <summary>
            Gets the previous state of the subtask. This property is not set if the subtask is in its initial <see cref="F:Microsoft.Azure.Batch.Common.SubtaskState.Running"/> 
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the subtask entered its previous state. This property is not set if the subtask is in 
            its initial <see cref="F:Microsoft.Azure.Batch.Common.SubtaskState.Running"/> state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.Result">
            <summary>
            Gets the result of the task execution.
            </summary>
            <remarks>
            If the value is <see cref="F:Microsoft.Azure.Batch.Common.TaskExecutionResult.Failure" />, then the details of the failure can be found 
            in the <see cref="P:Microsoft.Azure.Batch.SubtaskInformation.FailureInformation" /> property.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.StartTime">
            <summary>
            Gets the time at which the subtask started running. If the subtask has been restarted or retried, this is the 
            most recent time at which the subtask started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.State">
            <summary>
            Gets the current state of the subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime">
            <summary>
            Gets the time at which the subtask entered its current state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskConstraints">
            <summary>
            Defines the constraints on a particular Azure Batch task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.TaskConstraints"/> class.
            </summary>
            <param name='maxWallClockTime'>The maximum elapsed time that the task may run, measured from the time the task starts.</param>
            <param name='retentionTime'>The minimum time to retain the working directory for the task on the compute node where it ran, from the time 
            it completes execution. After this time, the Batch service may delete the working directory and all its contents.</param>
            <param name='maxTaskRetryCount'>The maximum number of retries for the task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of retries for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum elapsed time that the task may run, measured from the time the task starts.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.RetentionTime">
            <summary>
            Gets or sets the minimum time to retain the working directory for the task on the compute node where it ran, 
            from the time it completes execution. After this time, the Batch service may delete the working directory and 
            all its contents.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskConstraints.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskConstraints}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskDependencies">
            <summary>
            Specifies any dependencies of a task. Any task that is explicitly specified or within a dependency range must complete 
            before the dependant task will be scheduled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskDependencies.TaskIdRanges">
            <summary>
            Gets the list of task IDs that this task depends on. All tasks in this list must complete successfully before 
            the dependent task can be scheduled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskDependencies.TaskIds">
            <summary>
            Gets the list of task ID ranges that this task depends on. All tasks in all ranges must complete successfully 
            before the dependent task can be scheduled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskDependencies}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.TaskIdRange})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> class.
            </summary>
            <param name="taskIds">The list of task ids that must complete before this task can be scheduled. null is treated as an empty list.</param>
            <param name="taskIdRanges">The list of task ranges that must complete before this task can be scheduled. null is treated as an empty list.</param>
            <remarks>This constructor provides the most general way of initializing a TaskDependencies object.
            In practice, most dependencies are on a single task, a list of task ids, or a single range of
            tasks. You can express these dependencies more clearly using <see cref="M:Microsoft.Azure.Batch.TaskDependencies.OnId(System.String)"/>, <see cref="M:Microsoft.Azure.Batch.TaskDependencies.OnIds(System.String[])"/>,
            <see cref="M:Microsoft.Azure.Batch.TaskDependencies.OnTasks(Microsoft.Azure.Batch.CloudTask[])"/>, and <see cref="M:Microsoft.Azure.Batch.TaskDependencies.OnIdRange(System.Int32,System.Int32)"/> methods.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnId(System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a single task.
            </summary>
            <param name="id">The task to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a single task.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a list of task ids.
            </summary>
            <param name="ids">The tasks to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified tasks.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnIds(System.String[])">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a list of task ids.
            </summary>
            <param name="ids">The tasks to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified tasks.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnTasks(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask})">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a list of tasks.
            </summary>
            <param name="tasks">The tasks to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified tasks.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnTasks(Microsoft.Azure.Batch.CloudTask[])">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a list of tasks.
            </summary>
            <param name="tasks">The tasks to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified tasks.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnIdRange(System.Int32,System.Int32)">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a range of task ids.
            </summary>
            <param name="start">The first task id in the range to depend on.</param>
            <param name="end">The last task id in the range to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified range of tasks.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskExecutionInformation">
            <summary>
            Task execution information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the program specified on the task command line.
            </summary>
            <remarks>
            This property is only returned if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.TaskState.Completed"/> state. The exit 
            code for a process reflects the specific convention implemented by the application developer for that process. 
            If you use the exit code value to make decisions in your code, be sure that you know the exit code convention 
            used by the application process. Note that the exit code may also be generated by the compute node operating 
            system, such as when a process is forcibly terminated.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.FailureInformation">
            <summary>
            Gets information describing the task failure, if any.
            </summary>
            <remarks>
            This property is set only if the task is in the <see cref="F:Microsoft.Azure.Batch.Common.TaskState.Completed"/> state and encountered 
            a failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime">
            <summary>
            Gets the most recent time at which this task's execution was re-queued by the Batch service per user request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime">
            <summary>
            Gets the most recent time at which this task's execution was retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount">
            <summary>
            Gets the number of times this task's execution was re-queued by the Batch service per user request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.Result">
            <summary>
            Gets the result of the task execution.
            </summary>
            <remarks>
            If the value is <see cref="F:Microsoft.Azure.Batch.Common.TaskExecutionResult.Failure" />, then the details of the failure can be found 
            in the <see cref="P:Microsoft.Azure.Batch.TaskExecutionInformation.FailureInformation" /> property.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount">
            <summary>
            Gets the number of times the task has been retried by the Batch service.
            </summary>
            <remarks>
            Task application failures (non-zero exit code) are retried, pre-processing errors (the task could not be run) 
            and file upload errors are not retried. The Batch service will retry the task up to the specified <see cref="P:Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount" 
            />.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskFailureInformation">
            <summary>
            Information about a task failure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskFailureInformation.Category">
            <summary>
            Gets the category of the task error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskFailureInformation.Code">
            <summary>
            Gets a code for the task scheduling error. See <see cref="T:Microsoft.Azure.Batch.Common.TaskFailureInformationCodes"/> for possible 
            values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskFailureInformation.Details">
            <summary>
            Gets a list of additional error details related to the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskFailureInformation.Message">
            <summary>
            Gets a message describing the task error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskIdRange">
            <summary>
            A range of task ids that a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> depends on. All tasks with ids in the range must complete successfully 
            before the dependent task can be scheduled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskIdRange.End">
            <summary>
            Gets the last task id in the range.
            </summary>
            <remarks>
            Ranges are inclusive. For example, if a task depends on a range with End 12, then task "12" must complete before 
            the task can be scheduled.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskIdRange.Start">
            <summary>
            Gets the first task id in the range.
            </summary>
            <remarks>
            Ranges are inclusive. For example, if a task depends on a range with Start 8, then task "8" must complete before 
            the task can be scheduled.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskIdRange}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskIdRange})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskIdRange})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskIdRange})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.TaskIdRange"/> class.
            </summary>
            <param name="start">The first task id in the range.</param>
            <param name="end">The last task id in the range.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="start"/> or <paramref name="end"/> is negative.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="end"/> is less than <paramref name="start"/>.</exception>
            <remarks>
            Ranges are inclusive. For example, if a task depends on a range with Start 8 and End 10, then tasks "8", "9" and "10"
            must complete before the task can be scheduled.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskInformation">
            <summary>
            The compute node's task info class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.ExecutionInformation">
            <summary>
            Gets the execution information for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.JobId">
            <summary>
            Gets the job id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.SubtaskId">
            <summary>
            Gets the subtask id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskId">
            <summary>
            Gets the task id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskState">
            <summary>
            Gets the task state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskUrl">
            <summary>
            Gets the task URL.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskInformation.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskInformation})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskInformation.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskInformation})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskInformation.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskInformation})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskSchedulingPolicy">
            <summary>
            A scheduling policy for a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskSchedulingPolicy.#ctor(Microsoft.Azure.Batch.Common.ComputeNodeFillType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.TaskSchedulingPolicy"/> class.
            </summary>
            <param name='computeNodeFillType'>The fill type of scheduling policy.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingPolicy.ComputeNodeFillType">
            <summary>
            Gets the fill type of scheduling policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskSchedulingPolicy.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskSchedulingPolicy}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskStatistics">
            <summary>
            Resource usage statistics for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.KernelCpuTime">
            <summary>
            Gets the total kernel mode CPU time (per core) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.TaskStatistics.StartTime"/> and this value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.ReadIOGiB">
            <summary>
            Gets the total gibibytes of I/O read from disk by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.ReadIOps">
            <summary>
            Gets the total number of disk read operations made by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.Url">
            <summary>
            Gets the URL of the task statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.UserCpuTime">
            <summary>
            Gets the total user mode CPU time (per core) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WaitTime">
            <summary>
            Gets the total wait time of the task. The wait time for a task is defined as the elapsed time between the creation 
            of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time 
            to the most recent task execution.)
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WallClockTime">
            <summary>
            Gets the wall clock time of the task execution.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WriteIOGiB">
            <summary>
            Gets the total gibibytes of I/O written to disk by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WriteIOps">
            <summary>
            Gets the total number of disk write operations made by the task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.UsageStatistics">
            <summary>
            Statistics related to pool usage data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.DedicatedCoreTime">
            <summary>
            Gets the aggregated wall-clock time of the dedicated compute nodes being part of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.UsageStatistics.StartTime"/> and this value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.UserAccount">
            <summary>
            A user account to create on an Azure Batch node. Tasks may be configured to execute in the security context of the 
            user account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.UserAccount.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ElevationLevel},Microsoft.Azure.Batch.LinuxUserConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.UserAccount"/> class.
            </summary>
            <param name='name'>The name of the user account.</param>
            <param name='password'>The password for the user account.</param>
            <param name='elevationLevel'>The elevation level of the user account.</param>
            <param name='linuxUserConfiguration'>Additional properties used to create a user account on a Linux node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.UserAccount.ElevationLevel">
            <summary>
            Gets or sets the elevation level of the user account.
            </summary>
            <remarks>
            If omitted, the default is <see cref="F:Microsoft.Azure.Batch.Common.ElevationLevel.NonAdmin"/>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.UserAccount.LinuxUserConfiguration">
            <summary>
            Gets or sets additional properties used to create a user account on a Linux node.
            </summary>
            <remarks>
            This property is ignored if specified on a Windows pool. If not specified, the user is created with the default 
            options.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.UserAccount.Name">
            <summary>
            Gets or sets the name of the user account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UserAccount.Password">
            <summary>
            Gets or sets the password for the user account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.UserAccount.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#UserAccount}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UserAccount.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.UserAccount})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.UserAccount.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.UserAccount})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.UserAccount.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.UserAccount})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.UserIdentity">
            <summary>
            The definition of the user identity under which the task is run.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UserIdentity.AutoUser">
            <summary>
            Gets the auto user under which the task is run.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.Azure.Batch.UserIdentity.UserName"/> and <see cref="P:Microsoft.Azure.Batch.UserIdentity.AutoUser"/> properties are mutually exclusive; you must specify one 
            but not both.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.UserIdentity.UserName">
            <summary>
            Gets the name of the user identity under which the task is run.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.Azure.Batch.UserIdentity.UserName"/> and <see cref="P:Microsoft.Azure.Batch.UserIdentity.AutoUser"/> properties are mutually exclusive; you must specify one 
            but not both.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.UserIdentity.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#UserIdentity}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UserIdentity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.UserIdentity"/> class.
            </summary>
            <param name="userName">The user name of the user identity.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.UserIdentity.#ctor(Microsoft.Azure.Batch.AutoUserSpecification)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.UserIdentity"/> class.
            </summary>
            <param name="autoUserSpecification">The auto user under which the task is run.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.VirtualMachineConfiguration">
            <summary>
            The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor(System.String,Microsoft.Azure.Batch.ImageReference,Microsoft.Azure.Batch.OSDisk,Microsoft.Azure.Batch.WindowsConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> class.
            </summary>
            <param name='nodeAgentSkuId'>The SKU of Batch Node Agent to be provisioned on the compute node.</param>
            <param name='imageReference'>A reference to the Azure Virtual Machines Marketplace image to use.</param>
            <param name='osDisk'>A reference to the OS disk image to use.</param>
            <param name='windowsConfiguration'>Windows operating system settings on the virtual machine. This property must not be specified if the ImageReference 
            property specifies a Linux OS image.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference">
            <summary>
            Gets or sets a reference to the Azure Virtual Machines Marketplace image to use.
            </summary>
            <remarks>
            This property and <see cref="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.OSDisk"/> are mutually exclusive and one of the properties must be specified.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId">
            <summary>
            Gets or sets the SKU of Batch Node Agent to be provisioned on the compute node.
            </summary>
            <remarks>
            The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface 
            between the node and the Batch service. There are different implementations of the node agent, known as SKUs, 
            for different operating systems.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.OSDisk">
            <summary>
            Gets or sets a reference to the OS disk image to use.
            </summary>
            <remarks>
            This property can be specified only if the Batch account was created with its poolAllocationMode property set 
            to 'UserSubscription'. This property and <see cref="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference"/> are mutually exclusive and one of the properties 
            must be specified.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration">
            <summary>
            Gets or sets windows operating system settings on the virtual machine. This property must not be specified if 
            the ImageReference property specifies a Linux OS image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.VirtualMachineConfiguration.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#VirtualMachineConfiguration}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.ImageReference,System.String,Microsoft.Azure.Batch.WindowsConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> class.
            </summary>
            <param name='imageReference'>A reference to the Azure Virtual Machines Marketplace image to use.</param>
            <param name='nodeAgentSkuId'>The SKU of Batch Node Agent to be provisioned on the compute node.</param>
            <param name='windowsConfiguration'>Windows operating system settings on the virtual machine. This property must not be specified if the ImageReference 
            property specifies a Linux OS image.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.WindowsConfiguration">
            <summary>
            Windows operating system settings to apply to the virtual machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.WindowsConfiguration.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.WindowsConfiguration"/> class.
            </summary>
            <param name='enableAutomaticUpdates'>Whether automatic updates are enabled on the virtual machine. If unspecified, the default value is true.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.WindowsConfiguration.EnableAutomaticUpdates">
            <summary>
            Gets whether automatic updates are enabled on the virtual machine. If unspecified, the default value is true.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.WindowsConfiguration.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#WindowsConfiguration}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.GetFileRequestByteRange">
            <summary>
            The byte range to retrieve in a file download operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.GetFileRequestByteRange.StartRange">
            <summary>
            Gets the start of the byte range to retrieve.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.GetFileRequestByteRange.EndRange">
            <summary>
            Gets the end of the byte range to retrieve.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.GetFileRequestByteRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.GetFileRequestByteRange"/> class.
            </summary>
            <param name="startRange">The start of the byte range to retrieve.</param>
            <param name="endRange">The end of the byte range to retrieve.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.IFileStagingArtifact">
            <summary>
            Contains information about a file staging process.  File staging is typically performed for
            a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            </summary>
            <remarks>
            <para>
            IFileStagingArtifact allows an application to customize and to obtain information about the process of uploading
            files to the cloud, for example as part of a task-related operation such as
            <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>
            or <see cref="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">CloudJob.AddTaskAsync</see>.  Applications may use this
            information to, for example, find out about containers that were created in Azure Storage as
            part of the upload process.
            </para>
            <para>
            When <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>
            is called, the Batch client sends the tasks to the Batch service in collections.  As each collection is
            processed, the Batch client performs file staging for that collection: it examines the tasks to see if
            any of them specify any <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>, and if so creates a dictionary entry for
            each type of <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/> in the FilesToStage collection. The key of
            the dictionary entry is the <see cref="T:System.Type"/> of the IFileStagingProvider and the value is an instance
            of the corresponding implementation of IFileStagingArtifact.  For example, if FilesToStage includes one or more
            FileToStage objects (from the Microsoft.Azure.Batch.FileStaging library), then the dictionary contains an entry whose key is
            typeof(FileToStage) and whose value is an instance of SequentialFileStagingArtifact.
            </para>
            <para>
            When the Add Task operation completes, or during the Add Task operation if the application is multi-threaded,
            you can examine the dictionary and convert each IFileStagingArtifact to the appropriate type to retrieve
            the type-specific information.  For example, if your Add Task operation specified one or more FileToStage objects,
            you can locate the dictionary entry keyed by typeof(FileToStage), cast the value to SequentialFileStagingArtifact,
            and examine the SequentialFileStagingArtifact.BlobContainerCreated property to
            determine if the upload process created a blob container in Azure Storage and if so the name of that container.
            This example could be useful for cleaning up automatically created containers.
            </para>
            <para>
            (Single-task Add Task operations work similarly, except that in a multi-task Add Task operation, there is
            a dictionary for each collection of tasks, and the dictionaries are collected in a <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/>,
            whereas in a single-task Add Task operation there is only a single dictionary.)
            </para>
            <para>
            In a single-task Add Task operation, you can also use the dictionary to customize the file staging process, by pre-populating it with appropriate
            entries.  For example, suppose you wish to control the <see cref="P:Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment"/> for a group of FileToStage
            objects.  Then you could initialize the dictionary with <c>{ typeof(FileToStage), new SequentialFileStagingArtifact { NamingFragment = "myname" } }</c>
            before passing it to AddTaskAsync.  The FileToStage implementation of IFileStagingProvider would then use your
            SequentialFileStagingArtifact instead of creating its own.  (This feature is not available in multi-task
            Add Task operations.)
            </para>
            <para>
            You may also encounter IFileStagingArtifact if you are developing a custom <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/>.
            In this case you will typically create a custom implementation of IFileStagingArtifact to report
            implementation-specific information about your file staging process.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment">
            <summary>
            Gets or sets a name fragment that can be used when constructing default names.
            </summary>
            <remarks>Although a caller may set this property, the <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/> implementation
            is not required to respect it.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.IInheritedBehaviors">
            <summary>
            Methods and properties that are inherited from the instantiating parent object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors">
            <summary>
            This collection is initially populated by instantiation or by copying from the instantiating parent object (inheritance).
            In this model, the collections are independent but the members are shared references.
            Members of this collection alter or customize various behaviors of Azure Batch Service client objects.
            These behaviors are generally inherited by any child class instances.  
            Modifications are applied in the order of the collection.
            The last write wins.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IModifiable">
            <summary>
            An interface to manage objects that can be modified.
            
            Please use "Explicit Interface Implementation" to hide these methods on public classes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IModifiable.HasBeenModified">
            <summary>
            Returns true if the object has been modified.
            This is recursive through complex child properties.
            
            Note special care must be take for "administrative" property writes as they
            might trigger a false positive on this test.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPagedEnumerable`1">
            <summary>
            Exposes enumerators for a paged collection. These enumerators support simple iteration over a paged collection of a specified type.
            
            Paged collections are backed by one or more calls to the Batch Service.  
            Each of these calls can return a variable sized page of data which is then consumed by the enumerator. 
            </summary>
            <typeparam name="T">The type of objects to enumerate.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator">
            <summary>
            Returns an asynchronous enumerator that iterates through the paged collection.
            </summary>
            <returns>The type of objects to enumerate.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPagedEnumerator`1">
            <summary>
            An enumerator which exposes an asynchronous mechanism for iteration.
            
            Enumerator instances are not threadsafe.
            
            Each enumerator fetches the collection from the server. 
            As a consequence, each enumerator can see different data (collection size, contents, etc.).
            
            Care should be taken to avoid multiple retrievals of the data from the server via casual use of foreach/ForeachAsync and other collection operations.
            
            </summary>
            <typeparam name="T">The type of the enumerator.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Batch.IPagedEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerator`1.MoveNextAsync(System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to advance the enumerator to the next element of the collection.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerator`1.ResetAsync(System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to set the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.IRefreshable">
            <summary>
            Provides a mechanism for refreshing a resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins asynchronous call to refresh the current object.
            </summary>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.  If a detail level which omits the "Name" property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to force a refresh of the current object.
            </summary>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service. If a detail level which omits the "Name" property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobOperations">
            <summary>
            Performs operations on Azure Batch jobs.
            </summary>
            <seealso cref="T:Microsoft.Azure.Batch.CloudJob"/>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.JobOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.CreateJob">
            <summary>
            Creates an instance of CloudJob that is unbound and does not have a consistency relationship to any job in the Batch Service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> representing a new job that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.CreateJob(System.String,Microsoft.Azure.Batch.PoolInformation)">
            <summary>
            Creates an instance of CloudJob that is unbound and does not have a consistency relationship to any job in the Batch Service.
            </summary>
            <param name="jobId">The Id of the job.</param>
            <param name="poolInformation">The information about the pool the job will run on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> representing a new job that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetJobAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="jobId">The id of the job to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> containing information about the specified Azure Batch job.</returns>
            <remarks>The get job operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetJob(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="jobId">The id of the job to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> containing information about the specified Azure Batch job.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetJobAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.EnableJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The enable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.EnableJob(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.EnableJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DisableJobAsync(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables the specified job.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The disable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DisableJob(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables the specified job.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DisableJobAsync(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateJobAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateJob(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.TerminateJobAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteJob(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListTasks(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudTask">tasks</see> of the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate tasks asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetTaskAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="jobId">The id of the job from which to get the task.</param>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>The get task operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetTask(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="jobId">The id of the job from which to get the task.</param>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetTaskAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListSubtasks(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.SubtaskInformation">subtask information</see> of the specified task.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate subtasks asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Adds a single task to a job.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="jobId">The id of the job to which to add the task.</param>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use the multiple-task overload of AddTaskAsync.</para>
            <para>The add task operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds a single task to a job.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="jobId">The id of the job to which to add the task.</param>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A collection of information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use the multiple-task overload of AddTask.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListNodeFiles(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.NodeFile">NodeFiles</see> in the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="taskId">The id of the task.</param>
            <param name="recursive">If true, performs a recursive list of all files of the task. If false, returns only the files in the root task directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateTask(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.TerminateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteTask(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ReactivateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Reactivates a task, allowing it to run again even if its retry count has been exhausted.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            Reactivation makes a task eligible to be retried again up to its maximum retry count.
            </para> 
            <para>
            Additionally, this will fail if the job is in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Completed"/> or <see cref="F:Microsoft.Azure.Batch.Common.JobState.Terminating"/> or <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.ReactivateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            </para>
            <para>
            The reactivate operation runs asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ReactivateTask(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reactivates a task, allowing it to run again even if its retry count has been exhausted.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>
            Reactivation makes a task eligible to be retried again up to its maximum retry count.
            </para> 
            <para>
            This operation will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0).
            </para>
            <para>
            Additionally, this will fail if the job is in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Completed"/> or <see cref="F:Microsoft.Azure.Batch.Common.JobState.Terminating"/> or <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.ReactivateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="filePath">The path of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetNodeFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="filePath">The path of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified file from the task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="filePath">The path of the file to delete.</param>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFile(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified file from the task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="filePath">The path of the file to delete.</param>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="jobId">The id of the job to which to add the tasks.</param>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The add task operation runs asynchronously.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
            <exception cref="T:Microsoft.Azure.Batch.ParallelOperationsException">Thrown if one or more requests to the Batch service fail.</exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="jobId">The id of the job to which to add the tasks.</param>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <remarks>
            <para>This is a blocking operation; for a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
            <exception cref="T:Microsoft.Azure.Batch.ParallelOperationsException">Thrown if one or more requests to the Batch service fail.</exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetAllLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the current account.  
            Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. 
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>The aggregated job statistics.</returns>
            <remarks>The get statistics operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetAllLifetimeStatistics(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the current account.  
            Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. 
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>The aggregated job statistics.</returns>
            <remarks>This is a blocking operation; for a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetAllLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListJobPreparationAndReleaseTaskStatus(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the status of <see cref="P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask"/> and <see cref="P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask"/> tasks for the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate statuses asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the statuses are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; statuses are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleOperations">
            <summary>
            Performs operations on Azure Batch job schedules.
            </summary>
            <seealso cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.JobScheduleOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule">job schedules</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate job schedules asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the job schedules are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; schedules are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> containing information about the specified Azure Batch job schedule.</returns>
            <remarks>The get job schedule operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> containing information about the specified Azure Batch job schedule.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule">
            <summary>
            Creates an instance of CloudJobSchedule that is unbound and does not have a consistency relationship to any job schedule in the Batch Service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> representing a new job schedule that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule(System.String,Microsoft.Azure.Batch.Schedule,Microsoft.Azure.Batch.JobSpecification)">
            <summary>
            Creates an instance of CloudJobSchedule that is unbound and does not have a consistency relationship to any job schedule in the Batch Service.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="schedule">The schedule that determines when jobs will be created.</param>
            <param name="jobSpecification">a <see cref="T:Microsoft.Azure.Batch.JobSpecification" /> containing details of the jobs to be created according to the <paramref name="schedule"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> representing a new job schedule that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables the specified job schedule, allowing jobs to be created according to its <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The enable operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables the specified job schedule, allowing jobs to be created according to its <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables the specified job schedule.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable operation runs asynchronously.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables the specified job schedule.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>The terminate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobs(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> created under the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.NodeFile">
            <summary>
            Exposes methods and properties to access files from Nodes or Tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.IsDirectory">
            <summary>
            Gets the value that indicates whether the file is a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Name">
            <summary>
            Gets the name of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Path">
            <summary>
            Gets the path of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Properties">
            <summary>
            Gets the FileProperties of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Url">
            <summary>
            Gets the URL of the file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.ReadAsStringAsync(System.Text.Encoding,Microsoft.Azure.Batch.GetFileRequestByteRange,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins asynchronous call to return the contents of the file as a string.
            </summary>
            <param name="encoding">The encoding used to interpret the file data. If no value or null is specified, UTF8 is used.</param>
            <param name="byteRange">The file byte range to retrieve. If null, the entire file is retrieved.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.ReadAsString(System.Text.Encoding,Microsoft.Azure.Batch.GetFileRequestByteRange,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to return the contents of the file as a string.
            </summary>
            <param name="encoding">The encoding used to interpret the file data. If no value or null is specified, UTF8 is used.</param>
            <param name="byteRange">The file byte range to retrieve. If null, the entire file is retrieved.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A string containing the contents of the file.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.CopyToStreamAsync(System.IO.Stream,Microsoft.Azure.Batch.GetFileRequestByteRange,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to copy the contents of the file into the given Stream.
            </summary>
            <param name="stream">The stream into which the contents of the file are copied.</param>
            <param name="byteRange">The file byte range to retrieve. If null, the entire file is retrieved.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.CopyToStream(System.IO.Stream,Microsoft.Azure.Batch.GetFileRequestByteRange,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to copy the contents of the file into the given Stream.
            </summary>
            <param name="stream">The stream into which the contents of the file are copied.</param>
            <param name="byteRange">The file byte range to retrieve. If null, the entire file is retrieved.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.DeleteAsync(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to delete the file.
            </summary>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.Delete(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to delete the file.
            </summary>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.NodeFile.Name"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.NodeFile.Name"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors"/>.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.NodeFile.FileItemBox">
            <summary>
            Encapsulates the properties of a FileItem so as to allow atomic replacement for Refresh().
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATADetailLevel">
             <summary>
             Controls the amount of detail requested from the Azure Batch service when listing or
             retrieving resources, using OData query clauses.
             </summary>
             <remarks>
             <para>Azure Batch supports OData queries, which allow the client to gain finer control over query
             performance by controlling which resources are returned in List operations (<see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause"/>),
             and which properties of each resource are returned in List, Get or Refresh operations
             (<see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause"/> and <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/>).</para>
             <para>By default, if you do not pass a <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> to a List, Get or Refresh operation,
             the Batch client specifies no filter (all records are returned), no select clause (all simple properties are
             returned) and no expand clause (associated entities are not returned).  Consequently, by default, associated entity
             properties are null, rather than being populated like other properties.  Refer to individual class
             documentation to find out which properties are considered associated entities and need to be expanded
             to be populated.</para>
             <para>Because the OData queries are passed directly to the REST API, clause strings must use the JSON attribute
             names from the REST API, which are not always the same as .NET property names.  For example, the
             .NET <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize">CloudPool.VirtualMachineSize</see> property corresponds to
             the vmSize attribute in the REST API; therefore, to filter a pool list operations by VM size, you would
             need to write vmSize rather than VirtualMachineSize in your filter string.  Refer to the REST API
             documentation to find out the JSON attribute name corresponding to a .NET property.</para>
             <para>For additional information about using OData to efficiently query the Azure Batch service, see
             <a href="https://azure.microsoft.com/en-us/documentation/articles/batch-efficient-list-queries/">Efficient List Queries</a> on MSDN.</para>
             </remarks>
             <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/>, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics"/>
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code>
             </example>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause">
            <summary>
            Gets or sets the OData filter clause. Used to restrict a list operation to items that match specified criteria.
            </summary>
            <remarks>
            <para>This is an optional OData $filter expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398094">(see the OData specification)</a>.
            For example, you can restrict a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> operation to return
            only active pools with the expression <c>state eq 'active'</c>.</para>
            <para>Filters must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no filter expression, which means all resources are returned.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause">
            <summary>
            Gets or sets the OData select clause. Used to retrieve only specific properties instead of all object properties.
            </summary>
            <remarks>
            <para>This is an optional OData $select expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398163">(see the OData specification)</a>.
            If you provide a SelectClause, then <b>only</b> the properties listed in that clause are populated; other properties
            have their default values (typically null).  For example, if you perform a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>
            operation with a SelectClause of <c>id,displayName</c>, then each <see cref="T:Microsoft.Azure.Batch.CloudPool"/> will have its
            <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName"/> properties
            populated, but other properties such as <see cref="P:Microsoft.Azure.Batch.CloudPool.State"/> will not be retrieved and therefore
            will have their default values (typically null).</para>
            <para>If, when an entity was retrieved (via a List, Get or Refresh), you specifed a SelectClause which did not include
            the property or properties that uniquely identify the object
            (usually the Id property, but for <see cref="T:Microsoft.Azure.Batch.Certificate"/> the Thumbprint and ThumbprintAlgorithm properties,
            then any methods that access the Batch service to retrieve data or perform operations will fail.
            This includes most methods on the object, including <see cref="M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> and <see cref="M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            You can still access properties (though only properties included in the SelectClause will be populated).</para>
            <para>Selections must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no select expression, which means all properties are returned.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause">
            <summary>
            Gets or sets the OData expand clause. Used to retrieve associated entities of the main entity being retrieved.
            </summary>
            <remarks>
            <para>This is an optional OData $expand expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398162">(see the OData specification)</a>.
            Properties containing associated entities will be null unless included in an ExpandClause.
            Specifically, if you perform a List, Get or Refresh and do not specify an ExpandClause, then all associated
            entity properties will be null.  For example, if you perform a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>
            operation without an ExpandClause then the <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics"/> property will be null.  To populate
            the Statistics property you must supply an ExpandClause of <c>stats</c>.  Refer to individual class
            documentation to find out which properties are considered associated entities.</para>
            <para>If you specify both an ExpandClause and a <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause"/>, then properties listed in the
            ExpandClause must be repeated in the SelectClause (because only properties listed in the SelectClause are
            included in the service response).  (This requirement does not arise if you do not specify a SelectClause, because that
            means 'include all properties in the response.')</para>
            <para>Expansions must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no expand expression, which means no associated objects are returned (and the
            corresponding properties are null).</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/> class with the specified clauses.
            </summary>
            <param name="filterClause">The filter clause.</param>
            <param name="selectClause">The select clause.</param>
            <param name="expandClause">The expand clause.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/> class with empty clauses.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitorControl">
            <summary>
            Contains control settings used for optimal retrieval of state data via OData predicates.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATAMonitorControl.DelayBetweenDataFetch">
            <summary>
            The minimum time between attempts to fetch data for a monitored instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitorControl.ODATAPredicateLimit">
            <summary>
            The maximum number of characters allowed for a single OData predicate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ListDelegate`1">
            <summary>
            Use a lambda to construct the correct ListFoo calls with correct params.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitor">
            <summary>
            A class that leverages OData predicates to poll the states of instances.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.WhenAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,System.String},Microsoft.Azure.Batch.ListDelegate{``0},System.Threading.CancellationToken,Microsoft.Azure.Batch.ODATADetailLevel,Microsoft.Azure.Batch.ODATAMonitorControl)">
            <summary>
            Polls the collection of instances until each has passed the condition at least once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionToMonitor"></param>
            <param name="condition"></param>
            <param name="getName"></param>
            <param name="listObjects"></param>
            <param name="cancellationToken"></param>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.</param>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1">
            <summary>
            Will accept instances of T and construct a filter predicate.
            The predicate will be used (and reset) when it is full or if
            the given instance was to recently refreshed (DOS avoidance).
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._condition">
            <summary>
            Holds the delegate that determines of the given instance no longer needs to be polled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._listObjects">
            <summary>
            Delegate to fetch new instances fresh state data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._odataDetailLevel">
            <summary>
            To be updated with filter predicate for refreshing instance state data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._odataMonitorControl">
            <summary>
            Holds control data for this odata monitor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1.SwapQueues">
            <summary>
            Will swap the queues.  This is the transition from one pass to the next.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1.CallListAndProcessResults">
            <summary>
            Uses list func to fetch fresh data on the instances in the predicate.
            Instances that fail the condition are enqueued for the next pass.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.MonitorLastCall`1">
            <summary>
            A class to track the last time an instance was refreshed/monitored.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.OSVersion">
            <summary>
            OSVersion.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumerable`1">
            <summary>
            Exposes synchronous and asynchronous enumerators based on async calls to server.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumerableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for working with sequences that
            implement <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> sequence, invoking an asynchronous delegate for each element.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to iterate over.</param>
            <param name="body">The asynchronous delegate to execute for each element in <paramref name="source"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the iteration operation. The task
            completes when iteration is complete.</returns>
            <remarks>This method processes elements sequentially, not concurrently.  That is, for each element in the
            sequence, the method awaits the asynchronous delegate before processing the next element.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> sequence, invoking an asynchronous delegate for each element.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to iterate over.</param>
            <param name="body">The asynchronous delegate to execute for each element in <paramref name="source"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the iteration operation. The task
            completes when iteration is complete.</returns>
            <remarks>This method processes elements sequentially, not concurrently.  That is, for each element in the
            sequence, the method awaits the asynchronous delegate before processing the next element.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)">
            <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> sequence, invoking a synchronous delegate for each element.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to iterate over.</param>
            <param name="body">The delegate to execute for each element in <paramref name="source"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the iteration operation. The task
            completes when iteration is complete.</returns>
            <remarks>This method processes elements sequentially, not concurrently.  That is, for each element in the
            sequence, the method completes execution of the delegate before processing the next element.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.List`1" /> from an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/>.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to create a list from.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The result
            of the task is a <see cref="T:System.Collections.Generic.List`1" /> containing all elements of the source sequence.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumeratorBase`1">
            <summary>
            Implementents sync and async enumerator based on async calls to server.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolOperations">
            <summary>
            Performs pool-related operations on an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.PoolOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudPool">pools</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate pools asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the pools are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; pools are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetPoolAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="poolId">The id of the pool to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> containing information about the specified Azure Batch pool.</returns>
            <remarks>The get pool operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetPool(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="poolId">The id of the pool to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> containing information about the specified Azure Batch pool.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetPoolAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeletePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name="poolId">The id of the pool to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeletePool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name="poolId">The id of the pool to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeletePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreatePool">
            <summary>
            Creates an instance of CloudPool that is unbound and does not have a consistency relationship to any pool in the Batch service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> representing a new pool that has not been added to the Batch service.
            To add the pool to the Batch account, call <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreatePool(System.String,System.String,Microsoft.Azure.Batch.CloudServiceConfiguration,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates an instance of CloudPool that is unbound and does not have a consistency relationship to any pool in the Batch service.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="virtualMachineSize">
            The size of virtual machines in the pool.  See https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/ for sizes. Batch supports all Azure cloud service VM sizes except ExtraSmall, A1V2 and A2V2.</param>
            <param name="cloudServiceConfiguration">The <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration"/> for the pool.</param>
            <param name="targetDedicatedComputeNodes">
            The desired number of dedicated compute nodes in the pool.
            If <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> are omitted, 
            you must set the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> properties.
            </param>
            <param name="targetLowPriorityComputeNodes">
            The desired number of low-priority compute nodes in the pool.
            If <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> are omitted, 
            you must set the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> properties.
            </param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> representing a new pool that has not been added to the Batch service.
            To add the pool to the Batch account, call <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</returns>
            <remarks>
            <para>For information about Azure Guest OS families, see https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/ </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreatePool(System.String,System.String,Microsoft.Azure.Batch.VirtualMachineConfiguration,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates an instance of CloudPool that is unbound and does not have a consistency relationship to any pool in the Batch service.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="virtualMachineSize">The size of virtual machines in the pool. 
            See https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/ for windows sizes and https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/ for linux sizes.
            </param>
            <param name="virtualMachineConfiguration">The <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> for the pool.</param>
            <param name="targetDedicatedComputeNodes">
            The desired number of dedicated compute nodes in the pool.
            If <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> are omitted, 
            you must set the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> properties.
            </param>
            <param name="targetLowPriorityComputeNodes">
            The desired number of low-priority compute nodes in the pool.
            If <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> are omitted, 
            you must set the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> properties.
            </param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> representing a new pool that has not been added to the Batch service.
            To add the pool to the Batch account, call <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ResizePoolAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Resizes the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetDedicatedComputeNodes">
            The desired number of dedicated compute nodes in the pool.
            At least one of <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> is required.
            </param>
            <param name="targetLowPriorityComputeNodes">
            The desired number of low-priority compute nodes in the pool.
            At least one of <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> is required.
            </param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            </para>
            <para>The resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ResizePool(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Resizes the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetDedicatedComputeNodes">
            The desired number of dedicated compute nodes in the pool.
            At least one of <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> is required.
            </param>
            <param name="targetLowPriorityComputeNodes">
            The desired number of low-priority compute nodes in the pool.
            At least one of <paramref name="targetDedicatedComputeNodes"/> and <paramref name="targetLowPriorityComputeNodes"/> is required.
            </param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ResizePoolAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.StopResizePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Stops a pool resize operation.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>The stop resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.StopResizePool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Stops a pool resize operation.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.StopResizePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListComputeNodes(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate compute nodes asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the nodes are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; nodes are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNodeAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>The get node operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNode(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNodeAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableComputeNodeSchedulingAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables task scheduling on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableComputeNodeScheduling(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables task scheduling on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableComputeNodeScheduling(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableComputeNodeSchedulingAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables task scheduling on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="disableComputeNodeSchedulingOption">Specifies what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableComputeNodeScheduling(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables task scheduling on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="disableComputeNodeSchedulingOption">Specifies what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DisableComputeNodeSchedulingAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="autoscaleEvaluationInterval">The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>The enable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScale(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="autoscaleEvaluationInterval">The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the specified pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on the specified pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>The evaluate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScale(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the specified pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on the specified pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScale(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">
            Specifies how to handle tasks already running, and when the nodes running them may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.
            </param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreateComputeNodeUser(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> representing a new compute node user account that
            does not yet exist in the Batch service.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node where the user account will be created.</param>
            <returns>An unbound <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> representing a new user account that has not been added to the compute node.</returns>
            <remarks>To add the new user, call <see cref="M:Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUserAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified user account from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node from which you want to delete the user account.</param>
            <param name="userName">The name of the user account to be deleted.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can delete a user account from a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUser(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified user account from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node from which you want to delete the user account.</param>
            <param name="userName">The name of the user account to be deleted.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can delete a user account from a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUserAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets a Remote Desktop Protocol (RDP) file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpStream">The <see cref="T:System.IO.Stream"/> into which the RDP file contents will be written.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>This method does not close the <paramref name="rdpStream"/> stream, and it does not reset the position after writing.
            It is the caller's responsibility to close the stream, or to reset the position if required.</para>
            <para>The get RDP file operation runs asynchronously.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/>, then Batch service returns 409 (Conflict). 
            For pools with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property, the new method <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettings(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFile(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets a Remote Desktop Protocol (RDP) file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpStream">The <see cref="T:System.IO.Stream"/> into which the RDP file contents will be written.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This method does not close the <paramref name="rdpStream"/> stream, and it does not reset the position after writing.
            It is the caller's responsibility to close the stream, or to reset the position if required.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/>, then Batch service returns 409 (Conflict). 
            For pools with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property, the new method <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettings(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets a Remote Desktop Protocol file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpFileNameToCreate">The file path at which to create the RDP file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If the file specified by <paramref name="rdpFileNameToCreate"/> already exists, it is overwritten.</para>
            <para>The get RDP file operation runs asynchronously.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/>, then Batch service returns 409 (Conflict). 
            For pools with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property, the new method <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettingsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets a Remote Desktop Protocol file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpFileNameToCreate">The file path at which to create the RDP file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If the file specified by <paramref name="rdpFileNameToCreate"/> already exists, it is overwritten.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/>, then Batch service returns 409 (Conflict). 
            For pools with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property, the new method <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettings(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettingsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The get remote login settings operation runs asynchronously.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" />, then Batch service returns 409 (Conflict). 
            For pools with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettings(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettingsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" />, then Batch service returns 409 (Conflict). 
            For pools with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RebootAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Reboots the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reboot.</param>
            <param name="rebootOption">Specifies when to reboot the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can reboot a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The reboot operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.Reboot(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reboots the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reboot.</param>
            <param name="rebootOption">Specifies when to reboot the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can reboot a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RebootAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ReimageAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reimage.</param>
            <param name="reimageOption">Specifies when to reimage the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can reimage a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The reimage operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.Reimage(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reimage.</param>
            <param name="reimageOption">Specifies when to reimage the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can reimage a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ReimageAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersionAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Changes the operating system version of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>The change version operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersion(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Changes the operating system version of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersionAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets information about a file on a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="filePath">The path of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> containing information about the file, and which can be used to download the file (see <see cref="M:Microsoft.Azure.Batch.NodeFile.CopyToStreamAsync(System.IO.Stream,Microsoft.Azure.Batch.GetFileRequestByteRange,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>).</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets information about a file on a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="filePath">The path of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> containing information about the file, and which can be used to download the file (see <see cref="M:Microsoft.Azure.Batch.NodeFile.CopyToStream(System.IO.Stream,Microsoft.Azure.Batch.GetFileRequestByteRange,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>).</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListNodeFiles(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates files on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="recursive">If true, recursively enumerates all files on the compute node. If false, enumerates only the files in the compute node root directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified file from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="filePath">The path of the file to delete.</param>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFile(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified file from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="filePath">The path of the file to delete.</param>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetAllLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the current account.
            Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>The aggregated pool statistics.</returns>
            <remarks>The get statistics operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetAllLifetimeStatistics(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets lifetime summary statistics for all of the pools in the current account.  
            Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>The aggregated pool statistics.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetAllLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListPoolUsageMetrics(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates pool usage metrics.
            </summary>
            <param name="startTime">The start time of the aggregation interval covered by this entry.</param>
            <param name="endTime">The end time of the aggregation interval for this entry.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate metrics asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the metrics data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; metrics data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListNodeAgentSkus(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the node agent Sku values supported by Batch Service. 
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate node agent sku values asynchronously or synchronously.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PropertyAccessController">
            <summary>
            Controls access to a set of properties.  All reads/writes pass through here.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessController.#ctor(Microsoft.Azure.Batch.BindingState)">
            <summary>
            Creates a new instance of a <see cref="T:Microsoft.Azure.Batch.PropertyAccessController"/>.
            </summary>
            <param name="bindingState">The binding state to set this on this acesss controller.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessController.ReadProperty``1(System.Func{``0},Microsoft.Azure.Batch.BindingAccess,System.String)">
            <summary>
            Executes the specified <paramref name="propertyReadAction"/>.
            </summary>
            <typeparam name="T">The type of the property to read.</typeparam>
            <param name="propertyReadAction">The property read action to execute.</param>
            <param name="allowedAccess">The allowed access of the particular property.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The result of the <paramref name="propertyReadAction"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessController.WriteProperty(System.Action,Microsoft.Azure.Batch.BindingAccess,System.String)">
            <summary>
            Executes the specified <paramref name="propertyWriteAction"/>
            </summary>
            <param name="propertyWriteAction">The write action.</param>
            <param name="allowedAccess">The allowed access of the particular property.</param>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.PropertyAccessor`1">
            <summary>
            Controls access to an individual property of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessor`1.#ctor(Microsoft.Azure.Batch.PropertyAccessController,System.String,Microsoft.Azure.Batch.BindingAccess)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> with the default underlying property value.
            </summary>
            <param name="propertyAccessController">The access controller to use.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="allowedAccess">The allowed access of the property.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessor`1.#ctor(`0,Microsoft.Azure.Batch.PropertyAccessController,System.String,Microsoft.Azure.Batch.BindingAccess)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> with a specific underlying property value.
            </summary>
            <param name="value">The value of the property.</param>
            <param name="propertyAccessController">The access controller to use.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="allowedAccess">The allowed access of the property.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyAccessor`1.Value">
            <summary>
            Gets or sets the value of the underlying property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyAccessor`1.HasBeenModified">
            <summary>
            Gets if this property has been modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyAccessor`1.IsReadOnly">
            <summary>
            Gets or sets a value indicating if this <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> is read only.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessor`1.ThrowIfReadOnly(System.Boolean)">
            <summary>
            Throws an exception if this is marked readonly.
            </summary>
            <param name="overrideReadOnly">If true, this method call will not throw an exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.PropertyCollection">
            <summary>
            A collection of properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyCollection.#ctor(Microsoft.Azure.Batch.BindingState)">
            <summary>
            Creates a new instance of a <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.
            </summary>
            <param name="bindingState">The binding state for the collection.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyCollection.HasBeenModified">
            <summary>
            Gets if any properties in the collection have been modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyCollection.IsReadOnly">
            <summary>
            Gets or sets the readonlyness of this collection and all of it's properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyCollection.CreatePropertyAccessor``1(System.String,Microsoft.Azure.Batch.BindingAccess)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> included in this <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.
            </summary>
            <typeparam name="T">The type of the underlying property.</typeparam>
            <param name="propertyName">The name of the property.</param>
            <param name="allowedAccess">The allowed access of the <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> included in this <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyCollection.CreatePropertyAccessor``1(``0,System.String,Microsoft.Azure.Batch.BindingAccess)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> included in this <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.
            </summary>
            <typeparam name="T">The type of the underlying property.</typeparam>
            <param name="value">The initial value of the underlying property.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="allowedAccess">The allowed access of the <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> included in this <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.#ctor(System.String,Microsoft.Rest.ServiceClientCredentials)">
            <summary>
            instantiate based on creds and base url
            </summary>
            <param name="baseURL"></param>
            <param name="credentials"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            instantiate based on customer provided rest proxy
            </summary>
            <param name="clientToUse"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ExecuteRequestInterceptors``1(Microsoft.Azure.Batch.Protocol.IBatchRequest{``0},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Applies and executes the RequestInterceptors found in behaviors collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ProcessAndExecuteBatchRequest``1(Microsoft.Azure.Batch.Protocol.IBatchRequest{``0},Microsoft.Azure.Batch.BehaviorManager)">
            <summary>
            Process and executes a BatchRequest.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ValidateReturnObject(System.Object,System.Type)">
            <summary>
            Common validation that will throw if an incorrect instance is returned by a custom behavior.
            </summary>
            <param name="proxyObj"></param>
            <param name="expectedType"></param>
        </member>
        <member name="F:Microsoft.Azure.Batch.ProtocolLayer._disposed">
            <summary>
            A value indicating whether or not the ServiceClient has already
            been disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.Dispose">
            <summary>
            Dispose the ProtocolLayer class. This function is not thread-safe.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.RetryPolicyProvider">
            <summary>
            A RequestInterceptor that sets the RetryPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RetryPolicyProvider.Policy">
            <summary>
            Gets or sets the retry policy to use.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.NoRetryProvider">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.NoRetry"/> policy.
            </summary>
            <returns>A provider configured to perform no retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.LinearRetryProvider(System.TimeSpan,System.Int32)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.LinearRetry"/> policy.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries.</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
            <returns>A provider configured to perform linear retries using the specified backoff and max retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.ExponentialRetryProvider(System.TimeSpan,System.Int32)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.ExponentialRetry"/> policy.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries)</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
            <returns>A provider configured to perform exponential retries using the specified backoff and max retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.#ctor(Microsoft.Azure.Batch.Common.IRetryPolicy)">
            <summary>
            Initializes a new behavior to set the retry policy.
            </summary>
            <param name="retryPolicy">The retry policy to set.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior">
            <summary>
            A <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> which specifies how exceptions should be thrown from
            synchronous methods. 
            </summary>
            <remarks>
            By default, synchronous methods throw the same exceptions as asynchronous ones.  For compatability with versions 
            of the Azure.Batch client prior to 4.0, you can specify the <see cref="F:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior.ThrowAggregateException"/> behavior to wrap exceptions 
            thrown from synchronous methods in an <see cref="T:System.AggregateException"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior.ThrowAggregateException">
            <summary>
            This behavior causes synchronous methods to throw <see cref="T:System.AggregateException"/> on failure.
            </summary>
            <remarks>
            This was the default <see cref="T:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior"/> used by Azure.Batch versions prior to 4.0.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskStateMonitor">
            <summary>
            Provides utilities to help monitor CloudTask states.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.TaskStateMonitor"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WhenAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Monitors a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> collection until each of its members has reached a desired state at least once.
            </summary>
            <remarks>
            <para>
            The state of each <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instance is assumed to be authoritative at the time of the call.
            Instances that are already at the <paramref name="desiredState"/> are ignored.
            The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instances in the collection are treated as read-only.
            This means that when the call completes (timeout or not) the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instances should be refreshed before using.
            </para>
            <para>
            This method runs asynchronously.
            </para>
            </remarks>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks. The method will exit when all tasks have reached this state at least once.</param>
            <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <exception cref="T:System.TimeoutException">Thrown if the <paramref name="timeout"/> has elapsed.</exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WhenAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.Threading.CancellationToken,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Monitors a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> collection until each of its members has reached a desired state at least once.
            </summary>
            <remarks>
            <para>
            The state of each <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instance is assumed to be authoritative at the time of the call.
            Instances that are already at the <paramref name="desiredState"/> are ignored.
            The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instances in the collection are treated as read-only.
            This means that when the call completes (timeout or not) the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instances should be refreshed before using.
            </para>
            <para>
            This method runs asynchronously.
            </para>
            </remarks>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks. The method will exit when all tasks have reached this state at least once.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <exception cref="T:System.OperationCanceledException">Thrown if the <paramref name="cancellationToken"/> was cancelled.</exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WaitAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Monitors a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> collection until each of its members has reached a desired state at least once.
            </summary>
            <remarks>
            <para>
            The state of each <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instance is assumed to be authoritative at the time of the call.
            Instances that are already at the <paramref name="desiredState"/> are ignored.
            The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instances in the collection are treated as read-only.
            This means that when the call completes (timeout or not) the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> instances should be refreshed before using.
            </para>
            <para>
            This is a blocking operation. For a non-blocking equivalent, see
            <see cref="M:Microsoft.Azure.Batch.TaskStateMonitor.WhenAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            </remarks>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks. The method will exit when all tasks have reached this state at least once.</param>
            <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors"/>.</param>
            <exception cref="T:System.TimeoutException">Thrown if the <paramref name="timeout"/> has elapsed.</exception>
        </member>
        <member name="T:Microsoft.Azure.Batch.Utilities">
            <summary>
            Tools and utilities for the Azure Batch Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Utilities.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.Utilities"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Utilities.CreateTaskStateMonitor">
            <summary>
            Creates an TaskStateMonitor.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskStateMonitor"/> instance.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.CertificateVisibilityToList(System.Nullable{Microsoft.Azure.Batch.Common.CertificateVisibility})">
            <summary>
            Convert an enum of type CertificateVisibility to a List of Protocol.Models.CertificateVisibility.
            </summary>
            <param name='value'>
            The value to convert.
            </param>
            <returns>
            The enum value to convert into list format.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.AccessScopeToList(Microsoft.Azure.Batch.Common.AccessScope)">
            <summary>
            Convert an enum of type AccessScope to a List of Protocol.Models.AccessScope.
            </summary>
            <param name='value'>
            The value to convert.
            </param>
            <returns>
            The enum value to convert into list format.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.ParseCertificateVisibility(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility})">
            <summary>
            Parse enum values for type CertificateVisibility.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.ParseAccessScope(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.AccessScope})">
            <summary>
            Parse enum values for type AccessScope.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.ConvertToProtocolCollection``1(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ITransportObjectProvider{``0}})">
            <summary>
            Converts a collection of object model items into a corresponding collection of transport layer items.
            If the <paramref name="items"/> collection is null, null is returned.
            </summary>
            <returns>
            A collection of type <typeparam name="T"/> generated by calling 
            <see cref="M:Microsoft.Azure.Batch.ITransportObjectProvider`1.GetTransportObject"/> on each element of the input collection.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.ConvertToProtocolArray``1(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ITransportObjectProvider{``0}})">
            <summary>
            Converts a collection of object model items into a corresponding array of transport layer items.
            If the <paramref name="items"/> collection is null, null is returned.
            </summary>
            <returns>
            A collection of type <typeparam name="T"/> generated by calling 
            <see cref="M:Microsoft.Azure.Batch.ITransportObjectProvider`1.GetTransportObject"/> on each element of the input collection.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.CollectionToNonThreadSafeCollection``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Applies the <paramref name="objectCreationFunc"/> to each item in <paramref name="items"/> and returns a non-threadsafe collection containing the results.
            </summary>
            <typeparam name="TIn">The type of the input collection.</typeparam>
            <typeparam name="TOut">The type of the output collection.</typeparam>
            <param name="items">The collection to convert.</param>
            <param name="objectCreationFunc">The function used to created each <typeparamref name="TOut"/> type object.</param>
            <returns>A non-threadsafe collection containing the results of the conversion, or null if <paramref name="items"/> was null.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.CollectionToThreadSafeCollection``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Applies the <paramref name="objectCreationFunc"/> to each item in <paramref name="items"/> and returns a non-threadsafe collection containing the results.
            </summary>
            <typeparam name="TIn">The type of the input collection.</typeparam>
            <typeparam name="TOut">The type of the output collection.</typeparam>
            <param name="items">The collection to convert.</param>
            <param name="objectCreationFunc">The function used to created each <typeparamref name="TOut"/> type object.</param>
            <returns>A non-threadsafe collection containing the results of the conversion, or null if <paramref name="items"/> was null.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.CollectionToThreadSafeCollectionIModifiable``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Applies the <paramref name="objectCreationFunc"/> to each item in <paramref name="items"/> and returns a threadsafe collection containing the results.
            </summary>
            <typeparam name="TIn">The type of the input collection.</typeparam>
            <typeparam name="TOut">The type of the output collection.</typeparam>
            <param name="items">The collection to convert.</param>
            <param name="objectCreationFunc">The function used to created each <typeparamref name="TOut"/> type object.</param>
            <returns>A threadsafe collection containing the results of the conversion, or null if <paramref name="items"/> was null.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.StreamToString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads entire Stream into a string.  When null encoding is provided, UTF8 is used.
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.EnumerateIfNeededAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Enumerates an enumerable asyncronously if required.  If the enumerable is of type IPagedCollection(T) then 
            ToListAsync is called on it.  Otherwise the enumerable is returned as is. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.GetIfChangedOrNull``1(Microsoft.Azure.Batch.PropertyAccessor{System.Nullable{``0}})">
            <summary>
            Gets the object if the property has been changed, otherwise returns null.
            </summary>
            <exception cref="T:System.InvalidOperationException">When the property was changed to null, since the patch REST verb does not support that today in Batch.</exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.GetTransportObjectIfChanged``2(Microsoft.Azure.Batch.PropertyAccessor{``0})">
            <summary>
            Gets the transport object if the property has been changed, otherwise returns null.
            </summary>
            <exception cref="T:System.InvalidOperationException">When the property was changed to null, since the patch REST verb does not support that today in Batch.</exception>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.GetTransportObjectIfChanged``2(Microsoft.Azure.Batch.PropertyAccessor{System.Collections.Generic.IList{``0}})">
            <summary>
            Gets the transport object if the property has been changed, otherwise returns null.
            </summary>
            <exception cref="T:System.InvalidOperationException">When the property was changed to null, since the patch REST verb does not support that today in Batch.</exception>
        </member>
    </members>
</doc>
